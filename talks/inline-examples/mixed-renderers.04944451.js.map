{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-9ad14acfe4f80f1cfee32b281017991e.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/util.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/has.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/webgl.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/webgl/Buffer.js","node_modules/ol/src/webgl/ContextEventType.js","node_modules/ol/src/webgl/PostProcessingPass.js","node_modules/ol/src/vec/mat4.js","node_modules/ol/src/webgl/Helper.js","node_modules/ol/src/renderer/webgl/Layer.js","node_modules/ol/src/webgl/RenderTarget.js","node_modules/ol/src/worker/webgl.js","node_modules/ol/src/renderer/webgl/PointsLayer.js","node_modules/ol/src/layer/Heatmap.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/Feature.js","node_modules/ol/src/geom/GeometryCollection.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/style/Text.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/xml.js","node_modules/ol/src/format/XMLFeature.js","node_modules/ol/src/format/xsd.js","node_modules/ol/src/format/KML.js","node_modules/ieee754/index.js","node_modules/pbf/index.js","node_modules/ol/src/render/Feature.js","node_modules/ol/src/format/MVT.js","node_modules/@parcel/runtime-js/lib/bundle-url.js","node_modules/@parcel/runtime-js/lib/relative-path.js","node_modules/@parcel/runtime-js/lib/runtime-ca6564fba06c1415ad08fd3e11f518ce.js","node_modules/@parcel/runtime-js/lib/runtime-57da72cb66bfba510e50504e4714a779.js","src/mixed-renderers.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./bundle-manifest').register(JSON.parse(\"{\\\"3Wo4N\\\":\\\"mixed-renderers.04944451.js\\\",\\\"oaxmK\\\":\\\"world.843a5534.svg\\\",\\\"6la4e\\\":\\\"2012_Earthquakes_Mag5.c58e23ec.kml\\\",\\\"43PvP\\\":\\\"basemap.fe5b33cb.css\\\"}\"));","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function () {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  return 'matrix(' + mat.join(', ') + ')';\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[\n            i\n          ]).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[\n            i\n          ]).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key)\n    ? changeEventTypeCache[key]\n    : (changeEventTypeCache[key] = 'change:' + key);\n}\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex =\n      zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(\n      LayerProperty.EXTENT\n    ));\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addEventListener(\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\nimport {toString} from '../transform.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nlet createTransformStringCanvas = null;\n\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return toString(transform);\n  } else {\n    if (!createTransformStringCanvas) {\n      createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n    }\n    createTransformStringCanvas.style.transform = toString(transform);\n    return createTransformStringCanvas.style.transform;\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(layer);\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addEventListener(\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_\n    );\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(\n      Property.LAYERS\n    ));\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance\n      ? moveTolerance * DEVICE_PIXEL_RATIO\n      : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      (tile.hifi && state === TileState.LOADED) ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry = this.getSimplifiedGeometryInternal(\n      squaredTolerance\n    );\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      ViewProperty.CENTER\n    ));\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.minResolution_\n    ));\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.maxResolution_\n    ));\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n          .clone()\n          .transform(userProjection, this.getProjection()));\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n    const coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]\n    );\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    let centerRotX = (minRotX + maxRotX) / 2;\n    let centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addEventListener(\n      getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_\n    );\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(\n      MapProperty.TARGET\n    ));\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(\n      MapProperty.SIZE\n    ));\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (!hasArea(size)) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {\n  createOrUpdateFromCoordinates,\n  getBottomLeft,\n  getCenter,\n  getTopRight,\n  scaleFromCenter,\n} from '../extent.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    let extent = this.getGeometry().getExtent();\n\n    if (this.out_) {\n      const mapExtent = view.calculateExtentInternal(size);\n      const boxPixelExtent = createOrUpdateFromCoordinates([\n        map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n        map.getPixelFromCoordinateInternal(getTopRight(extent)),\n      ]);\n      const factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n\n      scaleFromCenter(mapExtent, 1 / factor);\n      extent = mapExtent;\n    }\n\n    const resolution = view.getConstrainedResolution(\n      view.getResolutionForExtentInternal(extent, size)\n    );\n    const center = view.getConstrainedCenter(getCenter(extent), resolution);\n\n    view.animateInternal({\n      resolution: resolution,\n      center: center,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      const renderOptions = this.createRenderOptions();\n\n      this.createHitDetectionCanvas_(renderOptions);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    if (!this.canvas_[pixelRatio || 1]) {\n      const renderOptions = this.createRenderOptions();\n\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio || 1,\n        renderOptions.size * pixelRatio || 1\n      );\n\n      this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n\n      this.canvas_[pixelRatio || 1] = context.canvas;\n    }\n    return this.canvas_[pixelRatio || 1];\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.imageSize_;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    const renderOptions = this.createRenderOptions();\n\n    const context = createCanvasContext2D(\n      renderOptions.size,\n      renderOptions.size\n    );\n\n    this.draw_(renderOptions, context, 0, 0, 1);\n\n    this.canvas_ = {};\n    this.canvas_[1] = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    const size = context.canvas.width;\n    const imageSize = size;\n    const displacement = this.getDisplacement();\n\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    this.createHitDetectionCanvas_(renderOptions);\n\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, x, y, pixelRatio) {\n    let i, angle0, radiusC;\n\n    // reset transform\n    context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionCanvas_ = this.getImage(1);\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      let i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(\n          geometry\n        ));\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(\n      Property.RENDER_ORDER\n    ));\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clip(context, frameState, extent) {\n    const pixelRatio = frameState.pixelRatio;\n    const halfWidth = (frameState.size[0] * pixelRatio) / 2;\n    const halfHeight = (frameState.size[1] * pixelRatio) / 2;\n    const rotation = frameState.viewState.rotation;\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate = (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    let previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  let previousAngle;\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context[\n      'strokeStyle'\n    ] = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText = /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(0, 0, contextSize, contextSize)\n        .data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      2,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset\n          ? strokeStyleLineDashOffset\n          : defaultLineDashOffset,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          this.pixelRatio_ *\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth),\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      const imageSize = imageStyle.getSize();\n      if (!imageSize) {\n        this.image_ = null;\n      } else {\n        const imageAnchor = imageStyle.getAnchor();\n        // FIXME pixel ratio\n        const imageImage = imageStyle.getImage(1);\n        const imageOrigin = imageStyle.getOrigin();\n        const imageScale = imageStyle.getScaleArray();\n        this.imageAnchorX_ = imageAnchor[0];\n        this.imageAnchorY_ = imageAnchor[1];\n        this.imageHeight_ = imageSize[1];\n        this.image_ = imageImage;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = [\n          this.pixelRatio_ * imageScale[0],\n          this.pixelRatio_ * imageScale[1],\n        ];\n        this.imageWidth_ = imageSize[0];\n      }\n    }\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.getImageSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const img = document.createElement('canvas');\n        img.width = imgSize[0];\n        img.height = imgSize[1];\n        const imgContext = img.getContext('2d', {alpha: false});\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      clipped =\n        !containsExtent(layerExtent, frameState.extent) &&\n        intersectsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    this.renderWorlds(replayGroup, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.renderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)\n    ) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(\n          toUserExtent(loadExtents[i], projection),\n          resolution,\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/webgl\n */\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [opt_attributes] Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>}\n */\nlet supportedExtensions;\n\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n","/**\n * @module ol/webgl/Buffer\n */\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER} from '../webgl.js';\nimport {DYNAMIC_DRAW, STATIC_DRAW, STREAM_DRAW} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n * @api\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [opt_usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, opt_usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array}\n     */\n    this.array = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type = type;\n\n    assert(type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER, 62);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   */\n  ofSize(size) {\n    this.array = new (getArrayClassForType(this.type))(size);\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {Array<number>} array Numerical array\n   */\n  fromArray(array) {\n    this.array = getArrayClassForType(this.type).from(array);\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   */\n  fromArrayBuffer(buffer) {\n    this.array = new (getArrayClassForType(this.type))(buffer);\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array} Array.\n   */\n  getArray() {\n    return this.array;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array ? this.array.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord);\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {number} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord);\n *   }\n *   ```\n *\n * @api\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position'\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize'\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image'\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach(\n        function (name) {\n          this.uniforms_.push({\n            value: options.uniforms[name],\n            location: gl.getUniformLocation(this.renderTargetProgram_, name),\n          });\n        }.bind(this)\n      );\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @api\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @api\n   */\n  apply(frameState, nextPass) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    // render the frame buffer to the canvas\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    this.applyUniforms(frameState);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   * @api\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data)\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n  getSupportedExtensions,\n} from '../webgl.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\nimport {includes} from '../array.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Uniform names used in the default shaders: `PROJECTION_MATRIX`, `OFFSET_SCALE_MATRIX`.\n * and `OFFSET_ROTATION_MATRIX`.\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n  OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Use {@link enableAttributeArray_} and either\n *   the default attribute names in {@link module:ol/webgl/Helper.DefaultAttrib} or custom ones.\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n *\n * @api\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n    const options = opt_options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ = this.handleWebGLContextRestored.bind(\n      this\n    );\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = document.createElement('canvas');\n    this.canvas_.style.position = 'absolute';\n    this.canvas_.style.left = '0';\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getContext(this.canvas_);\n    const gl = this.getGL();\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    assert(includes(getSupportedExtensions(), 'OES_element_index_uint'), 63);\n    gl.getExtension('OES_element_index_uint');\n\n    this.canvas_.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, WebGLUniformLocation>}\n     */\n    this.uniformLocations_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.attribLocations_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      for (const name in options.uniforms) {\n        this.uniforms_.push({\n          name: name,\n          value: options.uniforms[name],\n        });\n      }\n    }\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(function (options) {\n          return new WebGLPostProcessingPass({\n            webGlContext: gl,\n            scaleRatio: options.scaleRatio,\n            vertexShader: options.vertexShader,\n            fragmentShader: options.fragmentShader,\n            uniforms: options.uniforms,\n          });\n        })\n      : [new WebGLPostProcessingPass({webGlContext: gl})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   * @api\n   */\n  bindBuffer(buffer) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   * @api\n   */\n  flushBufferData(buffer) {\n    const gl = this.getGL();\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.canvas_.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @api\n   */\n  prepareDraw(frameState) {\n    const gl = this.getGL();\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n\n    gl.useProgram(this.currentProgram_);\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n    gl.useProgram(this.currentProgram_);\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [opt_disableAlphaBlend] If true, no alpha blending will happen.\n   */\n  prepareDrawToRenderTarget(frameState, renderTarget, opt_disableAlphaBlend) {\n    const gl = this.getGL();\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(\n      gl.ONE,\n      opt_disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA\n    );\n\n    gl.useProgram(this.currentProgram_);\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   * @api\n   */\n  drawElements(start, end) {\n    const gl = this.getGL();\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @api\n   */\n  finalizeDraw(frameState) {\n    // apply post processes using the next one as target\n    for (let i = 0; i < this.postProcessPasses_.length; i++) {\n      this.postProcessPasses_[i].apply(\n        frameState,\n        this.postProcessPasses_[i + 1] || null\n      );\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   * @api\n   */\n  getCanvas() {\n    return this.canvas_;\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n\n    const offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    const offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_SCALE_MATRIX,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix)\n    );\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_ROTATION_MATRIX,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix)\n    );\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution\n    );\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach(\n      function (uniform) {\n        value =\n          typeof uniform.value === 'function'\n            ? uniform.value(frameState)\n            : uniform.value;\n\n        // apply value based on type\n        if (\n          value instanceof HTMLCanvasElement ||\n          value instanceof HTMLImageElement ||\n          value instanceof ImageData\n        ) {\n          // create a texture & put data\n          if (!uniform.texture) {\n            uniform.prevValue = undefined;\n            uniform.texture = gl.createTexture();\n          }\n          gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n          gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n          const imageReady =\n            !(value instanceof HTMLImageElement) ||\n            /** @type {HTMLImageElement} */ (value).complete;\n          if (imageReady && uniform.prevValue !== value) {\n            uniform.prevValue = value;\n            gl.texImage2D(\n              gl.TEXTURE_2D,\n              0,\n              gl.RGBA,\n              gl.RGBA,\n              gl.UNSIGNED_BYTE,\n              value\n            );\n          }\n\n          // fill texture slots by increasing index\n          gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n        } else if (Array.isArray(value) && value.length === 6) {\n          this.setUniformMatrixValue(\n            uniform.name,\n            fromTransform(this.tmpMat4_, value)\n          );\n        } else if (Array.isArray(value) && value.length <= 4) {\n          switch (value.length) {\n            case 2:\n              gl.uniform2f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1]\n              );\n              return;\n            case 3:\n              gl.uniform3f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1],\n                value[2]\n              );\n              return;\n            case 4:\n              gl.uniform4f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1],\n                value[2],\n                value[3]\n              );\n              return;\n            default:\n              return;\n          }\n        } else if (typeof value === 'number') {\n          gl.uniform1f(this.getUniformLocation(uniform.name), value);\n        }\n      }.bind(this)\n    );\n  }\n\n  /**\n   * Use a program.  If the program is already in use, this will return `false`.\n   * @param {WebGLProgram} program Program.\n   * @return {boolean} Changed.\n   * @api\n   */\n  useProgram(program) {\n    if (program == this.currentProgram_) {\n      return false;\n    } else {\n      const gl = this.getGL();\n      gl.useProgram(program);\n      this.currentProgram_ = program;\n      this.uniformLocations_ = {};\n      this.attribLocations_ = {};\n      return true;\n    }\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.getGL();\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   * @api\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.getGL();\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compliation failed: ${gl.getShaderInfoLog(\n        fragmentShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   * @api\n   */\n  getUniformLocation(name) {\n    if (this.uniformLocations_[name] === undefined) {\n      this.uniformLocations_[name] = this.getGL().getUniformLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.uniformLocations_[name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   * @api\n   */\n  getAttributeLocation(name) {\n    if (this.attribLocations_[name] === undefined) {\n      this.attribLocations_[name] = this.getGL().getAttribLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.attribLocations_[name];\n  }\n\n  /**\n   * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   * @api\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n\n    resetTransform(transform);\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1]\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   * @api\n   */\n  setUniformFloatValue(uniform, value) {\n    this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   * @api\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.getGL().uniformMatrix4fv(\n      this.getUniformLocation(uniform),\n      false,\n      value\n    );\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.getGL().enableVertexAttribArray(location);\n    this.getGL().vertexAttribPointer(\n      location,\n      size,\n      type,\n      false,\n      stride,\n      offset\n    );\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   * @api\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @private\n   */\n  handleWebGLContextLost() {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {}\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [opt_data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [opt_texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   * @api\n   */\n  createTexture(size, opt_data, opt_texture) {\n    const gl = this.getGL();\n    const texture = opt_texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (opt_data) {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        format,\n        type,\n        opt_data\n      );\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n * @api\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_BUFFERS: 'GENERATE_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions Render instructions raw binary buffer.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {number} [customAttributesCount] Amount of custom attributes count in the render instructions.\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(layer, opt_options) {\n    super(layer);\n\n    const options = opt_options || {};\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper = new WebGLHelper({\n      postProcesses: options.postProcesses,\n      uniforms: options.uniforms,\n    });\n\n    if (options.className !== undefined) {\n      this.helper.getCanvas().className = options.className;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.helper.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      // RenderEvent does not get a context or an inversePixelTransform, because WebGL allows much less direct editing than Canvas2d does.\n      const event = new RenderEvent(type, null, frameState, null);\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, frameState);\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, frameState);\n  }\n}\n\nconst tmpArray_ = [];\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesCount Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesCount,\n  bufferPositions\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesCount;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesCount;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [opt_array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, opt_array) {\n  const array = opt_array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n * @api\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [opt_size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, opt_size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = opt_size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   * @api\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   * @api\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   * @api\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   * @api\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n","\n        const source = \"var e=\\\"function\\\"==typeof Object.assign?Object.assign:function(e,n){if(null==e)throw new TypeError(\\\"Cannot convert undefined or null to object\\\");for(var t=Object(e),r=1,o=arguments.length;r<o;++r){var i=arguments[r];if(null!=i)for(var f in i)i.hasOwnProperty(f)&&(t[f]=i[f])}return t},n=\\\"GENERATE_BUFFERS\\\",t=[],r={vertexPosition:0,indexPosition:0};function o(e,n,t,r,o){e[n+0]=t,e[n+1]=r,e[n+2]=o}function i(e,n,i,f,s,u){var a=3+s,l=e[n+0],v=e[n+1],c=t;c.length=s;for(var g=0;g<c.length;g++)c[g]=e[n+2+g];var b=u?u.vertexPosition:0,h=u?u.indexPosition:0,d=b/a;return o(i,b,l,v,0),c.length&&i.set(c,b+3),o(i,b+=a,l,v,1),c.length&&i.set(c,b+3),o(i,b+=a,l,v,2),c.length&&i.set(c,b+3),o(i,b+=a,l,v,3),c.length&&i.set(c,b+3),b+=a,f[h++]=d,f[h++]=d+1,f[h++]=d+3,f[h++]=d+1,f[h++]=d+2,f[h++]=d+3,r.vertexPosition=b,r.indexPosition=h,r}var f=self;f.onmessage=function(t){var r=t.data;if(r.type===n){for(var o=r.customAttributesCount,s=2+o,u=new Float32Array(r.renderInstructions),a=u.length/s,l=4*a*(o+3),v=new Uint32Array(6*a),c=new Float32Array(l),g=null,b=0;b<u.length;b+=s)g=i(u,b,c,v,o,g);var h=e({vertexBuffer:c.buffer,indexBuffer:v.buffer,renderInstructions:u.buffer},r);f.postMessage(h,[c.buffer,v.buffer,u.buffer])}};\";\n        const blob = new Blob([source], {type: 'application/javascript'});\n        const url = URL.createObjectURL(blob);\n        export function create() {\n          return new Worker(url);\n        }\n      \n","/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer, {\n  WebGLWorkerMessageType,\n  colorDecodeId,\n  colorEncodeId,\n} from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {AttributeType, DefaultUniform} from '../../webgl/Helper.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n} from '../../transform.js';\nimport {assert} from '../../asserts.js';\nimport {buffer, createEmpty, equals} from '../../extent.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {getUid} from '../../util.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {string} [hitVertexShader] Vertex shader source for hit detection rendering.\n * @property {string} [hitFragmentShader] Fragment shader source for hit detection rendering.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      className: options.className,\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.sourceRevision_ = -1;\n\n    this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.hitVerticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.indicesBuffer_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      DYNAMIC_DRAW\n    );\n\n    this.program_ = this.helper.getProgram(\n      options.fragmentShader,\n      options.vertexShader\n    );\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ =\n      options.hitFragmentShader && options.hitVertexShader ? true : false;\n\n    this.hitProgram_ =\n      this.hitDetectionEnabled_ &&\n      this.helper.getProgram(\n        options.hitFragmentShader,\n        options.hitVertexShader\n      );\n\n    const customAttributes = options.attributes\n      ? options.attributes.map(function (attribute) {\n          return {\n            name: 'a_' + attribute.name,\n            size: 1,\n            type: AttributeType.FLOAT,\n          };\n        })\n      : [];\n\n    /**\n     * A list of attributes used by the renderer. By default only the position and\n     * index of the vertex (0 to 3) are required.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.attributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    /**\n     * A list of attributes used for hit detection.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.hitDetectionAttributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_hitColor',\n        size: 4,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_featureUid',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    this.customAttributes = options.attributes ? options.attributes : [];\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    /**\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.renderTransform_ = createTransform();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.invertRenderTransform_ = createTransform();\n\n    /**\n     * @type {Float32Array}\n     * @private\n     */\n    this.renderInstructions_ = new Float32Array(0);\n\n    /**\n     * These instructions are used for hit detection\n     * @type {Float32Array}\n     * @private\n     */\n    this.hitRenderInstructions_ = new Float32Array(0);\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_ =\n      this.hitDetectionEnabled_ && new WebGLRenderTarget(this.helper);\n\n    this.worker_ = createWebGLWorker();\n    this.worker_.addEventListener(\n      'message',\n      /**\n       * @param {*} event Event.\n       * @this {WebGLPointsLayerRenderer}\n       */\n      function (event) {\n        const received = event.data;\n        if (received.type === WebGLWorkerMessageType.GENERATE_BUFFERS) {\n          const projectionTransform = received.projectionTransform;\n          if (received.hitDetection) {\n            this.hitVerticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.hitVerticesBuffer_);\n          } else {\n            this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.verticesBuffer_);\n          }\n          this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n          this.helper.flushBufferData(this.indicesBuffer_);\n\n          this.renderTransform_ = projectionTransform;\n          makeInverseTransform(\n            this.invertRenderTransform_,\n            this.renderTransform_\n          );\n          if (received.hitDetection) {\n            this.hitRenderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n          } else {\n            this.renderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n          }\n\n          this.getLayer().changed();\n        }\n      }.bind(this)\n    );\n\n    /**\n     * This object will be updated when the source changes. Key is uid.\n     * @type {Object<string, FeatureCacheItem>}\n     * @private\n     */\n    this.featureCache_ = {};\n\n    /**\n     * Amount of features in the cache.\n     * @type {number}\n     * @private\n     */\n    this.featureCount_ = 0;\n\n    const source = this.getLayer().getSource();\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this\n      ),\n    ];\n    source.forEachFeature(\n      function (feature) {\n        this.featureCache_[getUid(feature)] = {\n          feature: feature,\n          properties: feature.getProperties(),\n          geometry: feature.getGeometry(),\n        };\n        this.featureCount_++;\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n    this.featureCount_++;\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    delete this.featureCache_[getUid(feature)];\n    this.featureCount_--;\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.featureCache_ = {};\n    this.featureCount_ = 0;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    this.preRender(frameState);\n\n    const renderCount = this.indicesBuffer_.getSize();\n    this.helper.drawElements(0, renderCount);\n    this.helper.finalizeDraw(frameState);\n    const canvas = this.helper.getCanvas();\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const opacity = layerState.opacity;\n    if (opacity !== parseFloat(canvas.style.opacity)) {\n      canvas.style.opacity = String(opacity);\n    }\n\n    if (this.hitDetectionEnabled_) {\n      this.renderHitDetection(frameState);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(frameState);\n\n    return canvas;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.rebuildBuffers_(frameState);\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    // apply the current projection transform with the invert of the one used to fill buffers\n    this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n    multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n\n    this.helper.useProgram(this.program_);\n    this.helper.prepareDraw(frameState);\n\n    // write new data\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n\n    this.helper.enableAttributes(this.attributes);\n\n    return true;\n  }\n\n  /**\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n   * @param {import(\"../../PluggableMap\").FrameState} frameState Frame state.\n   * @private\n   */\n  rebuildBuffers_(frameState) {\n    // saves the projection transform for the current frame state\n    const projectionTransform = createTransform();\n    this.helper.makeProjectionTransform(frameState, projectionTransform);\n\n    // here we anticipate the amount of render instructions that we well generate\n    // this can be done since we know that for normal render we only have x, y as base instructions,\n    // and x, y, r, g, b, a and featureUid for hit render instructions\n    // and we also know the amount of custom attributes to append to these\n    const totalInstructionsCount =\n      (2 + this.customAttributes.length) * this.featureCount_;\n    if (\n      !this.renderInstructions_ ||\n      this.renderInstructions_.length !== totalInstructionsCount\n    ) {\n      this.renderInstructions_ = new Float32Array(totalInstructionsCount);\n    }\n    if (this.hitDetectionEnabled_) {\n      const totalHitInstructionsCount =\n        (7 + this.customAttributes.length) * this.featureCount_;\n      if (\n        !this.hitRenderInstructions_ ||\n        this.hitRenderInstructions_.length !== totalHitInstructionsCount\n      ) {\n        this.hitRenderInstructions_ = new Float32Array(\n          totalHitInstructionsCount\n        );\n      }\n    }\n\n    // loop on features to fill the buffer\n    let featureCache, geometry;\n    const tmpCoords = [];\n    const tmpColor = [];\n    let renderIndex = 0;\n    let hitIndex = 0;\n    let hitColor;\n    for (const featureUid in this.featureCache_) {\n      featureCache = this.featureCache_[featureUid];\n      geometry = /** @type {import(\"../../geom\").Point} */ (featureCache.geometry);\n      if (!geometry || geometry.getType() !== GeometryType.POINT) {\n        continue;\n      }\n\n      tmpCoords[0] = geometry.getFlatCoordinates()[0];\n      tmpCoords[1] = geometry.getFlatCoordinates()[1];\n      applyTransform(projectionTransform, tmpCoords);\n\n      hitColor = colorEncodeId(hitIndex + 6, tmpColor);\n\n      this.renderInstructions_[renderIndex++] = tmpCoords[0];\n      this.renderInstructions_[renderIndex++] = tmpCoords[1];\n\n      // for hit detection, the feature uid is saved in the opacity value\n      // and the index of the opacity value is encoded in the color values\n      if (this.hitDetectionEnabled_) {\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[0];\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[0];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[2];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[3];\n        this.hitRenderInstructions_[hitIndex++] = Number(featureUid);\n      }\n\n      // pushing custom attributes\n      let value;\n      for (let j = 0; j < this.customAttributes.length; j++) {\n        value = this.customAttributes[j].callback(\n          featureCache.feature,\n          featureCache.properties\n        );\n        this.renderInstructions_[renderIndex++] = value;\n        if (this.hitDetectionEnabled_) {\n          this.hitRenderInstructions_[hitIndex++] = value;\n        }\n      }\n    }\n\n    /** @type {import('./Layer').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      type: WebGLWorkerMessageType.GENERATE_BUFFERS,\n      renderInstructions: this.renderInstructions_.buffer,\n      customAttributesCount: this.customAttributes.length,\n    };\n    // additional properties will be sent back as-is by the worker\n    message['projectionTransform'] = projectionTransform;\n    this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n    this.renderInstructions_ = null;\n\n    /** @type {import('./Layer').WebGLWorkerGenerateBuffersMessage} */\n    if (this.hitDetectionEnabled_) {\n      const hitMessage = {\n        type: WebGLWorkerMessageType.GENERATE_BUFFERS,\n        renderInstructions: this.hitRenderInstructions_.buffer,\n        customAttributesCount: 5 + this.customAttributes.length,\n      };\n      hitMessage['projectionTransform'] = projectionTransform;\n      hitMessage['hitDetection'] = true;\n      this.worker_.postMessage(hitMessage, [\n        this.hitRenderInstructions_.buffer,\n      ]);\n      this.hitRenderInstructions_ = null;\n    }\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    assert(this.hitDetectionEnabled_, 66);\n    if (!this.hitRenderInstructions_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice()\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const index = colorDecodeId(color);\n    const opacity = this.hitRenderInstructions_[index];\n    const uid = Math.floor(opacity).toString();\n\n    const source = this.getLayer().getSource();\n    const feature = source.getFeatureByUid(uid);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Render the hit detection data to the corresponding render target\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState current frame state\n   */\n  renderHitDetection(frameState) {\n    // skip render entirely if vertex buffers not ready/generated yet\n    if (!this.hitVerticesBuffer_.getSize()) {\n      return;\n    }\n\n    this.hitRenderTarget_.setSize([\n      Math.floor(frameState.size[0] / 2),\n      Math.floor(frameState.size[1] / 2),\n    ]);\n\n    this.helper.useProgram(this.hitProgram_);\n    this.helper.prepareDrawToRenderTarget(\n      frameState,\n      this.hitRenderTarget_,\n      true\n    );\n\n    this.helper.bindBuffer(this.hitVerticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n\n    this.helper.enableAttributes(this.hitDetectionAttributes);\n\n    const renderCount = this.indicesBuffer_.getSize();\n    this.helper.drawElements(0, renderCount);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default WebGLPointsLayerRenderer;\n","/**\n * @module ol/layer/Heatmap\n */\nimport VectorLayer from './Vector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getChangeEventType} from '../Object.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Heatmap extends VectorLayer {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addEventListener(\n      getChangeEventType(Property.GRADIENT),\n      this.handleGradientChanged_\n    );\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {WebGLPointsLayerRenderer} A layer renderer.\n   */\n  createRenderer() {\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: function (feature) {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          }.bind(this),\n        },\n      ],\n      vertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_weight = a_weight;\n        }`,\n      fragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\n        }`,\n      hitVertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n        attribute vec4 a_hitColor;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_hitColor = a_hitColor;\n          v_weight = a_weight;\n        }`,\n      hitFragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          if (alpha < 0.05) {\n            discard;\n          }\n\n          gl_FragColor = v_hitColor;\n        }`,\n      uniforms: {\n        u_size: function () {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        }.bind(this),\n        u_blurSlope: function () {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        }.bind(this),\n      },\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: function () {\n              return this.gradient_;\n            }.bind(this),\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (this.get(\n      TileProperty.USE_INTERIM_TILES_ON_ERROR\n    ));\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {createTransformString} from '../../render/canvas.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = createTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[\n          tileCoordKey\n        ]);\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const floatX = origin[0] - (originTileCoord[1] - tileCoord[1]) * dx;\n        const nextX = Math.round(floatX + dx);\n        const floatY = origin[1] - (originTileCoord[2] - tileCoord[2]) * dy;\n        const nextY = Math.round(floatY + dy);\n        const x = Math.round(floatX);\n        const y = Math.round(floatY);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n          layerState.opacity\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @param {number} opacity Opacity.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alpha = opacity * tileAlpha;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (tileAlpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/loadingstrategy\n */\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (format.readFeatures(source, {\n            extent: extent,\n            featureProjection: projection,\n          })),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_ === VOID ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/Feature\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|Object<string, *>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(\n      this.hasProperties() ? this.getProperties() : null\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.geometryName_ = name;\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [opt_geometries] Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (geometries[\n            i\n          ]).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(\n        squaredTolerance\n      );\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport {toSize} from '../size.js';\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {import(\"./TextPlacement.js\").default|string}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {string|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {string|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {string|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {string|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {!Array<number>} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        let array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = [];\n          object[property] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      opt_this !== undefined ? opt_this : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [opt_nodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [opt_namespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  const fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [opt_nodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n      const context = /** @type {NodeStackItem} */ (objectStack[\n        objectStack.length - 1\n      ]);\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      const namespaceURI =\n        opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [opt_structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  const structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(\n  object,\n  parsersNS,\n  node,\n  objectStack,\n  opt_this\n) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  const length = (opt_keys !== undefined ? opt_keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        opt_this !== undefined ? opt_this : this,\n        value,\n        objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          opt_this,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  objectStack.push(object);\n  serialize(\n    serializersNS,\n    nodeFactory,\n    values,\n    objectStack,\n    opt_keys,\n    opt_this\n  );\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.XML;\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readFeatureFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, opt_options) {\n    const features = this.readFeaturesFromDocument(doc, opt_options);\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    if (!source) {\n      return [];\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readFeaturesFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, opt_options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), opt_options)\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readGeometryFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readProjectionFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, opt_options) {\n    const node = this.writeFeatureNode(feature, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    const node = this.writeFeaturesNode(features, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, opt_options) {\n    const node = this.writeGeometryNode(geometry, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, opt_options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {extend, includes} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/IconAnchorUnits\").default} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/IconAnchorUnits\").default} yunits Units of Y.\n * @property {import(\"../style/IconOrigin.js\").default} origin Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/IconAnchorUnits\").default>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {number}\n */\nlet DEFAULT_IMAGE_SCALE_MULTIPLIER;\n\n/**\n * @type {import(\"../style/Image.js\").default}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, opt_options),\n    ]);\n    if (feature) {\n      return feature;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, opt_options),\n      ]);\n      if (features) {\n        return features;\n      } else {\n        return [];\n      }\n    } else if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, opt_options),\n      ]);\n      if (feature) {\n        return [feature];\n      } else {\n        return [];\n      }\n    } else if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, opt_options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readNameFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source))\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n))\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [opt_options],\n      orderedKeys,\n      this\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    let imageSize = imageStyle.getImageSize();\n    if (imageSize === null) {\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = (imageScale[0] * imageSize[0]) / 2;\n      textOffset[1] = (-imageScale[1] * imageSize[1]) / 2;\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return (\n                  type === GeometryType.POINT ||\n                  type === GeometryType.MULTI_POINT\n                );\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            drawName =\n              type === GeometryType.POINT || type === GeometryType.MULTI_POINT;\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && name.search(/&[^&]+;/) > -1) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n      if (scale === undefined) {\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      flatCoordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(flatCoordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n    lineString.setProperties(properties, true);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, GeometryLayout.XYZ);\n    point.setProperties(properties, true);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    ('fillStyle' in styleObject\n      ? styleObject['fillStyle']\n      : DEFAULT_FILL_STYLE);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = styleObject['imageStyle'];\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    ('textStyle' in styleObject\n      ? styleObject['textStyle']\n      : DEFAULT_TEXT_STYLE);\n  const strokeStyle =\n    /** @type {Stroke} */\n    ('strokeStyle' in styleObject\n      ? styleObject['strokeStyle']\n      : DEFAULT_STROKE_STYLE);\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            return new GeometryCollection(\n              geometry\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type !== GeometryType.POLYGON &&\n                    type !== GeometryType.MULTI_POLYGON\n                  );\n                })\n            );\n          } else if (\n            type !== GeometryType.POLYGON &&\n            type !== GeometryType.MULTI_POLYGON\n          ) {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            return new GeometryCollection(\n              geometry\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type === GeometryType.POLYGON ||\n                    type === GeometryType.MULTI_POLYGON\n                  );\n                })\n            );\n          } else if (\n            type === GeometryType.POLYGON ||\n            type === GeometryType.MULTI_POLYGON\n          ) {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY || layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName']\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value']\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value']\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h'])\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  })\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: IconAnchorUnits.PIXELS,\n          y: size[1] - anchor[1],\n          yunits: IconAnchorUnits.PIXELS,\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ]\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === GeometryType.GEOMETRY_COLLECTION) {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === GeometryType.MULTI_POINT) {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints()\n          );\n        } else if (type === GeometryType.MULTI_LINE_STRING) {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings()\n          );\n        } else if (type === GeometryType.MULTI_POLYGON) {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons()\n          );\n        } else if (\n          type === GeometryType.POINT ||\n          type === GeometryType.LINE_STRING ||\n          type === GeometryType.POLYGON\n        ) {\n          geometries.push(geometry);\n        } else {\n          assert(false, 39); // Unknown geometry type\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_POINT) {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_LINE_STRING) {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_POLYGON) {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === GeometryType.GEOMETRY_COLLECTION) {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type === GeometryType.POINT ||\n                    type === GeometryType.MULTI_POINT\n                  );\n                }).length;\n            }\n            return (\n              type === GeometryType.POINT || type === GeometryType.MULTI_POINT\n            );\n          }\n        });\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === GeometryType.GEOMETRY_COLLECTION) {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return (\n                      type === GeometryType.LINE_STRING ||\n                      type === GeometryType.MULTI_LINE_STRING\n                    );\n                  }).length;\n              }\n              return (\n                type === GeometryType.LINE_STRING ||\n                type === GeometryType.MULTI_LINE_STRING\n              );\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === GeometryType.GEOMETRY_COLLECTION) {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return (\n                      type === GeometryType.POLYGON ||\n                      type === GeometryType.MULTI_POLYGON\n                    );\n                  }).length;\n              }\n              return (\n                type === GeometryType.POLYGON ||\n                type === GeometryType.MULTI_POLYGON\n              );\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/render/Feature\n */\nimport GeometryType from '../geom/GeometryType.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {import(\"../geom/GeometryType.js\").default} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {import(\"../geom/GeometryType.js\").default}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|Array<Array<number>>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === GeometryType.POINT\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return 2;\n  }\n\n  /**\n   * @return {undefined}\n   */\n  getStyleFunction() {\n    return undefined;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {import(\"../geom/GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n  /**\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n}\n\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\nexport default RenderFeature;\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport FormatType from './FormatType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport Units from '../proj/Units.js';\nimport {assert} from '../asserts.js';\nimport {get} from '../proj.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [opt_options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: Units.TILE_PIXELS,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = [];\n    const ends = [];\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == GeometryType.POLYGON) {\n        const endss = [];\n        let offset = 0;\n        let prevEndIndex = 0;\n        for (let i = 0, ii = ends.length; i < ii; ++i) {\n          const end = ends[i];\n          // classifies an array of rings into polygons with outer rings and holes\n          if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n            endss.push(ends.slice(prevEndIndex, i + 1));\n          } else {\n            if (endss.length === 0) {\n              continue;\n            }\n            endss[endss.length - 1].push(ends[prevEndIndex]);\n          }\n          prevEndIndex = i + 1;\n          offset = end;\n        }\n        if (endss.length > 1) {\n          geom = new MultiPolygon(flatCoordinates, GeometryLayout.XY, endss);\n        } else {\n          geom = new Polygon(flatCoordinates, GeometryLayout.XY, ends);\n        }\n      } else {\n        geom =\n          geometryType === GeometryType.POINT\n            ? new Point(flatCoordinates, GeometryLayout.XY)\n            : geometryType === GeometryType.LINE_STRING\n            ? new LineString(flatCoordinates, GeometryLayout.XY)\n            : geometryType === GeometryType.POLYGON\n            ? new Polygon(flatCoordinates, GeometryLayout.XY, ends)\n            : geometryType === GeometryType.MULTI_POINT\n            ? new MultiPoint(flatCoordinates, GeometryLayout.XY)\n            : geometryType === GeometryType.MULTI_LINE_STRING\n            ? new MultiLineString(flatCoordinates, GeometryLayout.XY, ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (this\n        .featureClass_);\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      feature.setId(id);\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.ARRAY_BUFFER;\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    const layers = this.layers_;\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (this.adaptOptions(\n      opt_options\n    ));\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && layers.indexOf(name) == -1) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        features.push(this.createFeature_(pbf, rawFeature, options));\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/GeometryType.js\").default} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/GeometryType.js\").default} */\n  let geometryType;\n  if (type === 1) {\n    geometryType =\n      numEnds === 1 ? GeometryType.POINT : GeometryType.MULTI_POINT;\n  } else if (type === 2) {\n    geometryType =\n      numEnds === 1 ? GeometryType.LINE_STRING : GeometryType.MULTI_LINE_STRING;\n  } else if (type === 3) {\n    geometryType = GeometryType.POLYGON;\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar resolve = require('./bundle-manifest').resolve;\n\nmodule.exports = function (fromId, toId) {\n  return relative(dirname(resolve(fromId)), resolve(toId));\n};\n\nfunction dirname(_filePath) {\n  if (_filePath === '') {\n    return '.';\n  }\n\n  var filePath = _filePath[_filePath.length - 1] === '/' ? _filePath.slice(0, _filePath.length - 1) : _filePath;\n  var slashIndex = filePath.lastIndexOf('/');\n  return slashIndex === -1 ? '.' : filePath.slice(0, slashIndex);\n}\n\nfunction relative(from, to) {\n  if (from === to) {\n    return '';\n  }\n\n  var fromParts = from.split('/');\n\n  if (fromParts[0] === '.') {\n    fromParts.shift();\n  }\n\n  var toParts = to.split('/');\n\n  if (toParts[0] === '.') {\n    toParts.shift();\n  } // Find where path segments diverge.\n\n\n  var i;\n  var divergeIndex;\n\n  for (i = 0; (i < toParts.length || i < fromParts.length) && divergeIndex == null; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      divergeIndex = i;\n    }\n  } // If there are segments from \"from\" beyond the point of divergence,\n  // return back up the path to that point using \"..\".\n\n\n  var parts = [];\n\n  for (i = 0; i < fromParts.length - divergeIndex; i++) {\n    parts.push('..');\n  } // If there are segments from \"to\" beyond the point of divergence,\n  // continue using the remaining segments.\n\n\n  if (toParts.length > divergeIndex) {\n    parts.push.apply(parts, toParts.slice(divergeIndex));\n  }\n\n  return parts.join('/');\n}\n\nmodule.exports._dirname = dirname;\nmodule.exports._relative = relative;","module.exports = require('./bundle-url').getBundleURL() + require('./relative-path')(\"3Wo4N\", \"oaxmK\")","module.exports = require('./bundle-url').getBundleURL() + require('./relative-path')(\"3Wo4N\", \"6la4e\")","import 'ol/ol.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport {Layer, Heatmap} from 'ol/layer';\nimport {composeCssTransform} from 'ol/transform';\nimport VectorSource from 'ol/source/Vector';\nimport {KML} from 'ol/format';\n\n// @ts-ignore\nimport svg from 'url:./data/world.svg';\n// @ts-ignore\nimport earthquakes from 'url:./data/2012_Earthquakes_Mag5.kml';\n\nvar map = new Map({\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    extent: [-180, -90, 180, 90],\n    projection: 'EPSG:4326',\n    zoom: 2\n  })\n});\n\nconst heatmapLayer = new Heatmap({\n  source: new VectorSource({\n    url: earthquakes,\n    format: new KML({\n      extractStyles: false\n    })\n  })\n});\n\nmap.addLayer(heatmapLayer);\n\nvar svgContainer = document.createElement('div');\nvar xhr = new XMLHttpRequest();\nconsole.log(svg)\nxhr.open('GET', svg);\nxhr.addEventListener('load', function() {\n  var svg = xhr.responseXML.documentElement;\n  svgContainer.ownerDocument.importNode(svg, false);\n  svgContainer.appendChild(svg);\n});\nxhr.send();\n\nvar width = 2560;\nvar height = 1280;\nvar svgResolution = 360 / width;\nsvgContainer.style.width = width + 'px';\nsvgContainer.style.height = height + 'px';\nsvgContainer.style.transformOrigin = 'top left';\nsvgContainer.style.position = 'absolute';\nsvgContainer.className = 'svg-layer';\n\nconst svgLayer = new Layer({\n  /**\n   * @param {import(\"ol/PluggableMap\").FrameState} frameState \n   */\n  render: function(frameState) {\n    var scale = svgResolution / frameState.viewState.resolution;\n    var center = frameState.viewState.center;\n    var size = frameState.size;\n    var cssTransform = composeCssTransform(\n      size[0] / 2, size[1] / 2,\n      scale, scale,\n      frameState.viewState.rotation,\n      -center[0] / svgResolution - width / 2, center[1] / svgResolution - height / 2);\n    svgContainer.style.transform = cssTransform;\n    svgContainer.style.opacity = String(svgLayer.getOpacity());\n    return svgContainer;\n  }\n});\n\nmap.addLayer(svgLayer);"],"names":["$7d806a7a603c235ec027b73d847f4d95$var$mapping","$7d806a7a603c235ec027b73d847f4d95$export$357eb1b4f03c1402","pairs","keys","Object","i","length","$7d806a7a603c235ec027b73d847f4d95$export$40339995e8a21591","id","resolved","Error","parcelRequire","register","JSON","parse","$f7bbc97715b7cef936b659025f276afb$export$9099ad97b570f7c","Disposable","this","disposed","prototype","dispose","disposeInternal","$7c21d7646a0313abf7b847efa68bfceb$export$8eda8fbd1364c8a1","a","b","$7c21d7646a0313abf7b847efa68bfceb$export$627ad4a8fadf1912","arr","obj","indexOf","$7c21d7646a0313abf7b847efa68bfceb$export$45934da9231b7323","target","direction","n","$7c21d7646a0313abf7b847efa68bfceb$export$1f4f991ce94838ce","begin","end","tmp","$7c21d7646a0313abf7b847efa68bfceb$export$46e35401bc090c62","data","extension","Array","isArray","$7c21d7646a0313abf7b847efa68bfceb$export$bcc761834e33d339","arr1","arr2","len1","$8ff7925ef9afa7e69604ab9620edac22$export$ad8dd69aa6772cd0","$8ff7925ef9afa7e69604ab9620edac22$export$5c50afa32081505e","$8ff7925ef9afa7e69604ab9620edac22$export$3850addf0fb4e6a7","$cd365e7aabd14aaf6df378f6a61e84d7$export$18e1b4ff5b3c2297","$cd365e7aabd14aaf6df378f6a61e84d7$var$uidCounter_","$cd365e7aabd14aaf6df378f6a61e84d7$export$604e9536b9e0488a","ol_uid","String","$cd365e7aabd14aaf6df378f6a61e84d7$export$f2eb173e8f6e4130","$fd652548d0f540d94aaff6aa830746d2$export$9099ad97b570f7c","_super","AssertionError","code","_this","message","split","call","name","$fd652548d0f540d94aaff6aa830746d2$var$__extends","$2ce41f61858dd350a0b2670bdab4e597$export$b8795f4f643ce74f","assertion","errorCode","$fd652548d0f540d94aaff6aa830746d2$exports","default","$af95442a94d1862a138c401177ef0c4b$var$tmp_","$af95442a94d1862a138c401177ef0c4b$export$6cfa4eec14fd8155","transform","$af95442a94d1862a138c401177ef0c4b$export$77f8d2fc923b14e3","$af95442a94d1862a138c401177ef0c4b$export$4739cf887d3ac19b","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","f","$af95442a94d1862a138c401177ef0c4b$export$6af9bbf310c9e4bf","coordinate","x","y","$af95442a94d1862a138c401177ef0c4b$export$452ae967caf14641","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$af95442a94d1862a138c401177ef0c4b$export$6e6aac0f60e83c70","source","mat","det","$af95442a94d1862a138c401177ef0c4b$export$47bee913e0e80eb4","join","$8913dbc1b585601bf0ecb482246c0b4c$export$9099ad97b570f7c","$8ebfb36ef5532881c5652b708da2c120$export$14e1765886db335a","extent","value","opt_extent","$8ebfb36ef5532881c5652b708da2c120$export$d6a0542127b96c83","slice","$8ebfb36ef5532881c5652b708da2c120$export$c7d6a927f416dd39","dx","dy","$8ebfb36ef5532881c5652b708da2c120$export$c422a9fcb5f1ee5c","$8ebfb36ef5532881c5652b708da2c120$export$cc70e7e516e4370f","$8ebfb36ef5532881c5652b708da2c120$export$4f55e2d709659e7b","extent1","extent2","$8ebfb36ef5532881c5652b708da2c120$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","$8ebfb36ef5532881c5652b708da2c120$export$ea8082d0226d35a5","$8ebfb36ef5532881c5652b708da2c120$export$80741250c74fd4fa","Infinity","$8ebfb36ef5532881c5652b708da2c120$export$b6ab620e694fb080","$8ebfb36ef5532881c5652b708da2c120$export$355d8dd7ec88232f","flatCoordinates","offset","stride","$8ebfb36ef5532881c5652b708da2c120$export$4b116deb3079b147","$8ebfb36ef5532881c5652b708da2c120$export$bcc761834e33d339","$8ebfb36ef5532881c5652b708da2c120$export$2852acc8f8b94686","$8ebfb36ef5532881c5652b708da2c120$export$bfc2e43ae5c3c00c","coordinates","ii","$8ebfb36ef5532881c5652b708da2c120$export$8696fee511ea7c7a","min","max","$8ebfb36ef5532881c5652b708da2c120$export$3932426cd8118930","$8ebfb36ef5532881c5652b708da2c120$export$4e2fc25ce97f3583","$8ebfb36ef5532881c5652b708da2c120$export$339e303bf205caae","$8ebfb36ef5532881c5652b708da2c120$export$3212225221d5bc14","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$8ebfb36ef5532881c5652b708da2c120$export$e178c8044d3d0a05","$8ebfb36ef5532881c5652b708da2c120$export$c491031eb9adcc3a","intersection","$8ebfb36ef5532881c5652b708da2c120$export$c3bd2c3b798b0350","$8ebfb36ef5532881c5652b708da2c120$export$5100f0815ea32995","$8ebfb36ef5532881c5652b708da2c120$export$35aedeaeee8be6cd","$8ebfb36ef5532881c5652b708da2c120$export$3dc3550566517965","$8ebfb36ef5532881c5652b708da2c120$export$988399e568471db1","$8ebfb36ef5532881c5652b708da2c120$export$76e02248c0889c3e","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$8ebfb36ef5532881c5652b708da2c120$var$_boundingExtentXYs","$916dab65013919ad0345478f9a9f4e0f$export$4b8705656de00c72","$916dab65013919ad0345478f9a9f4e0f$export$4a376e0f60d976ee","cosh","exp","log2","$916dab65013919ad0345478f9a9f4e0f$export$fd0b1e5ac4df516c","t","$916dab65013919ad0345478f9a9f4e0f$export$8b6706701cd75ea9","$916dab65013919ad0345478f9a9f4e0f$export$11468133b1231643","angleInRadians","PI","$916dab65013919ad0345478f9a9f4e0f$export$4fc80c88d72f096","angleInDegrees","$916dab65013919ad0345478f9a9f4e0f$export$3334706ffb3dccb1","r","$916dab65013919ad0345478f9a9f4e0f$export$45ca8e7f50ccf2e0","$ddc7f5de3664aab559d1c545c366e59d$var$HEX_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$var$NAMED_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$export$9fe004474d6f7f65","color","$ddc7f5de3664aab559d1c545c366e59d$export$47bee913e0e80eb4","$ddc7f5de3664aab559d1c545c366e59d$var$fromNamed","el","document","createElement","style","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$ddc7f5de3664aab559d1c545c366e59d$export$21528ce64591bf2","s","hasOwnProperty","key","g","exec","hasAlpha","parseInt","substr","$ddc7f5de3664aab559d1c545c366e59d$export$2e33abec8aecd572","map","Number","$ddc7f5de3664aab559d1c545c366e59d$var$fromStringInternal_","$ddc7f5de3664aab559d1c545c366e59d$export$7266a24c0caa2a8","undefined","$80553d92e1fbcb82d752b6de833f9cf3$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","hasListener","get","src","crossOrigin","$80553d92e1fbcb82d752b6de833f9cf3$var$getKey","set","setSize","maxCacheSize","$80553d92e1fbcb82d752b6de833f9cf3$export$601b9e2be44c7cb2","$003acff01e79c0a73122c747343d2e59$export$9099ad97b570f7c","BaseEvent","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","$bfcfd5d9960b75cc9cb78b58301ad8a4$export$9099ad97b570f7c","$e1ac967f910869e98e549bfd20a1853c$export$f3c88f5a058bec38","assign","var_sources","TypeError","output","arguments","$e1ac967f910869e98e549bfd20a1853c$export$97fff7491bd246bd","object","property","$e1ac967f910869e98e549bfd20a1853c$export$207c30846165e93a","values","$e1ac967f910869e98e549bfd20a1853c$export$988399e568471db1","$99fe3f3343ef18166bd431edc467d890$export$9099ad97b570f7c","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$99fe3f3343ef18166bd431edc467d890$var$__extends","addEventListener","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","opt_type","index","splice","$c81aa09fb137106970dbc142b1e89ec3$export$9099ad97b570f7c","$7961378a294a4943979a10a4df4a3fcf$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","eventsKey","$7961378a294a4943979a10a4df4a3fcf$export$d2df825b2d8bc2ba","$7961378a294a4943979a10a4df4a3fcf$export$6dee5fd4fdf600ff","$02e80757fefec0a9636ae28d17c9fab2$export$21f63b82add5980c","$02e80757fefec0a9636ae28d17c9fab2$export$9099ad97b570f7c","Observable","revision_","$02e80757fefec0a9636ae28d17c9fab2$var$__extends","changed","getRevision","on","len","once","ol_key","un","$99fe3f3343ef18166bd431edc467d890$exports","$a41f90da440d5a4a421775ee47a2c536$export$b902cfd711fa7f06","ObjectEvent","oldValue","$a41f90da440d5a4a421775ee47a2c536$var$__extends","$a41f90da440d5a4a421775ee47a2c536$var$BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","$a41f90da440d5a4a421775ee47a2c536$export$b958104f5d8e9527","opt_silent","applyProperties","unset","$02e80757fefec0a9636ae28d17c9fab2$exports","$a41f90da440d5a4a421775ee47a2c536$var$changeEventTypeCache","$a41f90da440d5a4a421775ee47a2c536$export$9099ad97b570f7c","$6e657bb9f80dab756c945a825e2a2cee$export$9099ad97b570f7c","$3a8294651627eb74246351f5b596cf68$export$9099ad97b570f7c","BaseLayer","options","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$3a8294651627eb74246351f5b596cf68$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$a41f90da440d5a4a421775ee47a2c536$exports","$939d3f0e5ddda81ef3d6b6e4c37a0795$export$9099ad97b570f7c","$88faaf1879d30d470a1b447dd4b5a77a$export$9099ad97b570f7c","$1935b85c22cfc539ea58e141ab0b37d6$export$16970faadcd3f29b","layerState","viewState","zoom","$1935b85c22cfc539ea58e141ab0b37d6$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","getChangeEventType","handleSourcePropertyChange_","setSource","$1935b85c22cfc539ea58e141ab0b37d6$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$3a8294651627eb74246351f5b596cf68$exports","$29884e9b826cd25109649ab0c360e769$export$bcc761834e33d339","coordinate1","coordinate2","equals","$29884e9b826cd25109649ab0c360e769$export$d40e2456b1281660","cosAngle","sinAngle","$29884e9b826cd25109649ab0c360e769$export$5a0d9577a24f3c5b","projection","canWrapX","worldWidth","worldsAway","$29884e9b826cd25109649ab0c360e769$export$c8ebaff90a21375a","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$52488a0195cf0e38344877f5a3896831$var$expireIconCache","$52488a0195cf0e38344877f5a3896831$export$9099ad97b570f7c","MapRenderer","map_","$52488a0195cf0e38344877f5a3896831$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","j","$1935b85c22cfc539ea58e141ab0b37d6$exports","inView","getWrapX","callback_1","order","forEach","m","i1","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$1a95b8d63eeb9d5cd5e2742791ea7ab2$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$1a95b8d63eeb9d5cd5e2742791ea7ab2$var$__extends","$7ef0aa4943b3f1208e19af1336a3f8f6$export$4b206f1dd0085e9f","$7ef0aa4943b3f1208e19af1336a3f8f6$export$6cfb92f3ca39d412","$7ef0aa4943b3f1208e19af1336a3f8f6$export$a6463a3b3793c500","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegEx","RegExp","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegExMatchIndex","$7ef0aa4943b3f1208e19af1336a3f8f6$export$b705256ab57c20ca","fontSpec","match","lineHeight","weight","variant","families","family","$2016f251f21b02e27a5ca36c37510540$var$ua","navigator","userAgent","toLowerCase","$2016f251f21b02e27a5ca36c37510540$export$543c908bf17a24fb","$2016f251f21b02e27a5ca36c37510540$export$bccc8605349feea7","$2016f251f21b02e27a5ca36c37510540$export$f16ffc71033a7aaa","$2016f251f21b02e27a5ca36c37510540$export$1940d5d2b4cf824d","devicePixelRatio","$2016f251f21b02e27a5ca36c37510540$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$2016f251f21b02e27a5ca36c37510540$export$9544418e5c6fedfe","Image","decode","$2016f251f21b02e27a5ca36c37510540$export$700ce540937d8c69","passive","defineProperty","window","error","$8b566ca8fd3b2d9c184057ba73cbf345$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","canvas","shift","getContext","$8b566ca8fd3b2d9c184057ba73cbf345$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$47503d53c08beb29","node","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$18c07a12203603b5","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$55c06ab37ead2f5d","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$ffc0c15ee0fd31b3","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6ad0413f8fea3c71","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$4f3c27e569bdb39e","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$b679e5c5d4b15cf5","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$d721e051424a5865","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6f57224ec3df03c9","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$70c5a077e5d6beb9","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$907cf5cff4a8acb1","console","warn","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureFont","measureElement","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureContext","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$384c0f09c94ed6cc","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6491effd8671e9f6","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","setInterval","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$a2bf16790cd8f004","metrics","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","offsetHeight","measureText","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$4b2ca35321179b27","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$c02f953f8e44cc0a","offsetX","offsetY","translate","rotate","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$3004e0c7927eb2d1","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","label","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$executeLabelInstructions","drawImage","restore","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$createTransformStringCanvas","$2ae21f590be041e7827bf48426c0766a$export$9099ad97b570f7c","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$7ef0aa4943b3f1208e19af1336a3f8f6$export$2fbf9d496fb0d5a8","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$2ae21f590be041e7827bf48426c0766a$var$__extends","event_1","$1a95b8d63eeb9d5cd5e2742791ea7ab2$exports","declutterLayers","previousElement","layerIndex","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$439ebc2b0f0ec9f4","getDataAtPixel","$52488a0195cf0e38344877f5a3896831$exports","$994e322493abe750f187f7e3835dca5c$export$9099ad97b570f7c","$e6a59fbd122f687b33c2f382a3c7634b$var$Property","$e6a59fbd122f687b33c2f382a3c7634b$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$e6a59fbd122f687b33c2f382a3c7634b$var$__extends","$e6a59fbd122f687b33c2f382a3c7634b$export$9099ad97b570f7c","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$d66bdf9af75d90254b022f9a4b768a43$var$Property","$d66bdf9af75d90254b022f9a4b768a43$export$9099ad97b570f7c","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$e6a59fbd122f687b33c2f382a3c7634b$exports","setLayers","$d66bdf9af75d90254b022f9a4b768a43$var$__extends","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","$f8e1a00fe597e09d283a3697649a8ad5$export$9099ad97b570f7c","MapEvent","$f8e1a00fe597e09d283a3697649a8ad5$var$__extends","$5185059e8a82c1ae03c4e1ba7159b318$export$9099ad97b570f7c","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$5185059e8a82c1ae03c4e1ba7159b318$var$__extends","getEventPixel","getCoordinateFromPixel","$f8e1a00fe597e09d283a3697649a8ad5$exports","$7aa259efacd921e7e7d327d1aea40a76$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$abba75ad998e5558d931e97019b1ab4c$export$9099ad97b570f7c","$75ed2fc91ec6cb8478583ef358a9dd4d$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$75ed2fc91ec6cb8478583ef358a9dd4d$var$__extends","emulateClick_","pointerEvent","newEvent","$5185059e8a82c1ae03c4e1ba7159b318$exports","clearTimeout","setTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","$841b38a534c9217d8aceb4320d3d91b5$export$9099ad97b570f7c","$71b981cc74aab5981a718ea8e06b800b$export$9099ad97b570f7c","$eeb9190850355aed8fc5d92349a26bc6$export$55b8074a560bbdf4","$eeb9190850355aed8fc5d92349a26bc6$export$9099ad97b570f7c","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$070765ef09fbcd82a0016eb3aec41934$export$9099ad97b570f7c","$6bfe069e85349c527971d875462feeac$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$6bfe069e85349c527971d875462feeac$var$__extends","added","getTilesLoading","tile","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$6bfe069e85349c527971d875462feeac$export$f7de9366327711a7","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","log","sqrt","$29d4509fdec4b1b2fe8c71c42629ef39$export$9099ad97b570f7c","$df0b68b08946bf3d8de6eeca4fba3a5f$var$Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$df0b68b08946bf3d8de6eeca4fba3a5f$export$af68584dedf5e52c","$df0b68b08946bf3d8de6eeca4fba3a5f$export$9099ad97b570f7c","$69bda6b48e87f8072533951cf5cd4b41$export$9099ad97b570f7c","$6fef8cd20559fa789cc7c5f681ed5561$export$9099ad97b570f7c","$1514cc7c23ad291d61b727f0ef5e4246$export$9099ad97b570f7c","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$7d5079714e2786ec6bee07910f0d8a86$export$8c5f77743cd0e8b7","$7d5079714e2786ec6bee07910f0d8a86$export$bb1f4f75177e5528","$7d5079714e2786ec6bee07910f0d8a86$export$6fd015d56b8406c9","$7d5079714e2786ec6bee07910f0d8a86$export$64afaa717a0c4932","$7d5079714e2786ec6bee07910f0d8a86$export$2126dea64bc40b7b","tan","$7d5079714e2786ec6bee07910f0d8a86$var$EPSG3857Projection","EPSG3857Projection","point","$7d5079714e2786ec6bee07910f0d8a86$var$__extends","$7d5079714e2786ec6bee07910f0d8a86$export$850c9b527a5298aa","$7d5079714e2786ec6bee07910f0d8a86$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","$7d5079714e2786ec6bee07910f0d8a86$export$f361696640082386","atan","$655738a66489cc3574c072262645bff6$export$6fd015d56b8406c9","$655738a66489cc3574c072262645bff6$export$af68584dedf5e52c","$655738a66489cc3574c072262645bff6$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$655738a66489cc3574c072262645bff6$var$__extends","$655738a66489cc3574c072262645bff6$export$850c9b527a5298aa","$0ba2913765cbb83278246e730dbcdcdf$var$cache","$6cb154572a1cc3d19ea74b1e9a3a7861$var$transforms","$6cb154572a1cc3d19ea74b1e9a3a7861$export$568ed88074851180","destination","sourceCode","destinationCode","$525020a649871896a05d6fe288616b91$export$761de677acb0d085","$525020a649871896a05d6fe288616b91$export$80a87d59b6e09730","distance","bearing","opt_radius","radius","lat1","lon1","dByR","lat","asin","atan2","$524e9c84a4c58bd58490804da4c772c6$export$3fbbaef54e2e9d28","$524e9c84a4c58bd58490804da4c772c6$export$678028d364072132","$524e9c84a4c58bd58490804da4c772c6$export$6308908a0016f099","$0ba2913765cbb83278246e730dbcdcdf$export$568ed88074851180","$524e9c84a4c58bd58490804da4c772c6$export$7eb84799c931fe91","projectionLike","replace","$524e9c84a4c58bd58490804da4c772c6$export$a42db349809b0c24","projections","$524e9c84a4c58bd58490804da4c772c6$export$fd4cd3535c7ea97f","$524e9c84a4c58bd58490804da4c772c6$export$f704437a72056fb8","defaultCode","$524e9c84a4c58bd58490804da4c772c6$export$c7a9310bdeddab53","projection1","projection2","equalUnits","$524e9c84a4c58bd58490804da4c772c6$export$747af4f49bde2f53","sourceProjection","destinationProjection","transformFunc","$6cb154572a1cc3d19ea74b1e9a3a7861$export$7eb84799c931fe91","$524e9c84a4c58bd58490804da4c772c6$export$9336879ef6599bf5","$524e9c84a4c58bd58490804da4c772c6$export$4b169b49e1a4823b","$524e9c84a4c58bd58490804da4c772c6$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$524e9c84a4c58bd58490804da4c772c6$var$userProjection","$524e9c84a4c58bd58490804da4c772c6$export$352fd07bdd93dc1e","$524e9c84a4c58bd58490804da4c772c6$export$4a182a4d53d7595c","$524e9c84a4c58bd58490804da4c772c6$export$b5d00774755783fc","destProjection","$524e9c84a4c58bd58490804da4c772c6$export$a7d473ff80a6a3b","$524e9c84a4c58bd58490804da4c772c6$export$f87215506b474b9e","$61ba71c2b15c8b7e6577526180db0da5$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$61ba71c2b15c8b7e6577526180db0da5$export$eaafe0fae18e32b1","$75cf935c4655e9fc21b1ade56ed27175$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$75cf935c4655e9fc21b1ade56ed27175$var$getSmoothClampedResolution","$75cf935c4655e9fc21b1ade56ed27175$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$4c6a822b604dbfa9a10722399f7335d0$export$e97ec87d2336bd4e","$4c6a822b604dbfa9a10722399f7335d0$export$eaafe0fae18e32b1","$8717569d70d85bd7f28c8c1b2c37daee$export$673b9849e2bc032c","pow","$8717569d70d85bd7f28c8c1b2c37daee$export$9fbc3b1d6b2da9ec","$8717569d70d85bd7f28c8c1b2c37daee$export$1b5c1277e30d397d","$8717569d70d85bd7f28c8c1b2c37daee$export$5523e35ab8ae283a","$7d5079714e2786ec6bee07910f0d8a86$exports","PROJECTIONS","$655738a66489cc3574c072262645bff6$exports","fromEPSG4326","toEPSG4326","$01b4ee2590431d23f431f1e9785f436f$export$9099ad97b570f7c","$3f4f29b0a4be88d8241f933ff6121a33$export$92106241c01aa541","opt_dest","dest","$3f4f29b0a4be88d8241f933ff6121a33$export$d40e2456b1281660","anchor","anchorX","anchorY","k","$a17c336463d573a615343832f6e09aa8$var$tmpTransform","$a17c336463d573a615343832f6e09aa8$export$9099ad97b570f7c","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$a17c336463d573a615343832f6e09aa8$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","$8ebfb36ef5532881c5652b708da2c120$export$d1e01ccfd06bf8ee","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$57ce72c0539154dec2abdc81ffcff6df$export$2a65008b73824080","layout","$57ce72c0539154dec2abdc81ffcff6df$export$36912b83e488cd77","simpleGeometry","getFlatCoordinates","getStride","$57ce72c0539154dec2abdc81ffcff6df$export$9099ad97b570f7c","SimpleGeometry","$57ce72c0539154dec2abdc81ffcff6df$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$57ce72c0539154dec2abdc81ffcff6df$var$getLayoutForStride","$3f4f29b0a4be88d8241f933ff6121a33$export$8f869025bba9609b","$3f4f29b0a4be88d8241f933ff6121a33$export$41b0d7466cde8385","$a17c336463d573a615343832f6e09aa8$exports","$020a0553c73896bfe8e0cfb3e7ff136b$var$assignClosest","offset1","offset2","$020a0553c73896bfe8e0cfb3e7ff136b$export$acf7548d1f0e8581","squaredDelta","$020a0553c73896bfe8e0cfb3e7ff136b$export$ba38095f6bb45df2","ends","$020a0553c73896bfe8e0cfb3e7ff136b$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$020a0553c73896bfe8e0cfb3e7ff136b$export$3dd3914e22f9012e","$e477329667689b6619ea04e4a51dbccc$export$e175f505890ac90f","$e477329667689b6619ea04e4a51dbccc$export$ab1a51db55485752","coordinatess","opt_ends","jj","$a357f0a07bdcadd773e93ca791a42f7b$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$a357f0a07bdcadd773e93ca791a42f7b$export$ade7859c9eb393ec","simplifiedEnds","$a357f0a07bdcadd773e93ca791a42f7b$export$383ea8a1f2974dfb","$a357f0a07bdcadd773e93ca791a42f7b$export$e29de4fdb2175738","$a357f0a07bdcadd773e93ca791a42f7b$export$1df19a1eb5514c2f","$c39683e7fcea5e9dae135d728d60cf52$export$92f32d891164b0ac","opt_coordinates","$c39683e7fcea5e9dae135d728d60cf52$export$d82a8a3167f968d","opt_coordinatess","$c39683e7fcea5e9dae135d728d60cf52$export$db289937da1f5213","endss","opt_coordinatesss","coordinatesss","$7641779008ab07f3e708dabdbbb046eb$export$9bf2059fd656d5e9","twiceArea","$7641779008ab07f3e708dabdbbb046eb$export$99cb92d00fd73c87","area","$cf0a72c7dbf1c3cfa9edf65c24bc230b$export$9099ad97b570f7c","LinearRing","maxDelta_","maxDeltaRevision_","$cf0a72c7dbf1c3cfa9edf65c24bc230b$var$__extends","getArea","$57ce72c0539154dec2abdc81ffcff6df$exports","$acd1b863667085614d305475fd6c1d27$export$9099ad97b570f7c","Point","$acd1b863667085614d305475fd6c1d27$var$__extends","$e477329667689b6619ea04e4a51dbccc$export$a53e62528b652807","$7311a6a51d57e65f0d3a69bd7a380356$export$f7b55b637f92fd7","val","$8ebfb36ef5532881c5652b708da2c120$export$c26f7b9c5adc34b4","$7311a6a51d57e65f0d3a69bd7a380356$export$e2ed757909b25f63","wn","$7311a6a51d57e65f0d3a69bd7a380356$export$51e46a3625992b91","$67787df47ebd352536b767ba5aa6ea83$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$67787df47ebd352536b767ba5aa6ea83$export$2bd6b2f516920f59","interiorPoints","$419a691625de72e89acadcc033e1165f$export$40f3d9558cf6e846","ret","point1","point2","$32ab876027ca0904f46063bee68b73aa$export$26f047a5bfac4b1a","coordinatesExtent","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$8ebfb36ef5532881c5652b708da2c120$export$525a75abb91115e3","$32ab876027ca0904f46063bee68b73aa$export$717c2c7c46a5bf3d","$32ab876027ca0904f46063bee68b73aa$export$f14bd9270666b480","$221ffa684d4ba252080508824e602b78$export$c77fe031a1447f2e","$52f5ef13e882c7db8132623a2b51ee49$export$add61ad31d0a68b4","edge","$52f5ef13e882c7db8132623a2b51ee49$export$586adaf930d9fdb6","opt_right","right","isClockwise","$52f5ef13e882c7db8132623a2b51ee49$export$325e57738fd8b321","$52f5ef13e882c7db8132623a2b51ee49$export$4efd43868de93336","$bffbcd35af658c4477627697774de1c2$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$bffbcd35af658c4477627697774de1c2$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$acd1b863667085614d305475fd6c1d27$exports","getLinearRingCount","getLinearRing","$cf0a72c7dbf1c3cfa9edf65c24bc230b$exports","getLinearRings","linearRings","$bffbcd35af658c4477627697774de1c2$export$9099ad97b570f7c","$bffbcd35af658c4477627697774de1c2$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$bffbcd35af658c4477627697774de1c2$export$b50d271c6e9656cd","$bffbcd35af658c4477627697774de1c2$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$bffbcd35af658c4477627697774de1c2$export$5d1798f0e1df079","getRadius","startAngle","$19fadbefe1b7e34cc76223b5c3e441cc$var$animationCallback","returnValue","$19fadbefe1b7e34cc76223b5c3e441cc$export$535fae5a159fbda4","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$19fadbefe1b7e34cc76223b5c3e441cc$export$8b6914b45b83f21f","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","resolutions","constrainResolution","capped","z","$75cf935c4655e9fc21b1ade56ed27175$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$75cf935c4655e9fc21b1ade56ed27175$export$7690ad4e930f454b","constraint","$19fadbefe1b7e34cc76223b5c3e441cc$export$9665b691bc2d5ca0","theta","opt_tolerance","enableRotation","constrainRotation","$19fadbefe1b7e34cc76223b5c3e441cc$export$5d87c27d7d9f380e","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$19fadbefe1b7e34cc76223b5c3e441cc$var$calculateCenterOn","rotX","rotY","$19fadbefe1b7e34cc76223b5c3e441cc$export$9099ad97b570f7c","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","$19fadbefe1b7e34cc76223b5c3e441cc$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nearest","baseLevel","fit","geometryOrExtent","$bffbcd35af658c4477627697774de1c2$exports","fromExtent","userProjection","fitInternal","coords","minRotX","minRotY","maxRotX","maxRotY","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","$8556eff40cf4f1624cd78ff7ea054c5b$export$c563c2b7121f8771","$8556eff40cf4f1624cd78ff7ea054c5b$export$48d31d2725e4d98b","$b198bbb8a7fca092de94dd3a772c1343$export$9099ad97b570f7c","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$d66bdf9af75d90254b022f9a4b768a43$exports","view","$19fadbefe1b7e34cc76223b5c3e441cc$exports","$b198bbb8a7fca092de94dd3a772c1343$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$6bfe069e85349c527971d875462feeac$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","getId","toString","$b198bbb8a7fca092de94dd3a772c1343$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$75ed2fc91ec6cb8478583ef358a9dd4d$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","setLayerGroup","setView","computedStyle","offsetWidth","parseFloat","$8316c877d328ebfc4f4b917229eec057$export$9099ad97b570f7c","Control","target_","listenerKeys","$8316c877d328ebfc4f4b917229eec057$var$__extends","mapEvent","$194d017bd833b991c2c712fa2ff5b0e5$export$9099ad97b570f7c","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$194d017bd833b991c2c712fa2ff5b0e5$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$f0994cfd84ab1152","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$8316c877d328ebfc4f4b917229eec057$exports","$aef56543978371a8090d728a4f107ac0$export$9099ad97b570f7c","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$aef56543978371a8090d728a4f107ac0$var$__extends","resetNorth_","$9812beea87bdcda9027d52b89085c87c$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$9812beea87bdcda9027d52b89085c87c$var$__extends","zoomByDelta_","currentZoom","newZoom","$c147d956996cb96e879ea56bdc9c5d5d$export$9099ad97b570f7c","$1ad0cf5090e3852174414bfc8cc27b9e$export$63568b31cb17dd4d","$1ad0cf5090e3852174414bfc8cc27b9e$export$d2c07614bfd6a817","$1ad0cf5090e3852174414bfc8cc27b9e$export$9099ad97b570f7c","Interaction","setActive","$1ad0cf5090e3852174414bfc8cc27b9e$var$__extends","active","$4eeedd039b7e6d5b8277b175715f9541$export$9099ad97b570f7c","DoubleClickZoom","delta_","$4eeedd039b7e6d5b8277b175715f9541$var$__extends","stopEvent","shiftKey","$1ad0cf5090e3852174414bfc8cc27b9e$exports","zoomByDelta","$0714aed143b912743afff175db44c1dc$export$e61edea4dfe4ed9b","$0714aed143b912743afff175db44c1dc$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$0714aed143b912743afff175db44c1dc$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$0714aed143b912743afff175db44c1dc$var$isPointerDraggingEvent","$054715504eaffdc825d0a6ada99ec596$export$8dbdea330bbd6b3c","conditions","pass","$054715504eaffdc825d0a6ada99ec596$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$054715504eaffdc825d0a6ada99ec596$export$584a07df7b145c47","hasAttribute","activeElement","$054715504eaffdc825d0a6ada99ec596$export$363947888fb85da6","$054715504eaffdc825d0a6ada99ec596$export$a8612972eacfc116","$054715504eaffdc825d0a6ada99ec596$export$9f5e19851eeaf2c1","$054715504eaffdc825d0a6ada99ec596$export$1734dfcac3c09b2f","$054715504eaffdc825d0a6ada99ec596$export$59c8376875f673f8","$054715504eaffdc825d0a6ada99ec596$export$5bbcce8021828272","tagName","$054715504eaffdc825d0a6ada99ec596$export$d31d3f3aa38542a8","pointerType","$054715504eaffdc825d0a6ada99ec596$export$45cd27c0322d6513","isPrimary","$959ec1b544453a9fa4f0e9221c3bb0b0$export$9099ad97b570f7c","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$959ec1b544453a9fa4f0e9221c3bb0b0$var$__extends","centroid","$0714aed143b912743afff175db44c1dc$exports","update","getDistance","getAngle","centerpx","$719e5208cd50905e41bacbcae2219883$export$9099ad97b570f7c","DragRotate","lastAngle_","$719e5208cd50905e41bacbcae2219883$var$__extends","$d0055a036577a61fd8306330947568c7$export$9099ad97b570f7c","RenderBox","geometry_","startPixel_","endPixel_","$d0055a036577a61fd8306330947568c7$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$275b26378704892d776581791f32dc0e$var$DragBoxEventType","$275b26378704892d776581791f32dc0e$export$4d9b552836937ca2","DragBoxEvent","$275b26378704892d776581791f32dc0e$var$__extends","$275b26378704892d776581791f32dc0e$export$9099ad97b570f7c","DragBox","box_","$d0055a036577a61fd8306330947568c7$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$b5cd6c68e27395a36aa4c8d3c5395250$export$9099ad97b570f7c","DragZoom","out_","out","$b5cd6c68e27395a36aa4c8d3c5395250$var$__extends","mapExtent","boxPixelExtent","$8ebfb36ef5532881c5652b708da2c120$export$9f54817615211741","$275b26378704892d776581791f32dc0e$exports","$8d5ac6bc9707ee873610cb367c0dab7f$export$9099ad97b570f7c","$bcd9d2d6fd38b8643ae7b7b6fd22a911$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$bcd9d2d6fd38b8643ae7b7b6fd22a911$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$55ea853e77e2fe25fa1a8793cb31a3bf$export$9099ad97b570f7c","KeyboardZoom","$55ea853e77e2fe25fa1a8793cb31a3bf$var$__extends","charCode","charCodeAt","$4f2c4d65e25c75c4fbc5129660f72747$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$f7a99b9e7b1a72242a3eb408b28d3563$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$f7a99b9e7b1a72242a3eb408b28d3563$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$f7a99b9e7b1a72242a3eb408b28d3563$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$74b3a0ab43d5d3c47ed1a15cedc99f6a$export$9099ad97b570f7c","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$74b3a0ab43d5d3c47ed1a15cedc99f6a$var$__extends","rotationDelta","touch0","touch1","$601b81cfcc535d77832cc96f04e942a1$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$601b81cfcc535d77832cc96f04e942a1$var$__extends","scaleDelta","$976448907138da16f7612e32ecc55ac7$export$9099ad97b570f7c","Map1","$9812beea87bdcda9027d52b89085c87c$exports","zoomOptions","$aef56543978371a8090d728a4f107ac0$exports","rotateOptions","attribution","$194d017bd833b991c2c712fa2ff5b0e5$exports","attributionOptions","$c10299a05f898a09c43f788b5b6dfdbd$export$b403fbac94228e09","altShiftDragRotate","$719e5208cd50905e41bacbcae2219883$exports","doubleClickZoom","$4eeedd039b7e6d5b8277b175715f9541$exports","zoomDelta","zoomDuration","dragPan","$959ec1b544453a9fa4f0e9221c3bb0b0$exports","pinchRotate","$74b3a0ab43d5d3c47ed1a15cedc99f6a$exports","pinchZoom","$601b81cfcc535d77832cc96f04e942a1$exports","keyboard","$bcd9d2d6fd38b8643ae7b7b6fd22a911$exports","$55ea853e77e2fe25fa1a8793cb31a3bf$exports","mouseWheelZoom","$f7a99b9e7b1a72242a3eb408b28d3563$exports","shiftDragZoom","$b5cd6c68e27395a36aa4c8d3c5395250$exports","$ad51cb5d42c2f2a2874b19907e742966$export$b403fbac94228e09","$976448907138da16f7612e32ecc55ac7$var$__extends","$2ae21f590be041e7827bf48426c0766a$exports","$b198bbb8a7fca092de94dd3a772c1343$exports","$a51010926fccd7fa7fa549e12811b655$exports","t1","t2","r1","h1","o","u","p","_maxEntries","_minEntries","n1","leaf","m2","h2","o1","all","_all","search","toBBox","o2","collides","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","s1","l1","_condense","compareMinX","compareMinY","toJSON","fromJSON","u1","m1","_chooseSubtree","u2","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","s2","l2","u3","p1","v","M","_allDistMargin","define","amd","RBush","$ddbf871807cbdb80f3672c8008047cee$export$9099ad97b570f7c","$96f7f946d494434256fc7391bfca3d81$export$9099ad97b570f7c","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getImage","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$7eb24b24c1bb92b5f48477cc7ed0ef45$export$55029509b82b2e2b","$9395bcf7fa5c622dff9d678b4abf4bba$export$9099ad97b570f7c","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","imageSize_","hitDetectionImageSize_","$9395bcf7fa5c622dff9d678b4abf4bba$var$__extends","getFill","getPoints","getRadius2","getStroke","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","imageSize","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","setLineDash","closePath","drawHitDetectionCanvas_","$19d3c8bef588e205c4ab8014047de833$export$9099ad97b570f7c","CircleStyle","$19d3c8bef588e205c4ab8014047de833$var$__extends","setRadius","$9395bcf7fa5c622dff9d678b4abf4bba$exports","$e1f9f7b0a69ff9a9f4c2bbbdfef410b1$export$9099ad97b570f7c","Fill","color_","setColor","$4c58aec149e538982cbf4e874e866484$export$9099ad97b570f7c","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$b550892c9c7d6707a4415bf7976deb12$var$Style","Style","geometryFunction_","$b550892c9c7d6707a4415bf7976deb12$var$defaultGeometryFunction","setGeometry","image_","image","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","$b550892c9c7d6707a4415bf7976deb12$var$defaultStyles","$b550892c9c7d6707a4415bf7976deb12$export$33d0043adf82cc14","$19d3c8bef588e205c4ab8014047de833$exports","$b550892c9c7d6707a4415bf7976deb12$export$9099ad97b570f7c","$ceed79ad4f0d8f0ebaf810c3cca30983$var$Property","$ceed79ad4f0d8f0ebaf810c3cca30983$export$9099ad97b570f7c","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","$ceed79ad4f0d8f0ebaf810c3cca30983$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","$parcel$interopDefault","setRenderOrder","renderOrder","opt_style","styleFunction","styles_1","$b550892c9c7d6707a4415bf7976deb12$export$4aaa4bacaec09e94","$75febe525c6e0d71892cea5e044a142c$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$75febe525c6e0d71892cea5e044a142c$export$c649c04369bd3370","$75febe525c6e0d71892cea5e044a142c$export$2513c58bc344fc5c","$75febe525c6e0d71892cea5e044a142c$export$84e3c67fd41b07f5","$75febe525c6e0d71892cea5e044a142c$export$6cd4b1e0c0e7240c","$75febe525c6e0d71892cea5e044a142c$export$9099ad97b570f7c","$98c4b84222a5e84ec508cd638c4e0b8c$export$9099ad97b570f7c","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$ca67e4c506ae561bc3174e981b55d257$export$9099ad97b570f7c","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$ca67e4c506ae561bc3174e981b55d257$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$072d5e6cee1f9ae87cd55eb588566cc6$export$9099ad97b570f7c","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$072d5e6cee1f9ae87cd55eb588566cc6$var$__extends","myBegin","opt_sharedData","hitDetectionImage","origin","$ca67e4c506ae561bc3174e981b55d257$exports","$28ceeb2640c662153e0cc1bb27e7eea9$export$9099ad97b570f7c","CanvasLineStringBuilder","$28ceeb2640c662153e0cc1bb27e7eea9$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$f5fec2e7653cdbd2c7958b8312f0d7d6$export$9099ad97b570f7c","CanvasPolygonBuilder","$f5fec2e7653cdbd2c7958b8312f0d7d6$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$efe444a788e44e26b0fd0d03352a7cb8$export$9099ad97b570f7c","$f19e98a3c9584b88eb9c26a752a19276$export$e8c34bbbade92a3a","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$7e7051822986fcb02ea0e43ac0707b32$export$3964e67694391753","$7e7051822986fcb02ea0e43ac0707b32$export$9099ad97b570f7c","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$7e7051822986fcb02ea0e43ac0707b32$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","getFlatMidpoint","getFlatMidpoints","getFlatInteriorPoints","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$4f54cdaa0352e7689a6e30aa9d8207ec$var$BATCH_CONSTRUCTORS","$f5fec2e7653cdbd2c7958b8312f0d7d6$exports","$072d5e6cee1f9ae87cd55eb588566cc6$exports","$28ceeb2640c662153e0cc1bb27e7eea9$exports","$7e7051822986fcb02ea0e43ac0707b32$exports","$4f54cdaa0352e7689a6e30aa9d8207ec$export$9099ad97b570f7c","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$ae15ed96a99c1303ea67938747c94fca$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$ae15ed96a99c1303ea67938747c94fca$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","imageState","$ac230d10056414a40eb774bd091234f1$export$9099ad97b570f7c","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$ac230d10056414a40eb774bd091234f1$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clip","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","moveTo","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","$ae15ed96a99c1303ea67938747c94fca$exports","$2a2c9e207ab3a32ae55e264c8b11e252$export$9099ad97b570f7c","$56c23dc34f9f14c7874ab5d8b63c5fb3$export$1829060502283fb8","startM","measureAndCacheTextWidth","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","iStart","charLength","chars","substring","$c028848ec55b72b61f5eaf0ec6396be2$export$7326ac1b36a49776","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$tmpExtent","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p1","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p2","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p3","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p4","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$rtlRegEx","fromCharCode","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$horizontalTextAlign","align","test","TEXT_ALIGN","$6cf1557e9efeeb4d32c6b7acaeb9c268$export$9099ad97b570f7c","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$ba197a5e917e3183","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","origin_1","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","i_1","ii_1","execute","executeHitDetection","$c6e46405591acfe99e5a94d22fbe8573$var$ORDER","$c6e46405591acfe99e5a94d22fbe8573$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$c6e46405591acfe99e5a94d22fbe8573$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$c6e46405591acfe99e5a94d22fbe8573$export$f610334c339a4991","featureCallback","imageData","idx","result_1","executor","zs","opt_builderTypes","builderTypes","$c6e46405591acfe99e5a94d22fbe8573$export$9099ad97b570f7c","$9f8df4495769241e9ec70201b90e0eaa$export$9099ad97b570f7c","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$9f8df4495769241e9ec70201b90e0eaa$var$__extends","drawImages_","localTransform","alpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$250247a34cdb6d9c26d2c6d3640e511f$export$9099ad97b570f7c","$c921d54e03c98d7c23acffcfb75264d3$export$9099ad97b570f7c","$e65a38a3837120ad833711b5930f5912$export$9099ad97b570f7c","ImageBase","$e65a38a3837120ad833711b5930f5912$var$__extends","$2fc4e1887f4ffa14e16ea647fd21482c$export$469eb8ba3f45955e","loadHandler","errorHandler","img","promise","listening_1","then","catch","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","$2fc4e1887f4ffa14e16ea647fd21482c$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","$e65a38a3837120ad833711b5930f5912$exports","$92a5ba3fab046f40ee35c464c4cf79b4$var$taintedTestContext","$92a5ba3fab046f40ee35c464c4cf79b4$var$IconImage","IconImage","imageState_","tainted_","$92a5ba3fab046f40ee35c464c4cf79b4$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","$2fc4e1887f4ffa14e16ea647fd21482c$exports","listenImage","ctx","globalCompositeOperation","imgData","putImageData","$92a5ba3fab046f40ee35c464c4cf79b4$export$7eb84799c931fe91","$4de6336f82b6fd9bc7cf688bb41b8b96$export$9099ad97b570f7c","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","$92a5ba3fab046f40ee35c464c4cf79b4$exports","offset_","offsetOrigin_","offsetOrigin","$4de6336f82b6fd9bc7cf688bb41b8b96$var$__extends","setAnchor","iconImageSize","$9f8fd0aab32ac5c353b56f527e1d00a9$export$5d244421488756f8","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$65a5cfeed6fd0c33","feature1","feature2","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$f0ea347488340e3d","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$522dfd100dd96ba1","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderGeometry","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderFeatureInternal","getGeometries","$c2243072b6513ba407326b2a30b1374a$export$9099ad97b570f7c","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$c2243072b6513ba407326b2a30b1374a$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$af95442a94d1862a138c401177ef0c4b$export$e7468c0ae08395df","clipped","transforms","imageSmoothingEnabled","$9f8df4495769241e9ec70201b90e0eaa$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","imgContext","$4de6336f82b6fd9bc7cf688bb41b8b96$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$9f8fd0aab32ac5c353b56f527e1d00a9$export$9fd146a6491490e3","resultFeatures","$9f8fd0aab32ac5c353b56f527e1d00a9$export$57fd269e987b81b8","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadExtents","gutter","loadExtent","$8ebfb36ef5532881c5652b708da2c120$export$5a0d9577a24f3c5b","declutterBuilderGroup","userTransform","loadFeatures","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$f3b3f9822f340683","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","$ac230d10056414a40eb774bd091234f1$exports","$2f5ed0ce65ecb2bfe439d05296b3d36a$export$9099ad97b570f7c","VectorLayer","$2f5ed0ce65ecb2bfe439d05296b3d36a$var$__extends","$c2243072b6513ba407326b2a30b1374a$exports","$ceed79ad4f0d8f0ebaf810c3cca30983$exports","$62b4010d0c10d05a6eb5fbcd9e877cb9$var$supportedExtensions","$4b7d9e079415657c49d05e16783d2ed4$export$9099ad97b570f7c","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$4fae3d8ec3d62e0a","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$1115845160c9bee9","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$909515d02f210383","$62b4010d0c10d05a6eb5fbcd9e877cb9$var$CONTEXT_IDS","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$1c9dfb92a34f1fcf","opt_attributes","$02cc97bf01bb3e29729e4a43136299b6$export$ad4b78097bf94d85","$02cc97bf01bb3e29729e4a43136299b6$export$2ced8f41c55fa306","Float32Array","Uint32Array","$02cc97bf01bb3e29729e4a43136299b6$export$9099ad97b570f7c","WebGLArrayBuffer","opt_usage","usage","ofSize","fromArray","from","fromArrayBuffer","buffer","getUsage","$501d706d50d79bf1747fa2e06c13b468$export$9099ad97b570f7c","$082906594eab2940979815ab9b245f21$export$9099ad97b570f7c","WebGLPostProcessingPass","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetTextureLocation_","uniforms_","uniforms","location","getGL","init","textureSize","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","viewport","internalFormat","RGBA","format","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","activeTexture","TEXTURE0","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","ImageData","texture","uniform3f","uniform4f","uniform1f","$b8f56a2658bfbbbe58c154ca943f14e7$export$e2085a48d9d846ba","mat4","$a213a3ce88096e82b8501ef33f381740$export$9fb8f3e6fc336132","$a213a3ce88096e82b8501ef33f381740$export$9aeec108beb7c801","PROJECTION_MATRIX","OFFSET_SCALE_MATRIX","OFFSET_ROTATION_MATRIX","TIME","ZOOM","RESOLUTION","$a213a3ce88096e82b8501ef33f381740$export$a267a1a615d1668f","UNSIGNED_SHORT","UNSIGNED_INT","$a213a3ce88096e82b8501ef33f381740$export$9f69b31ae6f7009b","attributes","attr","$a213a3ce88096e82b8501ef33f381740$var$getByteSizeFromType","BYTES_PER_ELEMENT","Uint16Array","$a213a3ce88096e82b8501ef33f381740$export$9099ad97b570f7c","WebGLHelper","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","bufferCache_","currentProgram_","getSupportedExtensions","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$8185dc2b04913cae","getExtension","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","name_1","postProcessPasses_","postProcesses","options1","shaderCompileErrors_","$a213a3ce88096e82b8501ef33f381740$var$__extends","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","buf","bufferCacheEntry","isContextLost","prepareDraw","getCanvas","applyFrameState","prepareDrawToRenderTarget","renderTarget","opt_disableAlphaBlend","getFramebuffer","getTexture","ZERO","drawElements","elementType","numItems","offsetInBytes","finalizeDraw","offsetScaleMatrix","offsetRotateMatrix","$af95442a94d1862a138c401177ef0c4b$export$d40e2456b1281660","setUniformMatrixValue","setUniformFloatValue","HTMLImageElement","prevValue","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","getProgramParameter","LINK_STATUS","getAttributeLocation","makeProjectionTransform","uniformMatrix4fv","enableAttributeArray_","attribName","enableAttributes","opt_data","opt_texture","$52492a5d5a5cf9f2155f89c2c989fa4d$export$f35e0f0520ed8c07","GENERATE_BUFFERS","$52492a5d5a5cf9f2155f89c2c989fa4d$var$WebGLLayerRenderer","WebGLLayerRenderer","helper","$a213a3ce88096e82b8501ef33f381740$exports","$52492a5d5a5cf9f2155f89c2c989fa4d$var$__extends","$52492a5d5a5cf9f2155f89c2c989fa4d$var$tmpArray_","$52492a5d5a5cf9f2155f89c2c989fa4d$var$bufferPositions_","vertexPosition","indexPosition","$52492a5d5a5cf9f2155f89c2c989fa4d$var$writePointVertex","$52492a5d5a5cf9f2155f89c2c989fa4d$export$402a9517d8d9fb90","elementIndex","vertexBuffer","indexBuffer","customAttributesCount","bufferPositions","customAttrs","vPos","iPos","baseIndex","$52492a5d5a5cf9f2155f89c2c989fa4d$export$d2530fde2918c51d","createImageData","$52492a5d5a5cf9f2155f89c2c989fa4d$export$89728eb3e9a820de","radix","divide","$52492a5d5a5cf9f2155f89c2c989fa4d$export$4a313f27a0e30974","mult","$52492a5d5a5cf9f2155f89c2c989fa4d$export$9099ad97b570f7c","$f64fa72ac4564efa0d58e5ad5fee1414$var$tmpArray4","$f64fa72ac4564efa0d58e5ad5fee1414$export$9099ad97b570f7c","WebGLRenderTarget","helper_","texture_","framebuffer_","data_","dataCacheDirty_","updateSize_","clearCachedData","readAll","readPixels","readPixel","$9d3e887f16ae055cd8da2de24c5566f6$var$blob","Blob","$9d3e887f16ae055cd8da2de24c5566f6$var$url","URL","createObjectURL","$971f56de0b1cde93924292a879dc7bb9$export$9099ad97b570f7c","WebGLPointsLayerRenderer","projectionMatrixTransform","DefaultUniform","sourceRevision_","verticesBuffer_","hitVerticesBuffer_","indicesBuffer_","program_","hitDetectionEnabled_","hitFragmentShader","hitVertexShader","hitProgram_","customAttributes","attribute","AttributeType","concat","hitDetectionAttributes","currentTransform_","renderTransform_","invertRenderTransform_","renderInstructions_","hitRenderInstructions_","hitRenderTarget_","worker_","Worker","received","$52492a5d5a5cf9f2155f89c2c989fa4d$exports","WebGLWorkerMessageType","projectionTransform","hitDetection","renderInstructions","featureCache_","featureCount_","sourceListenKeys_","handleSourceFeatureAdded_","handleSourceFeatureChanged_","handleSourceFeatureDelete_","handleSourceFeatureClear_","forEachFeature","$971f56de0b1cde93924292a879dc7bb9$var$__extends","renderCount","renderHitDetection","viewNotMoving","extentChanged","sourceChanged","rebuildBuffers_","featureCache","totalInstructionsCount","totalHitInstructionsCount","hitColor","tmpCoords","tmpColor","renderIndex","hitIndex","featureUid","colorEncodeId","postMessage","hitMessage","colorDecodeId","uid","getFeatureByUid","terminate","$4e846b5067287bfa27b20cce73a80019$var$Property","$4e846b5067287bfa27b20cce73a80019$var$DEFAULT_GRADIENT","$4e846b5067287bfa27b20cce73a80019$export$9099ad97b570f7c","Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","$4e846b5067287bfa27b20cce73a80019$var$__extends","getBlur","getGradient","colors","createLinearGradient","step","addColorStop","$4e846b5067287bfa27b20cce73a80019$var$createGradient","$971f56de0b1cde93924292a879dc7bb9$exports","u_size","u_blurSlope","u_gradientTexture","$2f5ed0ce65ecb2bfe439d05296b3d36a$exports","$013ee184ddda363412ada1e10e95871e$export$9099ad97b570f7c","$ab70eb0a0a56b112261264db1ea7acab$export$9099ad97b570f7c","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$ab70eb0a0a56b112261264db1ea7acab$var$__extends","getPreload","getUseInterimTilesOnError","$6a958d3d10a45fbc13d601def6cb4731$var$TileRange","TileRange","containsTileRange","getHeight","$6a958d3d10a45fbc13d601def6cb4731$export$9099ad97b570f7c","$21101e8f6691f861098a74ca233ba3e1$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$21101e8f6691f861098a74ca233ba3e1$var$__extends","isDrawableTile","tileState","getTile","setState","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","getContextOptions","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","transition","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alphaChanged","endTransition","postRenderFunction","tileSource1","frameState1","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$21101e8f6691f861098a74ca233ba3e1$export$9099ad97b570f7c","$7f639b92eb9591e7aded56644548f656$export$9099ad97b570f7c","TileLayer","$7f639b92eb9591e7aded56644548f656$var$__extends","$21101e8f6691f861098a74ca233ba3e1$exports","$ab70eb0a0a56b112261264db1ea7acab$exports","$e311f93de68f58225dfc37d89d1dcffc$export$9099ad97b570f7c","opt_maxEntries","rbush_","items_","extents","items","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","$6a9611a0560ac769e67fadc6cfef9a2c$var$adaptAttributions","attributionLike","$6a9611a0560ac769e67fadc6cfef9a2c$export$9099ad97b570f7c","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","$6a9611a0560ac769e67fadc6cfef9a2c$var$__extends","refresh","setAttributions","$26b846260444bc742bddf88d96721338$export$8dbdea330bbd6b3c","$e1f6506982452a68a8aaa230bb78068a$export$9099ad97b570f7c","$2ef5772bb5b0926a9ba82fc2a88f3163$var$withCredentials","$2ef5772bb5b0926a9ba82fc2a88f3163$export$52988233cf090939","url","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","$2ef5772bb5b0926a9ba82fc2a88f3163$export$4355fa6d12274ca5","dataProjection","addFeatures","$76e99b295c09c7c5e340e251e89879b1$export$e3e368afaf9a4fc7","VectorSourceEvent","opt_feature","opt_features","$76e99b295c09c7c5e340e251e89879b1$var$__extends","$76e99b295c09c7c5e340e251e89879b1$export$9099ad97b570f7c","VectorSource","loader_","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","$6a9611a0560ac769e67fadc6cfef9a2c$exports","$fe05caf5f991aea82bd67c9bebabc467$export$7cf753b6a6534915","$fe05caf5f991aea82bd67c9bebabc467$export$9099ad97b570f7c","Feature","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","$fe05caf5f991aea82bd67c9bebabc467$var$__extends","setGeometryName","getGeometryName","handleGeometryChange_","setId","$8af1af76f23419d9d724a1b0182ffb00$var$cloneGeometries","clonedGeometries","$8af1af76f23419d9d724a1b0182ffb00$export$9099ad97b570f7c","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","$8af1af76f23419d9d724a1b0182ffb00$var$__extends","unlistenGeometriesChange_","geometryCollection","setGeometries","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","$168654b72fccbd53f77518b62ff915e1$export$55be7a9e3fef4787","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$7c21d7646a0313abf7b847efa68bfceb$export$26b1c556c0e0f127","$168654b72fccbd53f77518b62ff915e1$export$1a804b04fa5a0253","extrapolate","lo","hi","m0","$f3208b74dbadea817236410092d4ed69$export$9099ad97b570f7c","LineString","flatMidpoint_","flatMidpointRevision_","$f3208b74dbadea817236410092d4ed69$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","$9cc45ed4bf6c6f99d7b74c7015645e2b$export$9099ad97b570f7c","MultiLineString","lineStrings","$9cc45ed4bf6c6f99d7b74c7015645e2b$var$__extends","appendLineString","multiLineString","opt_interpolate","$168654b72fccbd53f77518b62ff915e1$export$8958f67b085a89b1","getLineString","$f3208b74dbadea817236410092d4ed69$exports","getLineStrings","midpoints","$32ab876027ca0904f46063bee68b73aa$export$414b603e1c51ecd4","$0c87ec0f12a2b62262bf5859757b8a2b$export$9099ad97b570f7c","MultiPoint","$0c87ec0f12a2b62262bf5859757b8a2b$var$__extends","appendPoint","multiPoint","getPoint","$8080d3a1460a7f67662c4a8e92d86a37$export$3ed76a8ff8a671c","$3f89ce735a32ce0bc16220a89ae67b2f$export$9099ad97b570f7c","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","$3f89ce735a32ce0bc16220a89ae67b2f$var$__extends","appendPolygon","newEndss","multiPolygon","$020a0553c73896bfe8e0cfb3e7ff136b$export$7bbfd5f5d0d7544b","$020a0553c73896bfe8e0cfb3e7ff136b$export$6564f135364e210c","$7311a6a51d57e65f0d3a69bd7a380356$export$664b9cb38de51b70","$7641779008ab07f3e708dabdbbb046eb$export$3ed76a8ff8a671c","getInteriorPoints","$0c87ec0f12a2b62262bf5859757b8a2b$exports","$52f5ef13e882c7db8132623a2b51ee49$export$9ae9bd8fe57776c1","simplifiedEndss","$a357f0a07bdcadd773e93ca791a42f7b$export$503109e33f5b8344","getPolygon","prevEnds","getPolygons","$32ab876027ca0904f46063bee68b73aa$export$eae4874c99627698","$e477329667689b6619ea04e4a51dbccc$export$abe2fb3e7ce9556","lastEnds","$a62309e79bc84bd3b6b5fbbfdb8ce983$export$9099ad97b570f7c","Text1","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$508255911b6472d9d16e9a97599ab01e$export$9099ad97b570f7c","FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","$508255911b6472d9d16e9a97599ab01e$export$534b7b915a5ec453","write","transformed","decimals","power_1","$d51a9db7ffbc5351b0298bfe2864dc58$export$f6c9fc7378d5d6a6","$d51a9db7ffbc5351b0298bfe2864dc58$export$a5039740b67a9c","namespaceURI","qualifiedName","$d51a9db7ffbc5351b0298bfe2864dc58$export$46d2d1e7bcdd99a3","createElementNS","$d51a9db7ffbc5351b0298bfe2864dc58$export$4131dc4da57aa0c8","normalizeWhitespace","$d51a9db7ffbc5351b0298bfe2864dc58$export$970c25ea2962a3d2","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","$d51a9db7ffbc5351b0298bfe2864dc58$export$77e37c6e8311f1ce","$d51a9db7ffbc5351b0298bfe2864dc58$export$a43e9d683f52ab7c","xml","$d51a9db7ffbc5351b0298bfe2864dc58$export$c9b84e3d2c8a2745","valueReader","objectStack","$d51a9db7ffbc5351b0298bfe2864dc58$export$5a6c4415b7f496d8","$d51a9db7ffbc5351b0298bfe2864dc58$export$a228533eec35683a","$d51a9db7ffbc5351b0298bfe2864dc58$export$73d853215f0c71e8","opt_property","localName","$d51a9db7ffbc5351b0298bfe2864dc58$export$2deb56b7ae029e3","nodeWriter","$d51a9db7ffbc5351b0298bfe2864dc58$export$8ebe38e76aa85d36","opt_nodeName","opt_namespaceURI","fixedNodeName","opt_nodeName1","nodeName","$d51a9db7ffbc5351b0298bfe2864dc58$export$81a68ea3ed99d298","$d51a9db7ffbc5351b0298bfe2864dc58$export$56f187f00ba8a12b","orderedKeys","sequence","$d51a9db7ffbc5351b0298bfe2864dc58$export$7567597de432f7e7","namespaceURIs","structure","opt_structureNS","structureNS","$d51a9db7ffbc5351b0298bfe2864dc58$export$d2d9da5f39026f12","parsersNS","nextElementSibling","parsers","parser","$d51a9db7ffbc5351b0298bfe2864dc58$export$606fcd4c4e16fe20","$d51a9db7ffbc5351b0298bfe2864dc58$export$2e67c97dae900dc9","serializersNS","nodeFactory","opt_keys","$d51a9db7ffbc5351b0298bfe2864dc58$export$cfa8ff2fe3336fdf","$d51a9db7ffbc5351b0298bfe2864dc58$var$xmlSerializer_","$d51a9db7ffbc5351b0298bfe2864dc58$var$document_","implementation","createDocument","$dec84ce654dad439cc55f11914ce0714$export$9099ad97b570f7c","XMLFeature","xmlSerializer_","XMLSerializer","$dec84ce654dad439cc55f11914ce0714$var$__extends","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","$90d80a364a39de433c7f5cd490d4f896$export$2d9b5243090e006a","$90d80a364a39de433c7f5cd490d4f896$export$39fa0db44f151f9d","$90d80a364a39de433c7f5cd490d4f896$export$286b7b22a1a791c7","trim","$90d80a364a39de433c7f5cd490d4f896$export$bbbe78f39d89b09c","bool","$90d80a364a39de433c7f5cd490d4f896$export$8546427d900bb9d0","$90d80a364a39de433c7f5cd490d4f896$export$3ff1a647d173b6de","decimal","string","toPrecision","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_COLOR","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_ANCHOR","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_SIZE","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_SRC","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_SCALE_MULTIPLIER","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_NAMESPACE_URIS","$23a4f6aded846ad8aacbf1f3eca76e14$var$NAMESPACE_URIS","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_ANCHOR_UNITS_MAP","$23a4f6aded846ad8aacbf1f3eca76e14$var$PLACEMARK_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$extendedDataParser","$23a4f6aded846ad8aacbf1f3eca76e14$var$regionParser","$23a4f6aded846ad8aacbf1f3eca76e14$var$readMultiGeometry","$23a4f6aded846ad8aacbf1f3eca76e14$var$readLineString","$23a4f6aded846ad8aacbf1f3eca76e14$var$readLinearRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$readPoint","$23a4f6aded846ad8aacbf1f3eca76e14$var$readPolygon","$23a4f6aded846ad8aacbf1f3eca76e14$var$readStyle","styleMapValue","$23a4f6aded846ad8aacbf1f3eca76e14$var$readStyleMapValue","placemarkObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$readStyleURL","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_MULTITRACK_GEOMETRY_PARSERS","$9cc45ed4bf6c6f99d7b74c7015645e2b$exports","$23a4f6aded846ad8aacbf1f3eca76e14$var$readGxTrack","$23a4f6aded846ad8aacbf1f3eca76e14$var$NETWORK_LINK_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINK_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$readURI","$23a4f6aded846ad8aacbf1f3eca76e14$var$REGION_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$LAT_LON_ALT_BOX_PARSERS","regionObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$LOD_PARSERS","lodObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$KML_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$KML_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$DOCUMENT_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$DOCUMENT_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$writePlacemark","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_FILL_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$e46f11a75191a508","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_NO_IMAGE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$5e32ef4fe86c9590","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_TEXT_STROKE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_STROKE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$886aac8f642d518","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_TEXT_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$4f723e646af0caaf","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$2aa7b16944fbd366","$23a4f6aded846ad8aacbf1f3eca76e14$var$TEXTAREA","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_STYLE_ARRAY","$23a4f6aded846ad8aacbf1f3eca76e14$export$e0735583683f1e35","$23a4f6aded846ad8aacbf1f3eca76e14$var$defaultIconUrlFunction","href","$23a4f6aded846ad8aacbf1f3eca76e14$var$KML","KML","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","iconUrlFunction_","iconUrlFunction","$23a4f6aded846ad8aacbf1f3eca76e14$var$__extends","readDocumentOrFolder_","readPlacemark_","readSharedStyle_","readSharedStyleMap_","$fe05caf5f991aea82bd67c9bebabc467$exports","getAttribute","styleUrl","sharedStyles","drawName","multiGeometryPoints","geometry1","type1","featureStyle","$23a4f6aded846ad8aacbf1f3eca76e14$var$findStyle","nameStyle","foundStyle","textOffset","$23a4f6aded846ad8aacbf1f3eca76e14$var$createNameStyleFunction","$8af1af76f23419d9d724a1b0182ffb00$exports","$23a4f6aded846ad8aacbf1f3eca76e14$var$createFeatureStyleFunction","styleUri","baseURI","fs","readName","readNameFromDocument","readNameFromNode","name_2","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","setAttributeNS","$dec84ce654dad439cc55f11914ce0714$exports","styleValue","$23a4f6aded846ad8aacbf1f3eca76e14$var$readColor","hexColor","$23a4f6aded846ad8aacbf1f3eca76e14$export$1744e74078e3fa10","re","$23a4f6aded846ad8aacbf1f3eca76e14$var$readScale","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_MAP_PARSERS","pairObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$PAIR_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_STYLE_PARSERS","iconObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_PARSERS","xunits","yunits","$23a4f6aded846ad8aacbf1f3eca76e14$var$LABEL_STYLE_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STYLE_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLY_STYLE_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$FLAT_LINEAR_RING_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$readFlatLinearRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_TRACK_PARSERS","whens","when","gxTrackObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$GEOMETRY_FLAT_COORDINATES_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$readFlatCoordinatesFromNode","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTRUDE_AND_ALTITUDE_MODE_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","$23a4f6aded846ad8aacbf1f3eca76e14$var$setCommonGeometryProperties","$3f89ce735a32ce0bc16220a89ae67b2f$exports","$23a4f6aded846ad8aacbf1f3eca76e14$var$FLAT_LINEAR_RINGS_PARSERS","flatLinearRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$INNER_BOUNDARY_IS_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$OUTER_BOUNDARY_IS_PARSERS","flatLinearRings","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_PARSERS","styleObject","IconObject","drawIcon","hotSpot","heading","outline","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","$23a4f6aded846ad8aacbf1f3eca76e14$var$DATA_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTENDED_DATA_PARSERS","featureObject","displayName","$23a4f6aded846ad8aacbf1f3eca76e14$var$SCHEMA_DATA_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeColorTextNode","rgba","abgr","hex","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTENDEDDATA_NODE_SERIALIZERS","pair","createCDATASection","$90d80a364a39de433c7f5cd490d4f896$export$53afd9ae5847fbf6","$23a4f6aded846ad8aacbf1f3eca76e14$var$DATA_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_STYLE_SERIALIZERS","icon","vec2","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeScaleTextNode","$23a4f6aded846ad8aacbf1f3eca76e14$var$LABEL_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$LABEL_STYLE_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STYLE_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$GEOMETRY_TYPE_TO_NODENAME","$23a4f6aded846ad8aacbf1f3eca76e14$var$GEOMETRY_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$POINT_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STRING_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINEAR_RING_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLYGON_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$MULTI_GEOMETRY_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$writePrimitiveGeometry","$23a4f6aded846ad8aacbf1f3eca76e14$var$writePolygon","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeMultiGeometry","factory","$23a4f6aded846ad8aacbf1f3eca76e14$var$BOUNDARY_IS_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeBoundaryIs","$23a4f6aded846ad8aacbf1f3eca76e14$var$PLACEMARK_SERIALIZERS","namesAndValues","names","pointStyles","lineStyles","polyStyles","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$PLACEMARK_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTENDEDDATA_NODE_FACTORY","styleArray","$23a4f6aded846ad8aacbf1f3eca76e14$var$PRIMITIVE_GEOMETRY_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$PRIMITIVE_GEOMETRY_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLY_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLYGON_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$INNER_BOUNDARY_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$OUTER_BOUNDARY_NODE_FACTORY","outerRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLY_STYLE_SERIALIZERS","iconProperties","$23a4f6aded846ad8aacbf1f3eca76e14$export$9099ad97b570f7c","$f3825b37b83125ff3aea6866c52f7781$export$a9187e77005a4477","$c02a5810599d30b360c99085159aa8cd$var$Pbf","ArrayBuffer","isView","$c02a5810599d30b360c99085159aa8cd$exports","$f3825b37b83125ff3aea6866c52f7781$export$2c262a1484748b93","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","LN2","Varint","Fixed64","Bytes","Fixed32","$c02a5810599d30b360c99085159aa8cd$var$SHIFT_LEFT_32","$c02a5810599d30b360c99085159aa8cd$var$SHIFT_RIGHT_32","$c02a5810599d30b360c99085159aa8cd$var$utf8TextDecoder","TextDecoder","$c02a5810599d30b360c99085159aa8cd$var$readPackedEnd","pbf","readVarint","$c02a5810599d30b360c99085159aa8cd$var$toNum","isSigned","$c02a5810599d30b360c99085159aa8cd$var$makeRoomForExtraLength","startPos","extraLen","realloc","$c02a5810599d30b360c99085159aa8cd$var$writePackedVarint","writeVarint","$c02a5810599d30b360c99085159aa8cd$var$writePackedSVarint","writeSVarint","$c02a5810599d30b360c99085159aa8cd$var$writePackedFloat","writeFloat","$c02a5810599d30b360c99085159aa8cd$var$writePackedDouble","writeDouble","$c02a5810599d30b360c99085159aa8cd$var$writePackedBoolean","writeBoolean","$c02a5810599d30b360c99085159aa8cd$var$writePackedFixed32","writeFixed32","$c02a5810599d30b360c99085159aa8cd$var$writePackedSFixed32","writeSFixed32","$c02a5810599d30b360c99085159aa8cd$var$writePackedFixed64","writeFixed64","$c02a5810599d30b360c99085159aa8cd$var$writePackedSFixed64","writeSFixed64","$c02a5810599d30b360c99085159aa8cd$var$readUInt32","$c02a5810599d30b360c99085159aa8cd$var$writeInt32","$c02a5810599d30b360c99085159aa8cd$var$readInt32","destroy","readFields","readField","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","readDouble","$c02a5810599d30b360c99085159aa8cd$var$readVarintRemainder","readVarint64","readSVarint","num","readBoolean","readString","subarray","$c02a5810599d30b360c99085159aa8cd$var$readUtf8TextDecoder","str","b3","b0","bytesPerSequence","$c02a5810599d30b360c99085159aa8cd$var$readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","$c02a5810599d30b360c99085159aa8cd$var$writeBigVarintLow","lsb","$c02a5810599d30b360c99085159aa8cd$var$writeBigVarintHigh","$c02a5810599d30b360c99085159aa8cd$var$writeBigVarint","writeString","lead","$c02a5810599d30b360c99085159aa8cd$var$writeUtf8","writeBytes","writeRawMessage","writeMessage","writePackedVarint","writePackedSVarint","writePackedBoolean","writePackedFloat","writePackedDouble","writePackedFixed32","writePackedSFixed32","writePackedFixed64","writePackedSFixed64","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","$496051bde5982fa2f9a1c75244a8a448$var$tmpTransform","$496051bde5982fa2f9a1c75244a8a448$var$RenderFeature","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","midpoint","$496051bde5982fa2f9a1c75244a8a448$export$9099ad97b570f7c","$a84ad559375cad730a73fc06d65a36e1$var$layersPBFReader","$a84ad559375cad730a73fc06d65a36e1$var$layerPBFReader","version","$a84ad559375cad730a73fc06d65a36e1$var$featurePBFReader","$a84ad559375cad730a73fc06d65a36e1$var$readRawFeature","$a84ad559375cad730a73fc06d65a36e1$export$9099ad97b570f7c","MVT","featureClass_","featureClass","geometryName","layerName_","layerName","layers_","idProperty_","idProperty","$a84ad559375cad730a73fc06d65a36e1$var$__extends","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","$a84ad559375cad730a73fc06d65a36e1$var$getGeometryType","geom","prevEndIndex","ctor","pbfLayers","pbfLayer","$634f916bc30b7d6650877f3f4b6a8b3a$var$bundleURL","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBaseURL","$634f916bc30b7d6650877f3f4b6a8b3a$export$da289beea9c5b10d","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBundleURL","$824bc590bf0a3702ac7bd27152cb0639$var$dirname","_filePath","filePath","slashIndex","$824bc590bf0a3702ac7bd27152cb0639$var$relative","to","fromParts","divergeIndex","toParts","module","exports","fromId","toId","$824bc590bf0a3702ac7bd27152cb0639$require$resolve","_dirname","_relative","$a6fae0d1f95d1013d47a2666e4cc73f5$exports","getBundleURL","$8b0a2675c277baedbee1394c1e452c41$exports","$5e53b1d105b5ca139e315a45c8d64a63$var$map","$976448907138da16f7612e32ecc55ac7$exports","$5e53b1d105b5ca139e315a45c8d64a63$var$heatmapLayer","$4e846b5067287bfa27b20cce73a80019$exports","$76e99b295c09c7c5e340e251e89879b1$exports","$23a4f6aded846ad8aacbf1f3eca76e14$exports","$5e53b1d105b5ca139e315a45c8d64a63$var$svgContainer","$5e53b1d105b5ca139e315a45c8d64a63$var$xhr","svg","importNode","$5e53b1d105b5ca139e315a45c8d64a63$var$svgResolution","$5e53b1d105b5ca139e315a45c8d64a63$var$width","$5e53b1d105b5ca139e315a45c8d64a63$var$height","$5e53b1d105b5ca139e315a45c8d64a63$var$svgLayer","cssTransform"],"version":3,"file":"mixed-renderers.04944451.js.map"}