{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-9ad14acfe4f80f1cfee32b281017991e.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/util.js","node_modules/ol/src/has.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/webgl.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/webgl/Buffer.js","node_modules/ol/src/webgl/ContextEventType.js","node_modules/ol/src/webgl/PostProcessingPass.js","node_modules/ol/src/vec/mat4.js","node_modules/ol/src/webgl/Helper.js","node_modules/ol/src/renderer/webgl/Layer.js","node_modules/ol/src/webgl/RenderTarget.js","node_modules/ol/src/worker/webgl.js","node_modules/ol/src/renderer/webgl/PointsLayer.js","node_modules/ol/src/layer/Heatmap.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/Feature.js","node_modules/ol/src/geom/GeometryCollection.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/style/Text.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/xml.js","node_modules/ol/src/format/XMLFeature.js","node_modules/ol/src/format/xsd.js","node_modules/ol/src/format/KML.js","node_modules/ieee754/index.js","node_modules/pbf/index.js","node_modules/ol/src/render/Feature.js","node_modules/ol/src/format/MVT.js","node_modules/@parcel/runtime-js/lib/bundle-url.js","node_modules/@parcel/runtime-js/lib/relative-path.js","node_modules/@parcel/runtime-js/lib/runtime-ca6564fba06c1415ad08fd3e11f518ce.js","node_modules/@parcel/runtime-js/lib/runtime-57da72cb66bfba510e50504e4714a779.js","src/mixed-renderers.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./bundle-manifest').register(JSON.parse(\"{\\\"3Wo4N\\\":\\\"mixed-renderers.04944451.js\\\",\\\"oaxmK\\\":\\\"world.843a5534.svg\\\",\\\"6la4e\\\":\\\"2012_Earthquakes_Mag5.c58e23ec.kml\\\",\\\"43PvP\\\":\\\"basemap.fe5b33cb.css\\\"}\"));","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function () {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[\n            i\n          ]).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[\n            i\n          ]).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key)\n    ? changeEventTypeCache[key]\n    : (changeEventTypeCache[key] = 'change:' + key);\n}\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex =\n      zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(\n      LayerProperty.EXTENT\n    ));\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addEventListener(\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext(\n    '2d',\n    opt_Context2DSettings\n  ));\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(layer);\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addEventListener(\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_\n    );\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(\n      Property.LAYERS\n    ));\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance\n      ? moveTolerance * DEVICE_PIXEL_RATIO\n      : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      (tile.hifi && state === TileState.LOADED) ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry = this.getSimplifiedGeometryInternal(\n      squaredTolerance\n    );\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      ViewProperty.CENTER\n    ));\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.minResolution_\n    ));\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.maxResolution_\n    ));\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n          .clone()\n          .transform(userProjection, this.getProjection()));\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n    const coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]\n    );\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    let centerRotX = (minRotX + maxRotX) / 2;\n    let centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addEventListener(\n      getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_\n    );\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(\n      MapProperty.TARGET\n    ));\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(\n      MapProperty.SIZE\n    ));\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (!hasArea(size)) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {\n  createOrUpdateFromCoordinates,\n  getBottomLeft,\n  getCenter,\n  getTopRight,\n  scaleFromCenter,\n} from '../extent.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    let extent = this.getGeometry().getExtent();\n\n    if (this.out_) {\n      const mapExtent = view.calculateExtentInternal(size);\n      const boxPixelExtent = createOrUpdateFromCoordinates([\n        map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n        map.getPixelFromCoordinateInternal(getTopRight(extent)),\n      ]);\n      const factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n\n      scaleFromCenter(mapExtent, 1 / factor);\n      extent = mapExtent;\n    }\n\n    const resolution = view.getConstrainedResolution(\n      view.getResolutionForExtentInternal(extent, size)\n    );\n    const center = view.getConstrainedCenter(getCenter(extent), resolution);\n\n    view.animateInternal({\n      resolution: resolution,\n      center: center,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      const renderOptions = this.createRenderOptions();\n\n      this.createHitDetectionCanvas_(renderOptions);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    if (!this.canvas_[pixelRatio || 1]) {\n      const renderOptions = this.createRenderOptions();\n\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio || 1,\n        renderOptions.size * pixelRatio || 1\n      );\n\n      this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n\n      this.canvas_[pixelRatio || 1] = context.canvas;\n    }\n    return this.canvas_[pixelRatio || 1];\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.imageSize_;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    const renderOptions = this.createRenderOptions();\n\n    const context = createCanvasContext2D(\n      renderOptions.size,\n      renderOptions.size\n    );\n\n    this.draw_(renderOptions, context, 0, 0, 1);\n\n    this.canvas_ = {};\n    this.canvas_[1] = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    const size = context.canvas.width;\n    const imageSize = size;\n    const displacement = this.getDisplacement();\n\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    this.createHitDetectionCanvas_(renderOptions);\n\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, x, y, pixelRatio) {\n    let i, angle0, radiusC;\n\n    // reset transform\n    context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionCanvas_ = this.getImage(1);\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      let i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(\n          geometry\n        ));\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(\n      Property.RENDER_ORDER\n    ));\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clip(context, frameState, extent) {\n    const pixelRatio = frameState.pixelRatio;\n    const halfWidth = (frameState.size[0] * pixelRatio) / 2;\n    const halfHeight = (frameState.size[1] * pixelRatio) / 2;\n    const rotation = frameState.viewState.rotation;\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate = (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    let previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  let previousAngle;\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context[\n      'strokeStyle'\n    ] = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText = /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(0, 0, contextSize, contextSize)\n        .data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      2,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset\n          ? strokeStyleLineDashOffset\n          : defaultLineDashOffset,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          this.pixelRatio_ *\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth),\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      const imageSize = imageStyle.getSize();\n      if (!imageSize) {\n        this.image_ = null;\n      } else {\n        const imageAnchor = imageStyle.getAnchor();\n        // FIXME pixel ratio\n        const imageImage = imageStyle.getImage(1);\n        const imageOrigin = imageStyle.getOrigin();\n        const imageScale = imageStyle.getScaleArray();\n        this.imageAnchorX_ = imageAnchor[0];\n        this.imageAnchorY_ = imageAnchor[1];\n        this.imageHeight_ = imageSize[1];\n        this.image_ = imageImage;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = [\n          this.pixelRatio_ * imageScale[0],\n          this.pixelRatio_ * imageScale[1],\n        ];\n        this.imageWidth_ = imageSize[0];\n      }\n    }\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.getImageSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      clipped =\n        !containsExtent(layerExtent, frameState.extent) &&\n        intersectsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    this.renderWorlds(replayGroup, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.renderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)\n    ) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(\n          toUserExtent(loadExtents[i], projection),\n          resolution,\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/webgl\n */\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [opt_attributes] Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>}\n */\nlet supportedExtensions;\n\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n","/**\n * @module ol/webgl/Buffer\n */\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER} from '../webgl.js';\nimport {DYNAMIC_DRAW, STATIC_DRAW, STREAM_DRAW} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n * @api\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [opt_usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, opt_usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array}\n     */\n    this.array = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type = type;\n\n    assert(type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER, 62);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   */\n  ofSize(size) {\n    this.array = new (getArrayClassForType(this.type))(size);\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {Array<number>} array Numerical array\n   */\n  fromArray(array) {\n    this.array = getArrayClassForType(this.type).from(array);\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   */\n  fromArrayBuffer(buffer) {\n    this.array = new (getArrayClassForType(this.type))(buffer);\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array} Array.\n   */\n  getArray() {\n    return this.array;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array ? this.array.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord);\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {number} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord);\n *   }\n *   ```\n *\n * @api\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position'\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize'\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image'\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach(\n        function (name) {\n          this.uniforms_.push({\n            value: options.uniforms[name],\n            location: gl.getUniformLocation(this.renderTargetProgram_, name),\n          });\n        }.bind(this)\n      );\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @api\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @api\n   */\n  apply(frameState, nextPass) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    // render the frame buffer to the canvas\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    this.applyUniforms(frameState);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   * @api\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data)\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n  getSupportedExtensions,\n} from '../webgl.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\nimport {includes} from '../array.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Uniform names used in the default shaders: `PROJECTION_MATRIX`, `OFFSET_SCALE_MATRIX`.\n * and `OFFSET_ROTATION_MATRIX`.\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n  OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Use {@link enableAttributeArray_} and either\n *   the default attribute names in {@link module:ol/webgl/Helper.DefaultAttrib} or custom ones.\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n *\n * @api\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n    const options = opt_options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ = this.handleWebGLContextRestored.bind(\n      this\n    );\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = document.createElement('canvas');\n    this.canvas_.style.position = 'absolute';\n    this.canvas_.style.left = '0';\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getContext(this.canvas_);\n    const gl = this.getGL();\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    assert(includes(getSupportedExtensions(), 'OES_element_index_uint'), 63);\n    gl.getExtension('OES_element_index_uint');\n\n    this.canvas_.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, WebGLUniformLocation>}\n     */\n    this.uniformLocations_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.attribLocations_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      for (const name in options.uniforms) {\n        this.uniforms_.push({\n          name: name,\n          value: options.uniforms[name],\n        });\n      }\n    }\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(function (options) {\n          return new WebGLPostProcessingPass({\n            webGlContext: gl,\n            scaleRatio: options.scaleRatio,\n            vertexShader: options.vertexShader,\n            fragmentShader: options.fragmentShader,\n            uniforms: options.uniforms,\n          });\n        })\n      : [new WebGLPostProcessingPass({webGlContext: gl})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   * @api\n   */\n  bindBuffer(buffer) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   * @api\n   */\n  flushBufferData(buffer) {\n    const gl = this.getGL();\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.canvas_.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @api\n   */\n  prepareDraw(frameState) {\n    const gl = this.getGL();\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n\n    gl.useProgram(this.currentProgram_);\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n    gl.useProgram(this.currentProgram_);\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [opt_disableAlphaBlend] If true, no alpha blending will happen.\n   */\n  prepareDrawToRenderTarget(frameState, renderTarget, opt_disableAlphaBlend) {\n    const gl = this.getGL();\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(\n      gl.ONE,\n      opt_disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA\n    );\n\n    gl.useProgram(this.currentProgram_);\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   * @api\n   */\n  drawElements(start, end) {\n    const gl = this.getGL();\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @api\n   */\n  finalizeDraw(frameState) {\n    // apply post processes using the next one as target\n    for (let i = 0; i < this.postProcessPasses_.length; i++) {\n      this.postProcessPasses_[i].apply(\n        frameState,\n        this.postProcessPasses_[i + 1] || null\n      );\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   * @api\n   */\n  getCanvas() {\n    return this.canvas_;\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n\n    const offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    const offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_SCALE_MATRIX,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix)\n    );\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_ROTATION_MATRIX,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix)\n    );\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution\n    );\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach(\n      function (uniform) {\n        value =\n          typeof uniform.value === 'function'\n            ? uniform.value(frameState)\n            : uniform.value;\n\n        // apply value based on type\n        if (\n          value instanceof HTMLCanvasElement ||\n          value instanceof HTMLImageElement ||\n          value instanceof ImageData\n        ) {\n          // create a texture & put data\n          if (!uniform.texture) {\n            uniform.prevValue = undefined;\n            uniform.texture = gl.createTexture();\n          }\n          gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n          gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n          const imageReady =\n            !(value instanceof HTMLImageElement) ||\n            /** @type {HTMLImageElement} */ (value).complete;\n          if (imageReady && uniform.prevValue !== value) {\n            uniform.prevValue = value;\n            gl.texImage2D(\n              gl.TEXTURE_2D,\n              0,\n              gl.RGBA,\n              gl.RGBA,\n              gl.UNSIGNED_BYTE,\n              value\n            );\n          }\n\n          // fill texture slots by increasing index\n          gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n        } else if (Array.isArray(value) && value.length === 6) {\n          this.setUniformMatrixValue(\n            uniform.name,\n            fromTransform(this.tmpMat4_, value)\n          );\n        } else if (Array.isArray(value) && value.length <= 4) {\n          switch (value.length) {\n            case 2:\n              gl.uniform2f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1]\n              );\n              return;\n            case 3:\n              gl.uniform3f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1],\n                value[2]\n              );\n              return;\n            case 4:\n              gl.uniform4f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1],\n                value[2],\n                value[3]\n              );\n              return;\n            default:\n              return;\n          }\n        } else if (typeof value === 'number') {\n          gl.uniform1f(this.getUniformLocation(uniform.name), value);\n        }\n      }.bind(this)\n    );\n  }\n\n  /**\n   * Use a program.  If the program is already in use, this will return `false`.\n   * @param {WebGLProgram} program Program.\n   * @return {boolean} Changed.\n   * @api\n   */\n  useProgram(program) {\n    if (program == this.currentProgram_) {\n      return false;\n    } else {\n      const gl = this.getGL();\n      gl.useProgram(program);\n      this.currentProgram_ = program;\n      this.uniformLocations_ = {};\n      this.attribLocations_ = {};\n      return true;\n    }\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.getGL();\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   * @api\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.getGL();\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compliation failed: ${gl.getShaderInfoLog(\n        fragmentShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   * @api\n   */\n  getUniformLocation(name) {\n    if (this.uniformLocations_[name] === undefined) {\n      this.uniformLocations_[name] = this.getGL().getUniformLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.uniformLocations_[name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   * @api\n   */\n  getAttributeLocation(name) {\n    if (this.attribLocations_[name] === undefined) {\n      this.attribLocations_[name] = this.getGL().getAttribLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.attribLocations_[name];\n  }\n\n  /**\n   * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   * @api\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n\n    resetTransform(transform);\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1]\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   * @api\n   */\n  setUniformFloatValue(uniform, value) {\n    this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   * @api\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.getGL().uniformMatrix4fv(\n      this.getUniformLocation(uniform),\n      false,\n      value\n    );\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.getGL().enableVertexAttribArray(location);\n    this.getGL().vertexAttribPointer(\n      location,\n      size,\n      type,\n      false,\n      stride,\n      offset\n    );\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   * @api\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @private\n   */\n  handleWebGLContextLost() {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {}\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [opt_data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [opt_texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   * @api\n   */\n  createTexture(size, opt_data, opt_texture) {\n    const gl = this.getGL();\n    const texture = opt_texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (opt_data) {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        format,\n        type,\n        opt_data\n      );\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n * @api\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_BUFFERS: 'GENERATE_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions Render instructions raw binary buffer.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {number} [customAttributesCount] Amount of custom attributes count in the render instructions.\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(layer, opt_options) {\n    super(layer);\n\n    const options = opt_options || {};\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper = new WebGLHelper({\n      postProcesses: options.postProcesses,\n      uniforms: options.uniforms,\n    });\n\n    if (options.className !== undefined) {\n      this.helper.getCanvas().className = options.className;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.helper.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      // RenderEvent does not get a context or an inversePixelTransform, because WebGL allows much less direct editing than Canvas2d does.\n      const event = new RenderEvent(type, null, frameState, null);\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, frameState);\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, frameState);\n  }\n}\n\nconst tmpArray_ = [];\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesCount Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesCount,\n  bufferPositions\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesCount;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesCount;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [opt_array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, opt_array) {\n  const array = opt_array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n * @api\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [opt_size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, opt_size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = opt_size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   * @api\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   * @api\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   * @api\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   * @api\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n","\n        const source = \"var e=\\\"function\\\"==typeof Object.assign?Object.assign:function(e,n){if(null==e)throw new TypeError(\\\"Cannot convert undefined or null to object\\\");for(var t=Object(e),r=1,o=arguments.length;r<o;++r){var i=arguments[r];if(null!=i)for(var f in i)i.hasOwnProperty(f)&&(t[f]=i[f])}return t},n=\\\"GENERATE_BUFFERS\\\",t=[],r={vertexPosition:0,indexPosition:0};function o(e,n,t,r,o){e[n+0]=t,e[n+1]=r,e[n+2]=o}function i(e,n,i,f,s,u){var a=3+s,l=e[n+0],v=e[n+1],c=t;c.length=s;for(var g=0;g<c.length;g++)c[g]=e[n+2+g];var b=u?u.vertexPosition:0,h=u?u.indexPosition:0,d=b/a;return o(i,b,l,v,0),c.length&&i.set(c,b+3),o(i,b+=a,l,v,1),c.length&&i.set(c,b+3),o(i,b+=a,l,v,2),c.length&&i.set(c,b+3),o(i,b+=a,l,v,3),c.length&&i.set(c,b+3),b+=a,f[h++]=d,f[h++]=d+1,f[h++]=d+3,f[h++]=d+1,f[h++]=d+2,f[h++]=d+3,r.vertexPosition=b,r.indexPosition=h,r}var f=self;f.onmessage=function(t){var r=t.data;if(r.type===n){for(var o=r.customAttributesCount,s=2+o,u=new Float32Array(r.renderInstructions),a=u.length/s,l=4*a*(o+3),v=new Uint32Array(6*a),c=new Float32Array(l),g=null,b=0;b<u.length;b+=s)g=i(u,b,c,v,o,g);var h=e({vertexBuffer:c.buffer,indexBuffer:v.buffer,renderInstructions:u.buffer},r);f.postMessage(h,[c.buffer,v.buffer,u.buffer])}};\";\n        const blob = new Blob([source], {type: 'application/javascript'});\n        const url = URL.createObjectURL(blob);\n        export function create() {\n          return new Worker(url);\n        }\n      \n","/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer, {\n  WebGLWorkerMessageType,\n  colorDecodeId,\n  colorEncodeId,\n} from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {AttributeType, DefaultUniform} from '../../webgl/Helper.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n} from '../../transform.js';\nimport {assert} from '../../asserts.js';\nimport {buffer, createEmpty, equals} from '../../extent.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {getUid} from '../../util.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {string} [hitVertexShader] Vertex shader source for hit detection rendering.\n * @property {string} [hitFragmentShader] Fragment shader source for hit detection rendering.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      className: options.className,\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.sourceRevision_ = -1;\n\n    this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.hitVerticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.indicesBuffer_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      DYNAMIC_DRAW\n    );\n\n    this.program_ = this.helper.getProgram(\n      options.fragmentShader,\n      options.vertexShader\n    );\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ =\n      options.hitFragmentShader && options.hitVertexShader ? true : false;\n\n    this.hitProgram_ =\n      this.hitDetectionEnabled_ &&\n      this.helper.getProgram(\n        options.hitFragmentShader,\n        options.hitVertexShader\n      );\n\n    const customAttributes = options.attributes\n      ? options.attributes.map(function (attribute) {\n          return {\n            name: 'a_' + attribute.name,\n            size: 1,\n            type: AttributeType.FLOAT,\n          };\n        })\n      : [];\n\n    /**\n     * A list of attributes used by the renderer. By default only the position and\n     * index of the vertex (0 to 3) are required.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.attributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    /**\n     * A list of attributes used for hit detection.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.hitDetectionAttributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_hitColor',\n        size: 4,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_featureUid',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    this.customAttributes = options.attributes ? options.attributes : [];\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    /**\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.renderTransform_ = createTransform();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.invertRenderTransform_ = createTransform();\n\n    /**\n     * @type {Float32Array}\n     * @private\n     */\n    this.renderInstructions_ = new Float32Array(0);\n\n    /**\n     * These instructions are used for hit detection\n     * @type {Float32Array}\n     * @private\n     */\n    this.hitRenderInstructions_ = new Float32Array(0);\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_ =\n      this.hitDetectionEnabled_ && new WebGLRenderTarget(this.helper);\n\n    this.worker_ = createWebGLWorker();\n    this.worker_.addEventListener(\n      'message',\n      /**\n       * @param {*} event Event.\n       * @this {WebGLPointsLayerRenderer}\n       */\n      function (event) {\n        const received = event.data;\n        if (received.type === WebGLWorkerMessageType.GENERATE_BUFFERS) {\n          const projectionTransform = received.projectionTransform;\n          if (received.hitDetection) {\n            this.hitVerticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.hitVerticesBuffer_);\n          } else {\n            this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.verticesBuffer_);\n          }\n          this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n          this.helper.flushBufferData(this.indicesBuffer_);\n\n          this.renderTransform_ = projectionTransform;\n          makeInverseTransform(\n            this.invertRenderTransform_,\n            this.renderTransform_\n          );\n          if (received.hitDetection) {\n            this.hitRenderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n          } else {\n            this.renderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n          }\n\n          this.getLayer().changed();\n        }\n      }.bind(this)\n    );\n\n    /**\n     * This object will be updated when the source changes. Key is uid.\n     * @type {Object<string, FeatureCacheItem>}\n     * @private\n     */\n    this.featureCache_ = {};\n\n    /**\n     * Amount of features in the cache.\n     * @type {number}\n     * @private\n     */\n    this.featureCount_ = 0;\n\n    const source = this.getLayer().getSource();\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this\n      ),\n    ];\n    source.forEachFeature(\n      function (feature) {\n        this.featureCache_[getUid(feature)] = {\n          feature: feature,\n          properties: feature.getProperties(),\n          geometry: feature.getGeometry(),\n        };\n        this.featureCount_++;\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n    this.featureCount_++;\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    delete this.featureCache_[getUid(feature)];\n    this.featureCount_--;\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.featureCache_ = {};\n    this.featureCount_ = 0;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    this.preRender(frameState);\n\n    const renderCount = this.indicesBuffer_.getSize();\n    this.helper.drawElements(0, renderCount);\n    this.helper.finalizeDraw(frameState);\n    const canvas = this.helper.getCanvas();\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const opacity = layerState.opacity;\n    if (opacity !== parseFloat(canvas.style.opacity)) {\n      canvas.style.opacity = String(opacity);\n    }\n\n    if (this.hitDetectionEnabled_) {\n      this.renderHitDetection(frameState);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(frameState);\n\n    return canvas;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.rebuildBuffers_(frameState);\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    // apply the current projection transform with the invert of the one used to fill buffers\n    this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n    multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n\n    this.helper.useProgram(this.program_);\n    this.helper.prepareDraw(frameState);\n\n    // write new data\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n\n    this.helper.enableAttributes(this.attributes);\n\n    return true;\n  }\n\n  /**\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n   * @param {import(\"../../PluggableMap\").FrameState} frameState Frame state.\n   * @private\n   */\n  rebuildBuffers_(frameState) {\n    // saves the projection transform for the current frame state\n    const projectionTransform = createTransform();\n    this.helper.makeProjectionTransform(frameState, projectionTransform);\n\n    // here we anticipate the amount of render instructions that we well generate\n    // this can be done since we know that for normal render we only have x, y as base instructions,\n    // and x, y, r, g, b, a and featureUid for hit render instructions\n    // and we also know the amount of custom attributes to append to these\n    const totalInstructionsCount =\n      (2 + this.customAttributes.length) * this.featureCount_;\n    if (\n      !this.renderInstructions_ ||\n      this.renderInstructions_.length !== totalInstructionsCount\n    ) {\n      this.renderInstructions_ = new Float32Array(totalInstructionsCount);\n    }\n    if (this.hitDetectionEnabled_) {\n      const totalHitInstructionsCount =\n        (7 + this.customAttributes.length) * this.featureCount_;\n      if (\n        !this.hitRenderInstructions_ ||\n        this.hitRenderInstructions_.length !== totalHitInstructionsCount\n      ) {\n        this.hitRenderInstructions_ = new Float32Array(\n          totalHitInstructionsCount\n        );\n      }\n    }\n\n    // loop on features to fill the buffer\n    let featureCache, geometry;\n    const tmpCoords = [];\n    const tmpColor = [];\n    let renderIndex = 0;\n    let hitIndex = 0;\n    let hitColor;\n    for (const featureUid in this.featureCache_) {\n      featureCache = this.featureCache_[featureUid];\n      geometry = /** @type {import(\"../../geom\").Point} */ (featureCache.geometry);\n      if (!geometry || geometry.getType() !== GeometryType.POINT) {\n        continue;\n      }\n\n      tmpCoords[0] = geometry.getFlatCoordinates()[0];\n      tmpCoords[1] = geometry.getFlatCoordinates()[1];\n      applyTransform(projectionTransform, tmpCoords);\n\n      hitColor = colorEncodeId(hitIndex + 6, tmpColor);\n\n      this.renderInstructions_[renderIndex++] = tmpCoords[0];\n      this.renderInstructions_[renderIndex++] = tmpCoords[1];\n\n      // for hit detection, the feature uid is saved in the opacity value\n      // and the index of the opacity value is encoded in the color values\n      if (this.hitDetectionEnabled_) {\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[0];\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[0];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[2];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[3];\n        this.hitRenderInstructions_[hitIndex++] = Number(featureUid);\n      }\n\n      // pushing custom attributes\n      let value;\n      for (let j = 0; j < this.customAttributes.length; j++) {\n        value = this.customAttributes[j].callback(\n          featureCache.feature,\n          featureCache.properties\n        );\n        this.renderInstructions_[renderIndex++] = value;\n        if (this.hitDetectionEnabled_) {\n          this.hitRenderInstructions_[hitIndex++] = value;\n        }\n      }\n    }\n\n    /** @type {import('./Layer').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      type: WebGLWorkerMessageType.GENERATE_BUFFERS,\n      renderInstructions: this.renderInstructions_.buffer,\n      customAttributesCount: this.customAttributes.length,\n    };\n    // additional properties will be sent back as-is by the worker\n    message['projectionTransform'] = projectionTransform;\n    this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n    this.renderInstructions_ = null;\n\n    /** @type {import('./Layer').WebGLWorkerGenerateBuffersMessage} */\n    if (this.hitDetectionEnabled_) {\n      const hitMessage = {\n        type: WebGLWorkerMessageType.GENERATE_BUFFERS,\n        renderInstructions: this.hitRenderInstructions_.buffer,\n        customAttributesCount: 5 + this.customAttributes.length,\n      };\n      hitMessage['projectionTransform'] = projectionTransform;\n      hitMessage['hitDetection'] = true;\n      this.worker_.postMessage(hitMessage, [\n        this.hitRenderInstructions_.buffer,\n      ]);\n      this.hitRenderInstructions_ = null;\n    }\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    assert(this.hitDetectionEnabled_, 66);\n    if (!this.hitRenderInstructions_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice()\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const index = colorDecodeId(color);\n    const opacity = this.hitRenderInstructions_[index];\n    const uid = Math.floor(opacity).toString();\n\n    const source = this.getLayer().getSource();\n    const feature = source.getFeatureByUid(uid);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Render the hit detection data to the corresponding render target\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState current frame state\n   */\n  renderHitDetection(frameState) {\n    // skip render entirely if vertex buffers not ready/generated yet\n    if (!this.hitVerticesBuffer_.getSize()) {\n      return;\n    }\n\n    this.hitRenderTarget_.setSize([\n      Math.floor(frameState.size[0] / 2),\n      Math.floor(frameState.size[1] / 2),\n    ]);\n\n    this.helper.useProgram(this.hitProgram_);\n    this.helper.prepareDrawToRenderTarget(\n      frameState,\n      this.hitRenderTarget_,\n      true\n    );\n\n    this.helper.bindBuffer(this.hitVerticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n\n    this.helper.enableAttributes(this.hitDetectionAttributes);\n\n    const renderCount = this.indicesBuffer_.getSize();\n    this.helper.drawElements(0, renderCount);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default WebGLPointsLayerRenderer;\n","/**\n * @module ol/layer/Heatmap\n */\nimport VectorLayer from './Vector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getChangeEventType} from '../Object.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Heatmap extends VectorLayer {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addEventListener(\n      getChangeEventType(Property.GRADIENT),\n      this.handleGradientChanged_\n    );\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {WebGLPointsLayerRenderer} A layer renderer.\n   */\n  createRenderer() {\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: function (feature) {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          }.bind(this),\n        },\n      ],\n      vertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_weight = a_weight;\n        }`,\n      fragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\n        }`,\n      hitVertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n        attribute vec4 a_hitColor;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_hitColor = a_hitColor;\n          v_weight = a_weight;\n        }`,\n      hitFragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          if (alpha < 0.05) {\n            discard;\n          }\n\n          gl_FragColor = v_hitColor;\n        }`,\n      uniforms: {\n        u_size: function () {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        }.bind(this),\n        u_blurSlope: function () {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        }.bind(this),\n      },\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: function () {\n              return this.gradient_;\n            }.bind(this),\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (this.get(\n      TileProperty.USE_INTERIM_TILES_ON_ERROR\n    ));\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[\n          tileCoordKey\n        ]);\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const floatX = origin[0] - (originTileCoord[1] - tileCoord[1]) * dx;\n        const nextX = Math.round(floatX + dx);\n        const floatY = origin[1] - (originTileCoord[2] - tileCoord[2]) * dy;\n        const nextY = Math.round(floatY + dy);\n        const x = Math.round(floatX);\n        const y = Math.round(floatY);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n          layerState.opacity\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @param {number} opacity Opacity.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alpha = opacity * tileAlpha;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (tileAlpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/loadingstrategy\n */\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (format.readFeatures(source, {\n            extent: extent,\n            featureProjection: projection,\n          })),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_ === VOID ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/Feature\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|Object<string, *>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(\n      this.hasProperties() ? this.getProperties() : null\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.geometryName_ = name;\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [opt_geometries] Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (geometries[\n            i\n          ]).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(\n        squaredTolerance\n      );\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport {toSize} from '../size.js';\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {import(\"./TextPlacement.js\").default|string}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {string|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {string|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {string|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {string|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {!Array<number>} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        let array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = [];\n          object[property] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      opt_this !== undefined ? opt_this : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [opt_nodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [opt_namespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  const fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [opt_nodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n      const context = /** @type {NodeStackItem} */ (objectStack[\n        objectStack.length - 1\n      ]);\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      const namespaceURI =\n        opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [opt_structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  const structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(\n  object,\n  parsersNS,\n  node,\n  objectStack,\n  opt_this\n) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  const length = (opt_keys !== undefined ? opt_keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        opt_this !== undefined ? opt_this : this,\n        value,\n        objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          opt_this,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  objectStack.push(object);\n  serialize(\n    serializersNS,\n    nodeFactory,\n    values,\n    objectStack,\n    opt_keys,\n    opt_this\n  );\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.XML;\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readFeatureFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, opt_options) {\n    const features = this.readFeaturesFromDocument(doc, opt_options);\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    if (!source) {\n      return [];\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readFeaturesFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, opt_options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), opt_options)\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readGeometryFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readProjectionFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, opt_options) {\n    const node = this.writeFeatureNode(feature, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    const node = this.writeFeaturesNode(features, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, opt_options) {\n    const node = this.writeGeometryNode(geometry, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, opt_options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {extend, includes} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/IconAnchorUnits\").default} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/IconAnchorUnits\").default} yunits Units of Y.\n * @property {import(\"../style/IconOrigin.js\").default} origin Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/IconAnchorUnits\").default>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {number}\n */\nlet DEFAULT_IMAGE_SCALE_MULTIPLIER;\n\n/**\n * @type {import(\"../style/Image.js\").default}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, opt_options),\n    ]);\n    if (feature) {\n      return feature;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, opt_options),\n      ]);\n      if (features) {\n        return features;\n      } else {\n        return [];\n      }\n    } else if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, opt_options),\n      ]);\n      if (feature) {\n        return [feature];\n      } else {\n        return [];\n      }\n    } else if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, opt_options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readNameFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source))\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n))\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [opt_options],\n      orderedKeys,\n      this\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    let imageSize = imageStyle.getImageSize();\n    if (imageSize === null) {\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = (imageScale[0] * imageSize[0]) / 2;\n      textOffset[1] = (-imageScale[1] * imageSize[1]) / 2;\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return (\n                  type === GeometryType.POINT ||\n                  type === GeometryType.MULTI_POINT\n                );\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            drawName =\n              type === GeometryType.POINT || type === GeometryType.MULTI_POINT;\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && name.search(/&[^&]+;/) > -1) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n      if (scale === undefined) {\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      flatCoordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(flatCoordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n    lineString.setProperties(properties, true);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, GeometryLayout.XYZ);\n    point.setProperties(properties, true);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    ('fillStyle' in styleObject\n      ? styleObject['fillStyle']\n      : DEFAULT_FILL_STYLE);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = styleObject['imageStyle'];\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    ('textStyle' in styleObject\n      ? styleObject['textStyle']\n      : DEFAULT_TEXT_STYLE);\n  const strokeStyle =\n    /** @type {Stroke} */\n    ('strokeStyle' in styleObject\n      ? styleObject['strokeStyle']\n      : DEFAULT_STROKE_STYLE);\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            return new GeometryCollection(\n              geometry\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type !== GeometryType.POLYGON &&\n                    type !== GeometryType.MULTI_POLYGON\n                  );\n                })\n            );\n          } else if (\n            type !== GeometryType.POLYGON &&\n            type !== GeometryType.MULTI_POLYGON\n          ) {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            return new GeometryCollection(\n              geometry\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type === GeometryType.POLYGON ||\n                    type === GeometryType.MULTI_POLYGON\n                  );\n                })\n            );\n          } else if (\n            type === GeometryType.POLYGON ||\n            type === GeometryType.MULTI_POLYGON\n          ) {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY || layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName']\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value']\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value']\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h'])\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  })\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: IconAnchorUnits.PIXELS,\n          y: size[1] - anchor[1],\n          yunits: IconAnchorUnits.PIXELS,\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ]\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === GeometryType.GEOMETRY_COLLECTION) {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === GeometryType.MULTI_POINT) {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints()\n          );\n        } else if (type === GeometryType.MULTI_LINE_STRING) {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings()\n          );\n        } else if (type === GeometryType.MULTI_POLYGON) {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons()\n          );\n        } else if (\n          type === GeometryType.POINT ||\n          type === GeometryType.LINE_STRING ||\n          type === GeometryType.POLYGON\n        ) {\n          geometries.push(geometry);\n        } else {\n          assert(false, 39); // Unknown geometry type\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_POINT) {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_LINE_STRING) {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_POLYGON) {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === GeometryType.GEOMETRY_COLLECTION) {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type === GeometryType.POINT ||\n                    type === GeometryType.MULTI_POINT\n                  );\n                }).length;\n            }\n            return (\n              type === GeometryType.POINT || type === GeometryType.MULTI_POINT\n            );\n          }\n        });\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === GeometryType.GEOMETRY_COLLECTION) {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return (\n                      type === GeometryType.LINE_STRING ||\n                      type === GeometryType.MULTI_LINE_STRING\n                    );\n                  }).length;\n              }\n              return (\n                type === GeometryType.LINE_STRING ||\n                type === GeometryType.MULTI_LINE_STRING\n              );\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === GeometryType.GEOMETRY_COLLECTION) {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return (\n                      type === GeometryType.POLYGON ||\n                      type === GeometryType.MULTI_POLYGON\n                    );\n                  }).length;\n              }\n              return (\n                type === GeometryType.POLYGON ||\n                type === GeometryType.MULTI_POLYGON\n              );\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/render/Feature\n */\nimport GeometryType from '../geom/GeometryType.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {import(\"../geom/GeometryType.js\").default} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {import(\"../geom/GeometryType.js\").default}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|Array<Array<number>>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === GeometryType.POINT\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return 2;\n  }\n\n  /**\n   * @return {undefined}\n   */\n  getStyleFunction() {\n    return undefined;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {import(\"../geom/GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n  /**\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n}\n\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\nexport default RenderFeature;\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport FormatType from './FormatType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport Units from '../proj/Units.js';\nimport {assert} from '../asserts.js';\nimport {get} from '../proj.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [opt_options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: Units.TILE_PIXELS,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = [];\n    const ends = [];\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == GeometryType.POLYGON) {\n        const endss = [];\n        let offset = 0;\n        let prevEndIndex = 0;\n        for (let i = 0, ii = ends.length; i < ii; ++i) {\n          const end = ends[i];\n          // classifies an array of rings into polygons with outer rings and holes\n          if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n            endss.push(ends.slice(prevEndIndex, i + 1));\n          } else {\n            if (endss.length === 0) {\n              continue;\n            }\n            endss[endss.length - 1].push(ends[prevEndIndex]);\n          }\n          prevEndIndex = i + 1;\n          offset = end;\n        }\n        if (endss.length > 1) {\n          geom = new MultiPolygon(flatCoordinates, GeometryLayout.XY, endss);\n        } else {\n          geom = new Polygon(flatCoordinates, GeometryLayout.XY, ends);\n        }\n      } else {\n        geom =\n          geometryType === GeometryType.POINT\n            ? new Point(flatCoordinates, GeometryLayout.XY)\n            : geometryType === GeometryType.LINE_STRING\n            ? new LineString(flatCoordinates, GeometryLayout.XY)\n            : geometryType === GeometryType.POLYGON\n            ? new Polygon(flatCoordinates, GeometryLayout.XY, ends)\n            : geometryType === GeometryType.MULTI_POINT\n            ? new MultiPoint(flatCoordinates, GeometryLayout.XY)\n            : geometryType === GeometryType.MULTI_LINE_STRING\n            ? new MultiLineString(flatCoordinates, GeometryLayout.XY, ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (this\n        .featureClass_);\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      feature.setId(id);\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.ARRAY_BUFFER;\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    const layers = this.layers_;\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (this.adaptOptions(\n      opt_options\n    ));\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && layers.indexOf(name) == -1) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        features.push(this.createFeature_(pbf, rawFeature, options));\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/GeometryType.js\").default} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/GeometryType.js\").default} */\n  let geometryType;\n  if (type === 1) {\n    geometryType =\n      numEnds === 1 ? GeometryType.POINT : GeometryType.MULTI_POINT;\n  } else if (type === 2) {\n    geometryType =\n      numEnds === 1 ? GeometryType.LINE_STRING : GeometryType.MULTI_LINE_STRING;\n  } else if (type === 3) {\n    geometryType = GeometryType.POLYGON;\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar resolve = require('./bundle-manifest').resolve;\n\nmodule.exports = function (fromId, toId) {\n  return relative(dirname(resolve(fromId)), resolve(toId));\n};\n\nfunction dirname(_filePath) {\n  if (_filePath === '') {\n    return '.';\n  }\n\n  var filePath = _filePath[_filePath.length - 1] === '/' ? _filePath.slice(0, _filePath.length - 1) : _filePath;\n  var slashIndex = filePath.lastIndexOf('/');\n  return slashIndex === -1 ? '.' : filePath.slice(0, slashIndex);\n}\n\nfunction relative(from, to) {\n  if (from === to) {\n    return '';\n  }\n\n  var fromParts = from.split('/');\n\n  if (fromParts[0] === '.') {\n    fromParts.shift();\n  }\n\n  var toParts = to.split('/');\n\n  if (toParts[0] === '.') {\n    toParts.shift();\n  } // Find where path segments diverge.\n\n\n  var i;\n  var divergeIndex;\n\n  for (i = 0; (i < toParts.length || i < fromParts.length) && divergeIndex == null; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      divergeIndex = i;\n    }\n  } // If there are segments from \"from\" beyond the point of divergence,\n  // return back up the path to that point using \"..\".\n\n\n  var parts = [];\n\n  for (i = 0; i < fromParts.length - divergeIndex; i++) {\n    parts.push('..');\n  } // If there are segments from \"to\" beyond the point of divergence,\n  // continue using the remaining segments.\n\n\n  if (toParts.length > divergeIndex) {\n    parts.push.apply(parts, toParts.slice(divergeIndex));\n  }\n\n  return parts.join('/');\n}\n\nmodule.exports._dirname = dirname;\nmodule.exports._relative = relative;","module.exports = require('./bundle-url').getBundleURL() + require('./relative-path')(\"3Wo4N\", \"oaxmK\")","module.exports = require('./bundle-url').getBundleURL() + require('./relative-path')(\"3Wo4N\", \"6la4e\")","import 'ol/ol.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport {Layer, Heatmap} from 'ol/layer';\nimport {composeCssTransform} from 'ol/transform';\nimport VectorSource from 'ol/source/Vector';\nimport {KML} from 'ol/format';\n\n// @ts-ignore\nimport svg from 'url:./data/world.svg';\n// @ts-ignore\nimport earthquakes from 'url:./data/2012_Earthquakes_Mag5.kml';\n\nvar map = new Map({\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    extent: [-180, -90, 180, 90],\n    projection: 'EPSG:4326',\n    zoom: 2\n  })\n});\n\nconst heatmapLayer = new Heatmap({\n  source: new VectorSource({\n    url: earthquakes,\n    format: new KML({\n      extractStyles: false\n    })\n  })\n});\n\nmap.addLayer(heatmapLayer);\n\nvar svgContainer = document.createElement('div');\nvar xhr = new XMLHttpRequest();\nconsole.log(svg)\nxhr.open('GET', svg);\nxhr.addEventListener('load', function() {\n  var svg = xhr.responseXML.documentElement;\n  svgContainer.ownerDocument.importNode(svg, false);\n  svgContainer.appendChild(svg);\n});\nxhr.send();\n\nvar width = 2560;\nvar height = 1280;\nvar svgResolution = 360 / width;\nsvgContainer.style.width = width + 'px';\nsvgContainer.style.height = height + 'px';\nsvgContainer.style.transformOrigin = 'top left';\nsvgContainer.style.position = 'absolute';\nsvgContainer.className = 'svg-layer';\n\nconst svgLayer = new Layer({\n  /**\n   * @param {import(\"ol/PluggableMap\").FrameState} frameState \n   */\n  render: function(frameState) {\n    var scale = svgResolution / frameState.viewState.resolution;\n    var center = frameState.viewState.center;\n    var size = frameState.size;\n    var cssTransform = composeCssTransform(\n      size[0] / 2, size[1] / 2,\n      scale, scale,\n      frameState.viewState.rotation,\n      -center[0] / svgResolution - width / 2, center[1] / svgResolution - height / 2);\n    svgContainer.style.transform = cssTransform;\n    svgContainer.style.opacity = String(svgLayer.getOpacity());\n    return svgContainer;\n  }\n});\n\nmap.addLayer(svgLayer);"],"names":["$7d806a7a603c235ec027b73d847f4d95$var$mapping","$7d806a7a603c235ec027b73d847f4d95$export$357eb1b4f03c1402","pairs","keys","Object","i","length","$7d806a7a603c235ec027b73d847f4d95$export$40339995e8a21591","id","resolved","Error","parcelRequire","register","JSON","parse","$f7bbc97715b7cef936b659025f276afb$export$9099ad97b570f7c","Disposable","this","disposed","prototype","dispose","disposeInternal","$7c21d7646a0313abf7b847efa68bfceb$export$8eda8fbd1364c8a1","a","b","$7c21d7646a0313abf7b847efa68bfceb$export$627ad4a8fadf1912","arr","obj","indexOf","$7c21d7646a0313abf7b847efa68bfceb$export$45934da9231b7323","target","direction","n","$7c21d7646a0313abf7b847efa68bfceb$export$1f4f991ce94838ce","begin","end","tmp","$7c21d7646a0313abf7b847efa68bfceb$export$46e35401bc090c62","data","extension","Array","isArray","$7c21d7646a0313abf7b847efa68bfceb$export$bcc761834e33d339","arr1","arr2","len1","$8ff7925ef9afa7e69604ab9620edac22$export$ad8dd69aa6772cd0","$8ff7925ef9afa7e69604ab9620edac22$export$5c50afa32081505e","$8ff7925ef9afa7e69604ab9620edac22$export$3850addf0fb4e6a7","$cd365e7aabd14aaf6df378f6a61e84d7$export$18e1b4ff5b3c2297","$cd365e7aabd14aaf6df378f6a61e84d7$var$uidCounter_","$cd365e7aabd14aaf6df378f6a61e84d7$export$604e9536b9e0488a","ol_uid","String","$cd365e7aabd14aaf6df378f6a61e84d7$export$f2eb173e8f6e4130","$2016f251f21b02e27a5ca36c37510540$var$ua","navigator","userAgent","toLowerCase","$2016f251f21b02e27a5ca36c37510540$export$543c908bf17a24fb","$2016f251f21b02e27a5ca36c37510540$export$bccc8605349feea7","$2016f251f21b02e27a5ca36c37510540$export$f16ffc71033a7aaa","$2016f251f21b02e27a5ca36c37510540$export$1940d5d2b4cf824d","devicePixelRatio","$2016f251f21b02e27a5ca36c37510540$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$2016f251f21b02e27a5ca36c37510540$export$9544418e5c6fedfe","Image","decode","$2016f251f21b02e27a5ca36c37510540$export$700ce540937d8c69","passive","options","defineProperty","get","window","addEventListener","removeEventListener","error","$fd652548d0f540d94aaff6aa830746d2$export$9099ad97b570f7c","_super","AssertionError","code","_this","message","split","call","name","$fd652548d0f540d94aaff6aa830746d2$var$__extends","$2ce41f61858dd350a0b2670bdab4e597$export$b8795f4f643ce74f","assertion","errorCode","$fd652548d0f540d94aaff6aa830746d2$exports","default","$af95442a94d1862a138c401177ef0c4b$var$transformStringDiv","$af95442a94d1862a138c401177ef0c4b$var$tmp_","$af95442a94d1862a138c401177ef0c4b$export$6cfa4eec14fd8155","transform","$af95442a94d1862a138c401177ef0c4b$export$77f8d2fc923b14e3","$af95442a94d1862a138c401177ef0c4b$export$4739cf887d3ac19b","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","f","$af95442a94d1862a138c401177ef0c4b$export$6af9bbf310c9e4bf","coordinate","x","y","$af95442a94d1862a138c401177ef0c4b$export$452ae967caf14641","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$af95442a94d1862a138c401177ef0c4b$export$6e6aac0f60e83c70","source","mat","det","$af95442a94d1862a138c401177ef0c4b$export$47bee913e0e80eb4","transformString","join","node","document","createElement","style","$8913dbc1b585601bf0ecb482246c0b4c$export$9099ad97b570f7c","$8ebfb36ef5532881c5652b708da2c120$export$14e1765886db335a","extent","value","opt_extent","$8ebfb36ef5532881c5652b708da2c120$export$d6a0542127b96c83","slice","$8ebfb36ef5532881c5652b708da2c120$export$c7d6a927f416dd39","dx","dy","$8ebfb36ef5532881c5652b708da2c120$export$c422a9fcb5f1ee5c","$8ebfb36ef5532881c5652b708da2c120$export$cc70e7e516e4370f","$8ebfb36ef5532881c5652b708da2c120$export$4f55e2d709659e7b","extent1","extent2","$8ebfb36ef5532881c5652b708da2c120$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","$8ebfb36ef5532881c5652b708da2c120$export$ea8082d0226d35a5","$8ebfb36ef5532881c5652b708da2c120$export$80741250c74fd4fa","Infinity","$8ebfb36ef5532881c5652b708da2c120$export$b6ab620e694fb080","$8ebfb36ef5532881c5652b708da2c120$export$355d8dd7ec88232f","flatCoordinates","offset","stride","$8ebfb36ef5532881c5652b708da2c120$export$4b116deb3079b147","$8ebfb36ef5532881c5652b708da2c120$export$bcc761834e33d339","$8ebfb36ef5532881c5652b708da2c120$export$2852acc8f8b94686","$8ebfb36ef5532881c5652b708da2c120$export$bfc2e43ae5c3c00c","coordinates","ii","$8ebfb36ef5532881c5652b708da2c120$export$8696fee511ea7c7a","min","max","$8ebfb36ef5532881c5652b708da2c120$export$3932426cd8118930","$8ebfb36ef5532881c5652b708da2c120$export$4e2fc25ce97f3583","$8ebfb36ef5532881c5652b708da2c120$export$339e303bf205caae","$8ebfb36ef5532881c5652b708da2c120$export$3212225221d5bc14","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$8ebfb36ef5532881c5652b708da2c120$export$e178c8044d3d0a05","$8ebfb36ef5532881c5652b708da2c120$export$c491031eb9adcc3a","intersection","$8ebfb36ef5532881c5652b708da2c120$export$c3bd2c3b798b0350","$8ebfb36ef5532881c5652b708da2c120$export$5100f0815ea32995","$8ebfb36ef5532881c5652b708da2c120$export$35aedeaeee8be6cd","$8ebfb36ef5532881c5652b708da2c120$export$3dc3550566517965","$8ebfb36ef5532881c5652b708da2c120$export$988399e568471db1","$8ebfb36ef5532881c5652b708da2c120$export$76e02248c0889c3e","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$8ebfb36ef5532881c5652b708da2c120$var$_boundingExtentXYs","$916dab65013919ad0345478f9a9f4e0f$export$4b8705656de00c72","$916dab65013919ad0345478f9a9f4e0f$export$4a376e0f60d976ee","cosh","exp","log2","$916dab65013919ad0345478f9a9f4e0f$export$fd0b1e5ac4df516c","t","$916dab65013919ad0345478f9a9f4e0f$export$8b6706701cd75ea9","$916dab65013919ad0345478f9a9f4e0f$export$11468133b1231643","angleInRadians","PI","$916dab65013919ad0345478f9a9f4e0f$export$4fc80c88d72f096","angleInDegrees","$916dab65013919ad0345478f9a9f4e0f$export$3334706ffb3dccb1","r","$916dab65013919ad0345478f9a9f4e0f$export$45ca8e7f50ccf2e0","$ddc7f5de3664aab559d1c545c366e59d$var$HEX_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$var$NAMED_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$export$9fe004474d6f7f65","color","$ddc7f5de3664aab559d1c545c366e59d$export$47bee913e0e80eb4","$ddc7f5de3664aab559d1c545c366e59d$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$ddc7f5de3664aab559d1c545c366e59d$export$21528ce64591bf2","s","hasOwnProperty","key","g","exec","hasAlpha","parseInt","substr","$ddc7f5de3664aab559d1c545c366e59d$export$2e33abec8aecd572","map","Number","$ddc7f5de3664aab559d1c545c366e59d$var$fromStringInternal_","$ddc7f5de3664aab559d1c545c366e59d$export$7266a24c0caa2a8","undefined","$80553d92e1fbcb82d752b6de833f9cf3$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","hasListener","src","crossOrigin","$80553d92e1fbcb82d752b6de833f9cf3$var$getKey","set","setSize","maxCacheSize","$80553d92e1fbcb82d752b6de833f9cf3$export$601b9e2be44c7cb2","$003acff01e79c0a73122c747343d2e59$export$9099ad97b570f7c","BaseEvent","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","$bfcfd5d9960b75cc9cb78b58301ad8a4$export$9099ad97b570f7c","$e1ac967f910869e98e549bfd20a1853c$export$f3c88f5a058bec38","assign","var_sources","TypeError","output","arguments","$e1ac967f910869e98e549bfd20a1853c$export$97fff7491bd246bd","object","property","$e1ac967f910869e98e549bfd20a1853c$export$207c30846165e93a","values","$e1ac967f910869e98e549bfd20a1853c$export$988399e568471db1","$99fe3f3343ef18166bd431edc467d890$export$9099ad97b570f7c","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$99fe3f3343ef18166bd431edc467d890$var$__extends","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","getListeners","opt_type","index","splice","$c81aa09fb137106970dbc142b1e89ec3$export$9099ad97b570f7c","$7961378a294a4943979a10a4df4a3fcf$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","eventsKey","$7961378a294a4943979a10a4df4a3fcf$export$d2df825b2d8bc2ba","$7961378a294a4943979a10a4df4a3fcf$export$6dee5fd4fdf600ff","$02e80757fefec0a9636ae28d17c9fab2$export$21f63b82add5980c","$02e80757fefec0a9636ae28d17c9fab2$export$9099ad97b570f7c","Observable","revision_","$02e80757fefec0a9636ae28d17c9fab2$var$__extends","changed","getRevision","on","len","once","ol_key","un","$99fe3f3343ef18166bd431edc467d890$exports","$a41f90da440d5a4a421775ee47a2c536$export$b902cfd711fa7f06","ObjectEvent","oldValue","$a41f90da440d5a4a421775ee47a2c536$var$__extends","$a41f90da440d5a4a421775ee47a2c536$var$BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","$a41f90da440d5a4a421775ee47a2c536$export$b958104f5d8e9527","opt_silent","applyProperties","unset","$02e80757fefec0a9636ae28d17c9fab2$exports","$a41f90da440d5a4a421775ee47a2c536$var$changeEventTypeCache","$a41f90da440d5a4a421775ee47a2c536$export$9099ad97b570f7c","$6e657bb9f80dab756c945a825e2a2cee$export$9099ad97b570f7c","$3a8294651627eb74246351f5b596cf68$export$9099ad97b570f7c","BaseLayer","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$3a8294651627eb74246351f5b596cf68$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$a41f90da440d5a4a421775ee47a2c536$exports","$939d3f0e5ddda81ef3d6b6e4c37a0795$export$9099ad97b570f7c","$88faaf1879d30d470a1b447dd4b5a77a$export$9099ad97b570f7c","$1935b85c22cfc539ea58e141ab0b37d6$export$16970faadcd3f29b","layerState","viewState","zoom","$1935b85c22cfc539ea58e141ab0b37d6$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","getChangeEventType","handleSourcePropertyChange_","setSource","$1935b85c22cfc539ea58e141ab0b37d6$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$3a8294651627eb74246351f5b596cf68$exports","$29884e9b826cd25109649ab0c360e769$export$bcc761834e33d339","coordinate1","coordinate2","equals","$29884e9b826cd25109649ab0c360e769$export$d40e2456b1281660","cosAngle","sinAngle","$29884e9b826cd25109649ab0c360e769$export$5a0d9577a24f3c5b","projection","canWrapX","worldWidth","worldsAway","$29884e9b826cd25109649ab0c360e769$export$c8ebaff90a21375a","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$52488a0195cf0e38344877f5a3896831$var$expireIconCache","$52488a0195cf0e38344877f5a3896831$export$9099ad97b570f7c","MapRenderer","map_","$52488a0195cf0e38344877f5a3896831$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","j","$1935b85c22cfc539ea58e141ab0b37d6$exports","inView","getWrapX","callback_1","order","forEach","m","i1","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$1a95b8d63eeb9d5cd5e2742791ea7ab2$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$1a95b8d63eeb9d5cd5e2742791ea7ab2$var$__extends","$7ef0aa4943b3f1208e19af1336a3f8f6$export$4b206f1dd0085e9f","$7ef0aa4943b3f1208e19af1336a3f8f6$export$6cfb92f3ca39d412","$7ef0aa4943b3f1208e19af1336a3f8f6$export$a6463a3b3793c500","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegEx","RegExp","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegExMatchIndex","$7ef0aa4943b3f1208e19af1336a3f8f6$export$b705256ab57c20ca","fontSpec","match","lineHeight","weight","variant","families","family","$8b566ca8fd3b2d9c184057ba73cbf345$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","getContext","$8b566ca8fd3b2d9c184057ba73cbf345$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$47503d53c08beb29","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$18c07a12203603b5","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$55c06ab37ead2f5d","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$ffc0c15ee0fd31b3","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6ad0413f8fea3c71","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$4f3c27e569bdb39e","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$b679e5c5d4b15cf5","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$d721e051424a5865","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6f57224ec3df03c9","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$70c5a077e5d6beb9","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$907cf5cff4a8acb1","console","warn","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureFont","measureElement","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureContext","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$384c0f09c94ed6cc","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6491effd8671e9f6","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","setInterval","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$a2bf16790cd8f004","metrics","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","offsetHeight","measureText","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$4b2ca35321179b27","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$c02f953f8e44cc0a","offsetX","offsetY","translate","rotate","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$3004e0c7927eb2d1","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","label","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$executeLabelInstructions","drawImage","restore","$2ae21f590be041e7827bf48426c0766a$export$9099ad97b570f7c","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$7ef0aa4943b3f1208e19af1336a3f8f6$export$2fbf9d496fb0d5a8","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$2ae21f590be041e7827bf48426c0766a$var$__extends","event_1","$1a95b8d63eeb9d5cd5e2742791ea7ab2$exports","declutterLayers","previousElement","layerIndex","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$439ebc2b0f0ec9f4","getDataAtPixel","$52488a0195cf0e38344877f5a3896831$exports","$994e322493abe750f187f7e3835dca5c$export$9099ad97b570f7c","$e6a59fbd122f687b33c2f382a3c7634b$var$Property","$e6a59fbd122f687b33c2f382a3c7634b$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$e6a59fbd122f687b33c2f382a3c7634b$var$__extends","$e6a59fbd122f687b33c2f382a3c7634b$export$9099ad97b570f7c","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$d66bdf9af75d90254b022f9a4b768a43$var$Property","$d66bdf9af75d90254b022f9a4b768a43$export$9099ad97b570f7c","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$e6a59fbd122f687b33c2f382a3c7634b$exports","setLayers","$d66bdf9af75d90254b022f9a4b768a43$var$__extends","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","$f8e1a00fe597e09d283a3697649a8ad5$export$9099ad97b570f7c","MapEvent","$f8e1a00fe597e09d283a3697649a8ad5$var$__extends","$5185059e8a82c1ae03c4e1ba7159b318$export$9099ad97b570f7c","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$5185059e8a82c1ae03c4e1ba7159b318$var$__extends","getEventPixel","getCoordinateFromPixel","$f8e1a00fe597e09d283a3697649a8ad5$exports","$7aa259efacd921e7e7d327d1aea40a76$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$abba75ad998e5558d931e97019b1ab4c$export$9099ad97b570f7c","$75ed2fc91ec6cb8478583ef358a9dd4d$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$75ed2fc91ec6cb8478583ef358a9dd4d$var$__extends","emulateClick_","pointerEvent","newEvent","$5185059e8a82c1ae03c4e1ba7159b318$exports","clearTimeout","setTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","$841b38a534c9217d8aceb4320d3d91b5$export$9099ad97b570f7c","$71b981cc74aab5981a718ea8e06b800b$export$9099ad97b570f7c","$eeb9190850355aed8fc5d92349a26bc6$export$55b8074a560bbdf4","$eeb9190850355aed8fc5d92349a26bc6$export$9099ad97b570f7c","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$070765ef09fbcd82a0016eb3aec41934$export$9099ad97b570f7c","$6bfe069e85349c527971d875462feeac$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$6bfe069e85349c527971d875462feeac$var$__extends","added","getTilesLoading","tile","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$6bfe069e85349c527971d875462feeac$export$f7de9366327711a7","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","log","sqrt","$29d4509fdec4b1b2fe8c71c42629ef39$export$9099ad97b570f7c","$df0b68b08946bf3d8de6eeca4fba3a5f$var$Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$df0b68b08946bf3d8de6eeca4fba3a5f$export$af68584dedf5e52c","$df0b68b08946bf3d8de6eeca4fba3a5f$export$9099ad97b570f7c","$69bda6b48e87f8072533951cf5cd4b41$export$9099ad97b570f7c","$6fef8cd20559fa789cc7c5f681ed5561$export$9099ad97b570f7c","$1514cc7c23ad291d61b727f0ef5e4246$export$9099ad97b570f7c","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$7d5079714e2786ec6bee07910f0d8a86$export$8c5f77743cd0e8b7","$7d5079714e2786ec6bee07910f0d8a86$export$bb1f4f75177e5528","$7d5079714e2786ec6bee07910f0d8a86$export$6fd015d56b8406c9","$7d5079714e2786ec6bee07910f0d8a86$export$64afaa717a0c4932","$7d5079714e2786ec6bee07910f0d8a86$export$2126dea64bc40b7b","tan","$7d5079714e2786ec6bee07910f0d8a86$var$EPSG3857Projection","EPSG3857Projection","point","$7d5079714e2786ec6bee07910f0d8a86$var$__extends","$7d5079714e2786ec6bee07910f0d8a86$export$850c9b527a5298aa","$7d5079714e2786ec6bee07910f0d8a86$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","$7d5079714e2786ec6bee07910f0d8a86$export$f361696640082386","atan","$655738a66489cc3574c072262645bff6$export$6fd015d56b8406c9","$655738a66489cc3574c072262645bff6$export$af68584dedf5e52c","$655738a66489cc3574c072262645bff6$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$655738a66489cc3574c072262645bff6$var$__extends","$655738a66489cc3574c072262645bff6$export$850c9b527a5298aa","$0ba2913765cbb83278246e730dbcdcdf$var$cache","$6cb154572a1cc3d19ea74b1e9a3a7861$var$transforms","$6cb154572a1cc3d19ea74b1e9a3a7861$export$568ed88074851180","destination","sourceCode","destinationCode","$525020a649871896a05d6fe288616b91$export$761de677acb0d085","$525020a649871896a05d6fe288616b91$export$80a87d59b6e09730","distance","bearing","opt_radius","radius","lat1","lon1","dByR","lat","asin","atan2","$524e9c84a4c58bd58490804da4c772c6$export$3fbbaef54e2e9d28","$524e9c84a4c58bd58490804da4c772c6$export$678028d364072132","$524e9c84a4c58bd58490804da4c772c6$export$6308908a0016f099","$0ba2913765cbb83278246e730dbcdcdf$export$568ed88074851180","$524e9c84a4c58bd58490804da4c772c6$export$7eb84799c931fe91","projectionLike","replace","$524e9c84a4c58bd58490804da4c772c6$export$a42db349809b0c24","projections","$524e9c84a4c58bd58490804da4c772c6$export$fd4cd3535c7ea97f","$524e9c84a4c58bd58490804da4c772c6$export$f704437a72056fb8","defaultCode","$524e9c84a4c58bd58490804da4c772c6$export$c7a9310bdeddab53","projection1","projection2","equalUnits","$524e9c84a4c58bd58490804da4c772c6$export$747af4f49bde2f53","sourceProjection","destinationProjection","transformFunc","$6cb154572a1cc3d19ea74b1e9a3a7861$export$7eb84799c931fe91","$524e9c84a4c58bd58490804da4c772c6$export$9336879ef6599bf5","$524e9c84a4c58bd58490804da4c772c6$export$4b169b49e1a4823b","$524e9c84a4c58bd58490804da4c772c6$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$524e9c84a4c58bd58490804da4c772c6$var$userProjection","$524e9c84a4c58bd58490804da4c772c6$export$352fd07bdd93dc1e","$524e9c84a4c58bd58490804da4c772c6$export$4a182a4d53d7595c","$524e9c84a4c58bd58490804da4c772c6$export$b5d00774755783fc","destProjection","$524e9c84a4c58bd58490804da4c772c6$export$a7d473ff80a6a3b","$524e9c84a4c58bd58490804da4c772c6$export$f87215506b474b9e","$61ba71c2b15c8b7e6577526180db0da5$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$61ba71c2b15c8b7e6577526180db0da5$export$eaafe0fae18e32b1","$75cf935c4655e9fc21b1ade56ed27175$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$75cf935c4655e9fc21b1ade56ed27175$var$getSmoothClampedResolution","$75cf935c4655e9fc21b1ade56ed27175$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$4c6a822b604dbfa9a10722399f7335d0$export$e97ec87d2336bd4e","$4c6a822b604dbfa9a10722399f7335d0$export$eaafe0fae18e32b1","$8717569d70d85bd7f28c8c1b2c37daee$export$673b9849e2bc032c","pow","$8717569d70d85bd7f28c8c1b2c37daee$export$9fbc3b1d6b2da9ec","$8717569d70d85bd7f28c8c1b2c37daee$export$1b5c1277e30d397d","$8717569d70d85bd7f28c8c1b2c37daee$export$5523e35ab8ae283a","$7d5079714e2786ec6bee07910f0d8a86$exports","PROJECTIONS","$655738a66489cc3574c072262645bff6$exports","fromEPSG4326","toEPSG4326","$01b4ee2590431d23f431f1e9785f436f$export$9099ad97b570f7c","$3f4f29b0a4be88d8241f933ff6121a33$export$92106241c01aa541","opt_dest","dest","$3f4f29b0a4be88d8241f933ff6121a33$export$d40e2456b1281660","anchor","anchorX","anchorY","k","$a17c336463d573a615343832f6e09aa8$var$tmpTransform","$a17c336463d573a615343832f6e09aa8$export$9099ad97b570f7c","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$a17c336463d573a615343832f6e09aa8$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","$8ebfb36ef5532881c5652b708da2c120$export$d1e01ccfd06bf8ee","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$57ce72c0539154dec2abdc81ffcff6df$export$2a65008b73824080","layout","$57ce72c0539154dec2abdc81ffcff6df$export$36912b83e488cd77","simpleGeometry","getFlatCoordinates","getStride","$57ce72c0539154dec2abdc81ffcff6df$export$9099ad97b570f7c","SimpleGeometry","$57ce72c0539154dec2abdc81ffcff6df$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$57ce72c0539154dec2abdc81ffcff6df$var$getLayoutForStride","$3f4f29b0a4be88d8241f933ff6121a33$export$8f869025bba9609b","$3f4f29b0a4be88d8241f933ff6121a33$export$41b0d7466cde8385","$a17c336463d573a615343832f6e09aa8$exports","$020a0553c73896bfe8e0cfb3e7ff136b$var$assignClosest","offset1","offset2","$020a0553c73896bfe8e0cfb3e7ff136b$export$acf7548d1f0e8581","squaredDelta","$020a0553c73896bfe8e0cfb3e7ff136b$export$ba38095f6bb45df2","ends","$020a0553c73896bfe8e0cfb3e7ff136b$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$020a0553c73896bfe8e0cfb3e7ff136b$export$3dd3914e22f9012e","$e477329667689b6619ea04e4a51dbccc$export$e175f505890ac90f","$e477329667689b6619ea04e4a51dbccc$export$ab1a51db55485752","coordinatess","opt_ends","jj","$a357f0a07bdcadd773e93ca791a42f7b$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$a357f0a07bdcadd773e93ca791a42f7b$export$ade7859c9eb393ec","simplifiedEnds","$a357f0a07bdcadd773e93ca791a42f7b$export$383ea8a1f2974dfb","$a357f0a07bdcadd773e93ca791a42f7b$export$e29de4fdb2175738","$a357f0a07bdcadd773e93ca791a42f7b$export$1df19a1eb5514c2f","$c39683e7fcea5e9dae135d728d60cf52$export$92f32d891164b0ac","opt_coordinates","$c39683e7fcea5e9dae135d728d60cf52$export$d82a8a3167f968d","opt_coordinatess","$c39683e7fcea5e9dae135d728d60cf52$export$db289937da1f5213","endss","opt_coordinatesss","coordinatesss","$7641779008ab07f3e708dabdbbb046eb$export$9bf2059fd656d5e9","twiceArea","$7641779008ab07f3e708dabdbbb046eb$export$99cb92d00fd73c87","area","$cf0a72c7dbf1c3cfa9edf65c24bc230b$export$9099ad97b570f7c","LinearRing","maxDelta_","maxDeltaRevision_","$cf0a72c7dbf1c3cfa9edf65c24bc230b$var$__extends","getArea","$57ce72c0539154dec2abdc81ffcff6df$exports","$acd1b863667085614d305475fd6c1d27$export$9099ad97b570f7c","Point","$acd1b863667085614d305475fd6c1d27$var$__extends","$e477329667689b6619ea04e4a51dbccc$export$a53e62528b652807","$7311a6a51d57e65f0d3a69bd7a380356$export$f7b55b637f92fd7","val","$8ebfb36ef5532881c5652b708da2c120$export$c26f7b9c5adc34b4","$7311a6a51d57e65f0d3a69bd7a380356$export$e2ed757909b25f63","wn","$7311a6a51d57e65f0d3a69bd7a380356$export$51e46a3625992b91","$67787df47ebd352536b767ba5aa6ea83$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$67787df47ebd352536b767ba5aa6ea83$export$2bd6b2f516920f59","interiorPoints","$419a691625de72e89acadcc033e1165f$export$40f3d9558cf6e846","ret","point1","point2","$32ab876027ca0904f46063bee68b73aa$export$26f047a5bfac4b1a","coordinatesExtent","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$8ebfb36ef5532881c5652b708da2c120$export$525a75abb91115e3","$32ab876027ca0904f46063bee68b73aa$export$717c2c7c46a5bf3d","$32ab876027ca0904f46063bee68b73aa$export$f14bd9270666b480","$221ffa684d4ba252080508824e602b78$export$c77fe031a1447f2e","$52f5ef13e882c7db8132623a2b51ee49$export$add61ad31d0a68b4","edge","$52f5ef13e882c7db8132623a2b51ee49$export$586adaf930d9fdb6","opt_right","right","isClockwise","$52f5ef13e882c7db8132623a2b51ee49$export$325e57738fd8b321","$52f5ef13e882c7db8132623a2b51ee49$export$4efd43868de93336","$bffbcd35af658c4477627697774de1c2$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$bffbcd35af658c4477627697774de1c2$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$acd1b863667085614d305475fd6c1d27$exports","getLinearRingCount","getLinearRing","$cf0a72c7dbf1c3cfa9edf65c24bc230b$exports","getLinearRings","linearRings","$bffbcd35af658c4477627697774de1c2$export$9099ad97b570f7c","$bffbcd35af658c4477627697774de1c2$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$bffbcd35af658c4477627697774de1c2$export$b50d271c6e9656cd","$bffbcd35af658c4477627697774de1c2$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$bffbcd35af658c4477627697774de1c2$export$5d1798f0e1df079","getRadius","startAngle","$19fadbefe1b7e34cc76223b5c3e441cc$var$animationCallback","returnValue","$19fadbefe1b7e34cc76223b5c3e441cc$export$535fae5a159fbda4","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$19fadbefe1b7e34cc76223b5c3e441cc$export$8b6914b45b83f21f","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","resolutions","constrainResolution","capped","z","$75cf935c4655e9fc21b1ade56ed27175$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$75cf935c4655e9fc21b1ade56ed27175$export$7690ad4e930f454b","constraint","$19fadbefe1b7e34cc76223b5c3e441cc$export$9665b691bc2d5ca0","theta","opt_tolerance","enableRotation","constrainRotation","$19fadbefe1b7e34cc76223b5c3e441cc$export$5d87c27d7d9f380e","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$19fadbefe1b7e34cc76223b5c3e441cc$var$calculateCenterOn","rotX","rotY","$19fadbefe1b7e34cc76223b5c3e441cc$export$9099ad97b570f7c","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","$19fadbefe1b7e34cc76223b5c3e441cc$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nearest","baseLevel","fit","geometryOrExtent","$bffbcd35af658c4477627697774de1c2$exports","fromExtent","userProjection","fitInternal","coords","minRotX","minRotY","maxRotX","maxRotY","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","$8556eff40cf4f1624cd78ff7ea054c5b$export$c563c2b7121f8771","$8556eff40cf4f1624cd78ff7ea054c5b$export$48d31d2725e4d98b","$b198bbb8a7fca092de94dd3a772c1343$export$9099ad97b570f7c","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$d66bdf9af75d90254b022f9a4b768a43$exports","view","$19fadbefe1b7e34cc76223b5c3e441cc$exports","$b198bbb8a7fca092de94dd3a772c1343$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$6bfe069e85349c527971d875462feeac$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","getId","toString","$b198bbb8a7fca092de94dd3a772c1343$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$75ed2fc91ec6cb8478583ef358a9dd4d$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","setLayerGroup","setView","computedStyle","offsetWidth","parseFloat","$8316c877d328ebfc4f4b917229eec057$export$9099ad97b570f7c","Control","target_","listenerKeys","$8316c877d328ebfc4f4b917229eec057$var$__extends","mapEvent","$194d017bd833b991c2c712fa2ff5b0e5$export$9099ad97b570f7c","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$194d017bd833b991c2c712fa2ff5b0e5$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$f0994cfd84ab1152","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$8316c877d328ebfc4f4b917229eec057$exports","$aef56543978371a8090d728a4f107ac0$export$9099ad97b570f7c","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$aef56543978371a8090d728a4f107ac0$var$__extends","resetNorth_","$9812beea87bdcda9027d52b89085c87c$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$9812beea87bdcda9027d52b89085c87c$var$__extends","zoomByDelta_","currentZoom","newZoom","$c147d956996cb96e879ea56bdc9c5d5d$export$9099ad97b570f7c","$1ad0cf5090e3852174414bfc8cc27b9e$export$63568b31cb17dd4d","$1ad0cf5090e3852174414bfc8cc27b9e$export$d2c07614bfd6a817","$1ad0cf5090e3852174414bfc8cc27b9e$export$9099ad97b570f7c","Interaction","setActive","$1ad0cf5090e3852174414bfc8cc27b9e$var$__extends","active","$4eeedd039b7e6d5b8277b175715f9541$export$9099ad97b570f7c","DoubleClickZoom","delta_","$4eeedd039b7e6d5b8277b175715f9541$var$__extends","stopEvent","shiftKey","$1ad0cf5090e3852174414bfc8cc27b9e$exports","zoomByDelta","$0714aed143b912743afff175db44c1dc$export$e61edea4dfe4ed9b","$0714aed143b912743afff175db44c1dc$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$0714aed143b912743afff175db44c1dc$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$0714aed143b912743afff175db44c1dc$var$isPointerDraggingEvent","$054715504eaffdc825d0a6ada99ec596$export$8dbdea330bbd6b3c","conditions","pass","$054715504eaffdc825d0a6ada99ec596$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$054715504eaffdc825d0a6ada99ec596$export$584a07df7b145c47","hasAttribute","activeElement","$054715504eaffdc825d0a6ada99ec596$export$363947888fb85da6","$054715504eaffdc825d0a6ada99ec596$export$a8612972eacfc116","$054715504eaffdc825d0a6ada99ec596$export$9f5e19851eeaf2c1","$054715504eaffdc825d0a6ada99ec596$export$1734dfcac3c09b2f","$054715504eaffdc825d0a6ada99ec596$export$59c8376875f673f8","$054715504eaffdc825d0a6ada99ec596$export$5bbcce8021828272","tagName","$054715504eaffdc825d0a6ada99ec596$export$d31d3f3aa38542a8","pointerType","$054715504eaffdc825d0a6ada99ec596$export$45cd27c0322d6513","isPrimary","$959ec1b544453a9fa4f0e9221c3bb0b0$export$9099ad97b570f7c","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$959ec1b544453a9fa4f0e9221c3bb0b0$var$__extends","centroid","$0714aed143b912743afff175db44c1dc$exports","update","getDistance","getAngle","centerpx","$719e5208cd50905e41bacbcae2219883$export$9099ad97b570f7c","DragRotate","lastAngle_","$719e5208cd50905e41bacbcae2219883$var$__extends","$d0055a036577a61fd8306330947568c7$export$9099ad97b570f7c","RenderBox","geometry_","startPixel_","endPixel_","$d0055a036577a61fd8306330947568c7$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$275b26378704892d776581791f32dc0e$var$DragBoxEventType","$275b26378704892d776581791f32dc0e$export$4d9b552836937ca2","DragBoxEvent","$275b26378704892d776581791f32dc0e$var$__extends","$275b26378704892d776581791f32dc0e$export$9099ad97b570f7c","DragBox","box_","$d0055a036577a61fd8306330947568c7$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$b5cd6c68e27395a36aa4c8d3c5395250$export$9099ad97b570f7c","DragZoom","out_","out","$b5cd6c68e27395a36aa4c8d3c5395250$var$__extends","mapExtent","boxPixelExtent","$8ebfb36ef5532881c5652b708da2c120$export$9f54817615211741","$275b26378704892d776581791f32dc0e$exports","$8d5ac6bc9707ee873610cb367c0dab7f$export$9099ad97b570f7c","$bcd9d2d6fd38b8643ae7b7b6fd22a911$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$bcd9d2d6fd38b8643ae7b7b6fd22a911$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$55ea853e77e2fe25fa1a8793cb31a3bf$export$9099ad97b570f7c","KeyboardZoom","$55ea853e77e2fe25fa1a8793cb31a3bf$var$__extends","charCode","charCodeAt","$4f2c4d65e25c75c4fbc5129660f72747$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$f7a99b9e7b1a72242a3eb408b28d3563$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$f7a99b9e7b1a72242a3eb408b28d3563$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$f7a99b9e7b1a72242a3eb408b28d3563$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$74b3a0ab43d5d3c47ed1a15cedc99f6a$export$9099ad97b570f7c","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$74b3a0ab43d5d3c47ed1a15cedc99f6a$var$__extends","rotationDelta","touch0","touch1","$601b81cfcc535d77832cc96f04e942a1$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$601b81cfcc535d77832cc96f04e942a1$var$__extends","scaleDelta","$976448907138da16f7612e32ecc55ac7$export$9099ad97b570f7c","Map1","$9812beea87bdcda9027d52b89085c87c$exports","zoomOptions","$aef56543978371a8090d728a4f107ac0$exports","rotateOptions","attribution","$194d017bd833b991c2c712fa2ff5b0e5$exports","attributionOptions","$c10299a05f898a09c43f788b5b6dfdbd$export$b403fbac94228e09","altShiftDragRotate","$719e5208cd50905e41bacbcae2219883$exports","doubleClickZoom","$4eeedd039b7e6d5b8277b175715f9541$exports","zoomDelta","zoomDuration","dragPan","$959ec1b544453a9fa4f0e9221c3bb0b0$exports","pinchRotate","$74b3a0ab43d5d3c47ed1a15cedc99f6a$exports","pinchZoom","$601b81cfcc535d77832cc96f04e942a1$exports","keyboard","$bcd9d2d6fd38b8643ae7b7b6fd22a911$exports","$55ea853e77e2fe25fa1a8793cb31a3bf$exports","mouseWheelZoom","$f7a99b9e7b1a72242a3eb408b28d3563$exports","shiftDragZoom","$b5cd6c68e27395a36aa4c8d3c5395250$exports","$ad51cb5d42c2f2a2874b19907e742966$export$b403fbac94228e09","$976448907138da16f7612e32ecc55ac7$var$__extends","$2ae21f590be041e7827bf48426c0766a$exports","$b198bbb8a7fca092de94dd3a772c1343$exports","$a51010926fccd7fa7fa549e12811b655$exports","t1","t2","r1","h1","o","u","p","_maxEntries","_minEntries","n1","leaf","m2","h2","o1","all","_all","search","toBBox","o2","collides","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","s1","l1","_condense","compareMinX","compareMinY","toJSON","fromJSON","u1","m1","_chooseSubtree","u2","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","s2","l2","u3","p1","v","M","_allDistMargin","define","amd","RBush","$ddbf871807cbdb80f3672c8008047cee$export$9099ad97b570f7c","$96f7f946d494434256fc7391bfca3d81$export$9099ad97b570f7c","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getImage","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$7eb24b24c1bb92b5f48477cc7ed0ef45$export$55029509b82b2e2b","$9395bcf7fa5c622dff9d678b4abf4bba$export$9099ad97b570f7c","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","imageSize_","hitDetectionImageSize_","$9395bcf7fa5c622dff9d678b4abf4bba$var$__extends","getFill","getPoints","getRadius2","getStroke","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","imageSize","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","setLineDash","closePath","drawHitDetectionCanvas_","$19d3c8bef588e205c4ab8014047de833$export$9099ad97b570f7c","CircleStyle","$19d3c8bef588e205c4ab8014047de833$var$__extends","setRadius","$9395bcf7fa5c622dff9d678b4abf4bba$exports","$e1f9f7b0a69ff9a9f4c2bbbdfef410b1$export$9099ad97b570f7c","Fill","color_","setColor","$4c58aec149e538982cbf4e874e866484$export$9099ad97b570f7c","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$b550892c9c7d6707a4415bf7976deb12$var$Style","Style","geometryFunction_","$b550892c9c7d6707a4415bf7976deb12$var$defaultGeometryFunction","setGeometry","image_","image","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","$b550892c9c7d6707a4415bf7976deb12$var$defaultStyles","$b550892c9c7d6707a4415bf7976deb12$export$33d0043adf82cc14","$19d3c8bef588e205c4ab8014047de833$exports","$b550892c9c7d6707a4415bf7976deb12$export$9099ad97b570f7c","$ceed79ad4f0d8f0ebaf810c3cca30983$var$Property","$ceed79ad4f0d8f0ebaf810c3cca30983$export$9099ad97b570f7c","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","$ceed79ad4f0d8f0ebaf810c3cca30983$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","$parcel$interopDefault","setRenderOrder","renderOrder","opt_style","styleFunction","styles_1","$b550892c9c7d6707a4415bf7976deb12$export$4aaa4bacaec09e94","$75febe525c6e0d71892cea5e044a142c$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$75febe525c6e0d71892cea5e044a142c$export$c649c04369bd3370","$75febe525c6e0d71892cea5e044a142c$export$2513c58bc344fc5c","$75febe525c6e0d71892cea5e044a142c$export$84e3c67fd41b07f5","$75febe525c6e0d71892cea5e044a142c$export$6cd4b1e0c0e7240c","$75febe525c6e0d71892cea5e044a142c$export$9099ad97b570f7c","$98c4b84222a5e84ec508cd638c4e0b8c$export$9099ad97b570f7c","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$ca67e4c506ae561bc3174e981b55d257$export$9099ad97b570f7c","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$ca67e4c506ae561bc3174e981b55d257$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$072d5e6cee1f9ae87cd55eb588566cc6$export$9099ad97b570f7c","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$072d5e6cee1f9ae87cd55eb588566cc6$var$__extends","myBegin","opt_sharedData","hitDetectionImage","origin","$ca67e4c506ae561bc3174e981b55d257$exports","$28ceeb2640c662153e0cc1bb27e7eea9$export$9099ad97b570f7c","CanvasLineStringBuilder","$28ceeb2640c662153e0cc1bb27e7eea9$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$f5fec2e7653cdbd2c7958b8312f0d7d6$export$9099ad97b570f7c","CanvasPolygonBuilder","$f5fec2e7653cdbd2c7958b8312f0d7d6$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$efe444a788e44e26b0fd0d03352a7cb8$export$9099ad97b570f7c","$f19e98a3c9584b88eb9c26a752a19276$export$e8c34bbbade92a3a","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$7e7051822986fcb02ea0e43ac0707b32$export$3964e67694391753","$7e7051822986fcb02ea0e43ac0707b32$export$9099ad97b570f7c","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$7e7051822986fcb02ea0e43ac0707b32$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","getFlatMidpoint","getFlatMidpoints","getFlatInteriorPoints","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$4f54cdaa0352e7689a6e30aa9d8207ec$var$BATCH_CONSTRUCTORS","$f5fec2e7653cdbd2c7958b8312f0d7d6$exports","$072d5e6cee1f9ae87cd55eb588566cc6$exports","$28ceeb2640c662153e0cc1bb27e7eea9$exports","$7e7051822986fcb02ea0e43ac0707b32$exports","$4f54cdaa0352e7689a6e30aa9d8207ec$export$9099ad97b570f7c","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$ae15ed96a99c1303ea67938747c94fca$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$ae15ed96a99c1303ea67938747c94fca$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","imageState","$ac230d10056414a40eb774bd091234f1$export$9099ad97b570f7c","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$ac230d10056414a40eb774bd091234f1$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clip","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","moveTo","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","$ae15ed96a99c1303ea67938747c94fca$exports","$2a2c9e207ab3a32ae55e264c8b11e252$export$9099ad97b570f7c","$56c23dc34f9f14c7874ab5d8b63c5fb3$export$1829060502283fb8","startM","measureAndCacheTextWidth","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","iStart","charLength","chars","substring","$c028848ec55b72b61f5eaf0ec6396be2$export$7326ac1b36a49776","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$tmpExtent","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p1","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p2","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p3","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p4","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$rtlRegEx","fromCharCode","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$horizontalTextAlign","align","test","TEXT_ALIGN","$6cf1557e9efeeb4d32c6b7acaeb9c268$export$9099ad97b570f7c","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$ba197a5e917e3183","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","origin_1","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","i_1","ii_1","execute","executeHitDetection","$c6e46405591acfe99e5a94d22fbe8573$var$ORDER","$c6e46405591acfe99e5a94d22fbe8573$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$c6e46405591acfe99e5a94d22fbe8573$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$c6e46405591acfe99e5a94d22fbe8573$export$f610334c339a4991","featureCallback","imageData","idx","result_1","executor","zs","opt_builderTypes","builderTypes","$c6e46405591acfe99e5a94d22fbe8573$export$9099ad97b570f7c","$9f8df4495769241e9ec70201b90e0eaa$export$9099ad97b570f7c","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$9f8df4495769241e9ec70201b90e0eaa$var$__extends","drawImages_","localTransform","alpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$250247a34cdb6d9c26d2c6d3640e511f$export$9099ad97b570f7c","$c921d54e03c98d7c23acffcfb75264d3$export$9099ad97b570f7c","$e65a38a3837120ad833711b5930f5912$export$9099ad97b570f7c","ImageBase","$e65a38a3837120ad833711b5930f5912$var$__extends","$2fc4e1887f4ffa14e16ea647fd21482c$export$469eb8ba3f45955e","loadHandler","errorHandler","img","promise","listening_1","then","catch","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","$2fc4e1887f4ffa14e16ea647fd21482c$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","$e65a38a3837120ad833711b5930f5912$exports","$92a5ba3fab046f40ee35c464c4cf79b4$var$taintedTestContext","$92a5ba3fab046f40ee35c464c4cf79b4$var$IconImage","IconImage","imageState_","tainted_","$92a5ba3fab046f40ee35c464c4cf79b4$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","$2fc4e1887f4ffa14e16ea647fd21482c$exports","listenImage","ctx","globalCompositeOperation","imgData","putImageData","$92a5ba3fab046f40ee35c464c4cf79b4$export$7eb84799c931fe91","$4de6336f82b6fd9bc7cf688bb41b8b96$export$9099ad97b570f7c","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","$92a5ba3fab046f40ee35c464c4cf79b4$exports","offset_","offsetOrigin_","offsetOrigin","$4de6336f82b6fd9bc7cf688bb41b8b96$var$__extends","setAnchor","iconImageSize","$9f8fd0aab32ac5c353b56f527e1d00a9$export$5d244421488756f8","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$65a5cfeed6fd0c33","feature1","feature2","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$f0ea347488340e3d","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$522dfd100dd96ba1","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderGeometry","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderFeatureInternal","getGeometries","$c2243072b6513ba407326b2a30b1374a$export$9099ad97b570f7c","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$c2243072b6513ba407326b2a30b1374a$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$af95442a94d1862a138c401177ef0c4b$export$e7468c0ae08395df","clipped","transforms","imageSmoothingEnabled","$9f8df4495769241e9ec70201b90e0eaa$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","imgContext","$4de6336f82b6fd9bc7cf688bb41b8b96$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$9f8fd0aab32ac5c353b56f527e1d00a9$export$9fd146a6491490e3","resultFeatures","$9f8fd0aab32ac5c353b56f527e1d00a9$export$57fd269e987b81b8","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadExtents","gutter","loadExtent","$8ebfb36ef5532881c5652b708da2c120$export$5a0d9577a24f3c5b","declutterBuilderGroup","userTransform","loadFeatures","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$f3b3f9822f340683","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","$ac230d10056414a40eb774bd091234f1$exports","$2f5ed0ce65ecb2bfe439d05296b3d36a$export$9099ad97b570f7c","VectorLayer","$2f5ed0ce65ecb2bfe439d05296b3d36a$var$__extends","$c2243072b6513ba407326b2a30b1374a$exports","$ceed79ad4f0d8f0ebaf810c3cca30983$exports","$62b4010d0c10d05a6eb5fbcd9e877cb9$var$supportedExtensions","$4b7d9e079415657c49d05e16783d2ed4$export$9099ad97b570f7c","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$4fae3d8ec3d62e0a","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$1115845160c9bee9","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$909515d02f210383","$62b4010d0c10d05a6eb5fbcd9e877cb9$var$CONTEXT_IDS","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$1c9dfb92a34f1fcf","opt_attributes","$02cc97bf01bb3e29729e4a43136299b6$export$ad4b78097bf94d85","$02cc97bf01bb3e29729e4a43136299b6$export$2ced8f41c55fa306","Float32Array","Uint32Array","$02cc97bf01bb3e29729e4a43136299b6$export$9099ad97b570f7c","WebGLArrayBuffer","opt_usage","usage","ofSize","fromArray","from","fromArrayBuffer","buffer","getUsage","$501d706d50d79bf1747fa2e06c13b468$export$9099ad97b570f7c","$082906594eab2940979815ab9b245f21$export$9099ad97b570f7c","WebGLPostProcessingPass","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetTextureLocation_","uniforms_","uniforms","location","getGL","init","textureSize","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","viewport","internalFormat","RGBA","format","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","activeTexture","TEXTURE0","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","ImageData","texture","uniform3f","uniform4f","uniform1f","$b8f56a2658bfbbbe58c154ca943f14e7$export$e2085a48d9d846ba","mat4","$a213a3ce88096e82b8501ef33f381740$export$9fb8f3e6fc336132","$a213a3ce88096e82b8501ef33f381740$export$9aeec108beb7c801","PROJECTION_MATRIX","OFFSET_SCALE_MATRIX","OFFSET_ROTATION_MATRIX","TIME","ZOOM","RESOLUTION","$a213a3ce88096e82b8501ef33f381740$export$a267a1a615d1668f","UNSIGNED_SHORT","UNSIGNED_INT","$a213a3ce88096e82b8501ef33f381740$export$9f69b31ae6f7009b","attributes","attr","$a213a3ce88096e82b8501ef33f381740$var$getByteSizeFromType","BYTES_PER_ELEMENT","Uint16Array","$a213a3ce88096e82b8501ef33f381740$export$9099ad97b570f7c","WebGLHelper","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","bufferCache_","currentProgram_","getSupportedExtensions","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$8185dc2b04913cae","getExtension","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","name_1","postProcessPasses_","postProcesses","options1","shaderCompileErrors_","$a213a3ce88096e82b8501ef33f381740$var$__extends","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","buf","bufferCacheEntry","isContextLost","prepareDraw","getCanvas","applyFrameState","prepareDrawToRenderTarget","renderTarget","opt_disableAlphaBlend","getFramebuffer","getTexture","ZERO","drawElements","elementType","numItems","offsetInBytes","finalizeDraw","offsetScaleMatrix","offsetRotateMatrix","$af95442a94d1862a138c401177ef0c4b$export$d40e2456b1281660","setUniformMatrixValue","setUniformFloatValue","HTMLImageElement","prevValue","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","getProgramParameter","LINK_STATUS","getAttributeLocation","makeProjectionTransform","uniformMatrix4fv","enableAttributeArray_","attribName","enableAttributes","opt_data","opt_texture","$52492a5d5a5cf9f2155f89c2c989fa4d$export$f35e0f0520ed8c07","GENERATE_BUFFERS","$52492a5d5a5cf9f2155f89c2c989fa4d$var$WebGLLayerRenderer","WebGLLayerRenderer","helper","$a213a3ce88096e82b8501ef33f381740$exports","$52492a5d5a5cf9f2155f89c2c989fa4d$var$__extends","$52492a5d5a5cf9f2155f89c2c989fa4d$var$tmpArray_","$52492a5d5a5cf9f2155f89c2c989fa4d$var$bufferPositions_","vertexPosition","indexPosition","$52492a5d5a5cf9f2155f89c2c989fa4d$var$writePointVertex","$52492a5d5a5cf9f2155f89c2c989fa4d$export$402a9517d8d9fb90","elementIndex","vertexBuffer","indexBuffer","customAttributesCount","bufferPositions","customAttrs","vPos","iPos","baseIndex","$52492a5d5a5cf9f2155f89c2c989fa4d$export$d2530fde2918c51d","createImageData","$52492a5d5a5cf9f2155f89c2c989fa4d$export$89728eb3e9a820de","radix","divide","$52492a5d5a5cf9f2155f89c2c989fa4d$export$4a313f27a0e30974","mult","$52492a5d5a5cf9f2155f89c2c989fa4d$export$9099ad97b570f7c","$f64fa72ac4564efa0d58e5ad5fee1414$var$tmpArray4","$f64fa72ac4564efa0d58e5ad5fee1414$export$9099ad97b570f7c","WebGLRenderTarget","helper_","texture_","framebuffer_","data_","dataCacheDirty_","updateSize_","clearCachedData","readAll","readPixels","readPixel","$9d3e887f16ae055cd8da2de24c5566f6$var$blob","Blob","$9d3e887f16ae055cd8da2de24c5566f6$var$url","URL","createObjectURL","$971f56de0b1cde93924292a879dc7bb9$export$9099ad97b570f7c","WebGLPointsLayerRenderer","projectionMatrixTransform","DefaultUniform","sourceRevision_","verticesBuffer_","hitVerticesBuffer_","indicesBuffer_","program_","hitDetectionEnabled_","hitFragmentShader","hitVertexShader","hitProgram_","customAttributes","attribute","AttributeType","concat","hitDetectionAttributes","currentTransform_","renderTransform_","invertRenderTransform_","renderInstructions_","hitRenderInstructions_","hitRenderTarget_","worker_","Worker","received","$52492a5d5a5cf9f2155f89c2c989fa4d$exports","WebGLWorkerMessageType","projectionTransform","hitDetection","renderInstructions","featureCache_","featureCount_","sourceListenKeys_","handleSourceFeatureAdded_","handleSourceFeatureChanged_","handleSourceFeatureDelete_","handleSourceFeatureClear_","forEachFeature","$971f56de0b1cde93924292a879dc7bb9$var$__extends","renderCount","renderHitDetection","viewNotMoving","extentChanged","sourceChanged","rebuildBuffers_","featureCache","totalInstructionsCount","totalHitInstructionsCount","hitColor","tmpCoords","tmpColor","renderIndex","hitIndex","featureUid","colorEncodeId","postMessage","hitMessage","colorDecodeId","uid","getFeatureByUid","terminate","$4e846b5067287bfa27b20cce73a80019$var$Property","$4e846b5067287bfa27b20cce73a80019$var$DEFAULT_GRADIENT","$4e846b5067287bfa27b20cce73a80019$export$9099ad97b570f7c","Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","$4e846b5067287bfa27b20cce73a80019$var$__extends","getBlur","getGradient","colors","createLinearGradient","step","addColorStop","$4e846b5067287bfa27b20cce73a80019$var$createGradient","$971f56de0b1cde93924292a879dc7bb9$exports","u_size","u_blurSlope","u_gradientTexture","$2f5ed0ce65ecb2bfe439d05296b3d36a$exports","$013ee184ddda363412ada1e10e95871e$export$9099ad97b570f7c","$ab70eb0a0a56b112261264db1ea7acab$export$9099ad97b570f7c","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$ab70eb0a0a56b112261264db1ea7acab$var$__extends","getPreload","getUseInterimTilesOnError","$6a958d3d10a45fbc13d601def6cb4731$var$TileRange","TileRange","containsTileRange","getHeight","$6a958d3d10a45fbc13d601def6cb4731$export$9099ad97b570f7c","$21101e8f6691f861098a74ca233ba3e1$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$21101e8f6691f861098a74ca233ba3e1$var$__extends","isDrawableTile","tileState","getTile","setState","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","getContextOptions","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","transition","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alphaChanged","endTransition","postRenderFunction","tileSource1","frameState1","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$21101e8f6691f861098a74ca233ba3e1$export$9099ad97b570f7c","$7f639b92eb9591e7aded56644548f656$export$9099ad97b570f7c","TileLayer","$7f639b92eb9591e7aded56644548f656$var$__extends","$21101e8f6691f861098a74ca233ba3e1$exports","$ab70eb0a0a56b112261264db1ea7acab$exports","$e311f93de68f58225dfc37d89d1dcffc$export$9099ad97b570f7c","opt_maxEntries","rbush_","items_","extents","items","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","$6a9611a0560ac769e67fadc6cfef9a2c$var$adaptAttributions","attributionLike","$6a9611a0560ac769e67fadc6cfef9a2c$export$9099ad97b570f7c","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","$6a9611a0560ac769e67fadc6cfef9a2c$var$__extends","refresh","setAttributions","$26b846260444bc742bddf88d96721338$export$8dbdea330bbd6b3c","$e1f6506982452a68a8aaa230bb78068a$export$9099ad97b570f7c","$2ef5772bb5b0926a9ba82fc2a88f3163$var$withCredentials","$2ef5772bb5b0926a9ba82fc2a88f3163$export$52988233cf090939","url","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","$2ef5772bb5b0926a9ba82fc2a88f3163$export$4355fa6d12274ca5","dataProjection","addFeatures","$76e99b295c09c7c5e340e251e89879b1$export$e3e368afaf9a4fc7","VectorSourceEvent","opt_feature","opt_features","$76e99b295c09c7c5e340e251e89879b1$var$__extends","$76e99b295c09c7c5e340e251e89879b1$export$9099ad97b570f7c","VectorSource","loader_","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","$6a9611a0560ac769e67fadc6cfef9a2c$exports","$fe05caf5f991aea82bd67c9bebabc467$export$7cf753b6a6534915","$fe05caf5f991aea82bd67c9bebabc467$export$9099ad97b570f7c","Feature","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","$fe05caf5f991aea82bd67c9bebabc467$var$__extends","setGeometryName","getGeometryName","handleGeometryChange_","setId","$8af1af76f23419d9d724a1b0182ffb00$var$cloneGeometries","clonedGeometries","$8af1af76f23419d9d724a1b0182ffb00$export$9099ad97b570f7c","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","$8af1af76f23419d9d724a1b0182ffb00$var$__extends","unlistenGeometriesChange_","geometryCollection","setGeometries","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","$168654b72fccbd53f77518b62ff915e1$export$55be7a9e3fef4787","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$7c21d7646a0313abf7b847efa68bfceb$export$26b1c556c0e0f127","$168654b72fccbd53f77518b62ff915e1$export$1a804b04fa5a0253","extrapolate","lo","hi","m0","$f3208b74dbadea817236410092d4ed69$export$9099ad97b570f7c","LineString","flatMidpoint_","flatMidpointRevision_","$f3208b74dbadea817236410092d4ed69$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","$9cc45ed4bf6c6f99d7b74c7015645e2b$export$9099ad97b570f7c","MultiLineString","lineStrings","$9cc45ed4bf6c6f99d7b74c7015645e2b$var$__extends","appendLineString","multiLineString","opt_interpolate","$168654b72fccbd53f77518b62ff915e1$export$8958f67b085a89b1","getLineString","$f3208b74dbadea817236410092d4ed69$exports","getLineStrings","midpoints","$32ab876027ca0904f46063bee68b73aa$export$414b603e1c51ecd4","$0c87ec0f12a2b62262bf5859757b8a2b$export$9099ad97b570f7c","MultiPoint","$0c87ec0f12a2b62262bf5859757b8a2b$var$__extends","appendPoint","multiPoint","getPoint","$8080d3a1460a7f67662c4a8e92d86a37$export$3ed76a8ff8a671c","$3f89ce735a32ce0bc16220a89ae67b2f$export$9099ad97b570f7c","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","$3f89ce735a32ce0bc16220a89ae67b2f$var$__extends","appendPolygon","newEndss","multiPolygon","$020a0553c73896bfe8e0cfb3e7ff136b$export$7bbfd5f5d0d7544b","$020a0553c73896bfe8e0cfb3e7ff136b$export$6564f135364e210c","$7311a6a51d57e65f0d3a69bd7a380356$export$664b9cb38de51b70","$7641779008ab07f3e708dabdbbb046eb$export$3ed76a8ff8a671c","getInteriorPoints","$0c87ec0f12a2b62262bf5859757b8a2b$exports","$52f5ef13e882c7db8132623a2b51ee49$export$9ae9bd8fe57776c1","simplifiedEndss","$a357f0a07bdcadd773e93ca791a42f7b$export$503109e33f5b8344","getPolygon","prevEnds","getPolygons","$32ab876027ca0904f46063bee68b73aa$export$eae4874c99627698","$e477329667689b6619ea04e4a51dbccc$export$abe2fb3e7ce9556","lastEnds","$a62309e79bc84bd3b6b5fbbfdb8ce983$export$9099ad97b570f7c","Text1","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$508255911b6472d9d16e9a97599ab01e$export$9099ad97b570f7c","FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","$508255911b6472d9d16e9a97599ab01e$export$534b7b915a5ec453","write","transformed","decimals","power_1","$d51a9db7ffbc5351b0298bfe2864dc58$export$f6c9fc7378d5d6a6","$d51a9db7ffbc5351b0298bfe2864dc58$export$a5039740b67a9c","namespaceURI","qualifiedName","$d51a9db7ffbc5351b0298bfe2864dc58$export$46d2d1e7bcdd99a3","createElementNS","$d51a9db7ffbc5351b0298bfe2864dc58$export$4131dc4da57aa0c8","normalizeWhitespace","$d51a9db7ffbc5351b0298bfe2864dc58$export$970c25ea2962a3d2","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","$d51a9db7ffbc5351b0298bfe2864dc58$export$77e37c6e8311f1ce","$d51a9db7ffbc5351b0298bfe2864dc58$export$a43e9d683f52ab7c","xml","$d51a9db7ffbc5351b0298bfe2864dc58$export$c9b84e3d2c8a2745","valueReader","objectStack","$d51a9db7ffbc5351b0298bfe2864dc58$export$5a6c4415b7f496d8","$d51a9db7ffbc5351b0298bfe2864dc58$export$a228533eec35683a","$d51a9db7ffbc5351b0298bfe2864dc58$export$73d853215f0c71e8","opt_property","localName","$d51a9db7ffbc5351b0298bfe2864dc58$export$2deb56b7ae029e3","nodeWriter","$d51a9db7ffbc5351b0298bfe2864dc58$export$8ebe38e76aa85d36","opt_nodeName","opt_namespaceURI","fixedNodeName","opt_nodeName1","nodeName","$d51a9db7ffbc5351b0298bfe2864dc58$export$81a68ea3ed99d298","$d51a9db7ffbc5351b0298bfe2864dc58$export$56f187f00ba8a12b","orderedKeys","sequence","$d51a9db7ffbc5351b0298bfe2864dc58$export$7567597de432f7e7","namespaceURIs","structure","opt_structureNS","structureNS","$d51a9db7ffbc5351b0298bfe2864dc58$export$d2d9da5f39026f12","parsersNS","nextElementSibling","parsers","parser","$d51a9db7ffbc5351b0298bfe2864dc58$export$606fcd4c4e16fe20","$d51a9db7ffbc5351b0298bfe2864dc58$export$2e67c97dae900dc9","serializersNS","nodeFactory","opt_keys","$d51a9db7ffbc5351b0298bfe2864dc58$export$cfa8ff2fe3336fdf","$d51a9db7ffbc5351b0298bfe2864dc58$var$xmlSerializer_","$d51a9db7ffbc5351b0298bfe2864dc58$var$document_","implementation","createDocument","$dec84ce654dad439cc55f11914ce0714$export$9099ad97b570f7c","XMLFeature","xmlSerializer_","XMLSerializer","$dec84ce654dad439cc55f11914ce0714$var$__extends","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","$90d80a364a39de433c7f5cd490d4f896$export$2d9b5243090e006a","$90d80a364a39de433c7f5cd490d4f896$export$39fa0db44f151f9d","$90d80a364a39de433c7f5cd490d4f896$export$286b7b22a1a791c7","trim","$90d80a364a39de433c7f5cd490d4f896$export$bbbe78f39d89b09c","bool","$90d80a364a39de433c7f5cd490d4f896$export$8546427d900bb9d0","$90d80a364a39de433c7f5cd490d4f896$export$3ff1a647d173b6de","decimal","string","toPrecision","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_COLOR","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_ANCHOR","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_SIZE","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_SRC","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_SCALE_MULTIPLIER","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_NAMESPACE_URIS","$23a4f6aded846ad8aacbf1f3eca76e14$var$NAMESPACE_URIS","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_ANCHOR_UNITS_MAP","$23a4f6aded846ad8aacbf1f3eca76e14$var$PLACEMARK_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$extendedDataParser","$23a4f6aded846ad8aacbf1f3eca76e14$var$regionParser","$23a4f6aded846ad8aacbf1f3eca76e14$var$readMultiGeometry","$23a4f6aded846ad8aacbf1f3eca76e14$var$readLineString","$23a4f6aded846ad8aacbf1f3eca76e14$var$readLinearRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$readPoint","$23a4f6aded846ad8aacbf1f3eca76e14$var$readPolygon","$23a4f6aded846ad8aacbf1f3eca76e14$var$readStyle","styleMapValue","$23a4f6aded846ad8aacbf1f3eca76e14$var$readStyleMapValue","placemarkObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$readStyleURL","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_MULTITRACK_GEOMETRY_PARSERS","$9cc45ed4bf6c6f99d7b74c7015645e2b$exports","$23a4f6aded846ad8aacbf1f3eca76e14$var$readGxTrack","$23a4f6aded846ad8aacbf1f3eca76e14$var$NETWORK_LINK_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINK_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$readURI","$23a4f6aded846ad8aacbf1f3eca76e14$var$REGION_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$LAT_LON_ALT_BOX_PARSERS","regionObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$LOD_PARSERS","lodObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$KML_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$KML_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$DOCUMENT_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$DOCUMENT_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$writePlacemark","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_FILL_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$e46f11a75191a508","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_NO_IMAGE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$5e32ef4fe86c9590","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_TEXT_STROKE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_STROKE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$886aac8f642d518","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_TEXT_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$4f723e646af0caaf","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$2aa7b16944fbd366","$23a4f6aded846ad8aacbf1f3eca76e14$var$TEXTAREA","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_STYLE_ARRAY","$23a4f6aded846ad8aacbf1f3eca76e14$export$e0735583683f1e35","$23a4f6aded846ad8aacbf1f3eca76e14$var$defaultIconUrlFunction","href","$23a4f6aded846ad8aacbf1f3eca76e14$var$KML","KML","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","iconUrlFunction_","iconUrlFunction","$23a4f6aded846ad8aacbf1f3eca76e14$var$__extends","readDocumentOrFolder_","readPlacemark_","readSharedStyle_","readSharedStyleMap_","$fe05caf5f991aea82bd67c9bebabc467$exports","getAttribute","styleUrl","sharedStyles","drawName","multiGeometryPoints","geometry1","type1","featureStyle","$23a4f6aded846ad8aacbf1f3eca76e14$var$findStyle","nameStyle","foundStyle","textOffset","$23a4f6aded846ad8aacbf1f3eca76e14$var$createNameStyleFunction","$8af1af76f23419d9d724a1b0182ffb00$exports","$23a4f6aded846ad8aacbf1f3eca76e14$var$createFeatureStyleFunction","styleUri","baseURI","fs","readName","readNameFromDocument","readNameFromNode","name_2","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","setAttributeNS","$dec84ce654dad439cc55f11914ce0714$exports","styleValue","$23a4f6aded846ad8aacbf1f3eca76e14$var$readColor","hexColor","$23a4f6aded846ad8aacbf1f3eca76e14$export$1744e74078e3fa10","re","$23a4f6aded846ad8aacbf1f3eca76e14$var$readScale","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_MAP_PARSERS","pairObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$PAIR_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_STYLE_PARSERS","iconObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_PARSERS","xunits","yunits","$23a4f6aded846ad8aacbf1f3eca76e14$var$LABEL_STYLE_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STYLE_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLY_STYLE_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$FLAT_LINEAR_RING_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$readFlatLinearRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_TRACK_PARSERS","whens","when","gxTrackObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$GEOMETRY_FLAT_COORDINATES_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$readFlatCoordinatesFromNode","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTRUDE_AND_ALTITUDE_MODE_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","$23a4f6aded846ad8aacbf1f3eca76e14$var$setCommonGeometryProperties","$3f89ce735a32ce0bc16220a89ae67b2f$exports","$23a4f6aded846ad8aacbf1f3eca76e14$var$FLAT_LINEAR_RINGS_PARSERS","flatLinearRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$INNER_BOUNDARY_IS_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$OUTER_BOUNDARY_IS_PARSERS","flatLinearRings","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_PARSERS","styleObject","IconObject","drawIcon","hotSpot","heading","outline","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","$23a4f6aded846ad8aacbf1f3eca76e14$var$DATA_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTENDED_DATA_PARSERS","featureObject","displayName","$23a4f6aded846ad8aacbf1f3eca76e14$var$SCHEMA_DATA_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeColorTextNode","rgba","abgr","hex","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTENDEDDATA_NODE_SERIALIZERS","pair","createCDATASection","$90d80a364a39de433c7f5cd490d4f896$export$53afd9ae5847fbf6","$23a4f6aded846ad8aacbf1f3eca76e14$var$DATA_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_STYLE_SERIALIZERS","icon","vec2","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeScaleTextNode","$23a4f6aded846ad8aacbf1f3eca76e14$var$LABEL_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$LABEL_STYLE_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STYLE_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$GEOMETRY_TYPE_TO_NODENAME","$23a4f6aded846ad8aacbf1f3eca76e14$var$GEOMETRY_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$POINT_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STRING_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINEAR_RING_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLYGON_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$MULTI_GEOMETRY_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$writePrimitiveGeometry","$23a4f6aded846ad8aacbf1f3eca76e14$var$writePolygon","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeMultiGeometry","factory","$23a4f6aded846ad8aacbf1f3eca76e14$var$BOUNDARY_IS_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeBoundaryIs","$23a4f6aded846ad8aacbf1f3eca76e14$var$PLACEMARK_SERIALIZERS","namesAndValues","names","pointStyles","lineStyles","polyStyles","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$PLACEMARK_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTENDEDDATA_NODE_FACTORY","styleArray","$23a4f6aded846ad8aacbf1f3eca76e14$var$PRIMITIVE_GEOMETRY_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$PRIMITIVE_GEOMETRY_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLY_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLYGON_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$INNER_BOUNDARY_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$OUTER_BOUNDARY_NODE_FACTORY","outerRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLY_STYLE_SERIALIZERS","iconProperties","$23a4f6aded846ad8aacbf1f3eca76e14$export$9099ad97b570f7c","$f3825b37b83125ff3aea6866c52f7781$export$a9187e77005a4477","$c02a5810599d30b360c99085159aa8cd$var$Pbf","ArrayBuffer","isView","$c02a5810599d30b360c99085159aa8cd$exports","$f3825b37b83125ff3aea6866c52f7781$export$2c262a1484748b93","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","LN2","Varint","Fixed64","Bytes","Fixed32","$c02a5810599d30b360c99085159aa8cd$var$SHIFT_LEFT_32","$c02a5810599d30b360c99085159aa8cd$var$SHIFT_RIGHT_32","$c02a5810599d30b360c99085159aa8cd$var$utf8TextDecoder","TextDecoder","$c02a5810599d30b360c99085159aa8cd$var$readPackedEnd","pbf","readVarint","$c02a5810599d30b360c99085159aa8cd$var$toNum","isSigned","$c02a5810599d30b360c99085159aa8cd$var$makeRoomForExtraLength","startPos","extraLen","realloc","$c02a5810599d30b360c99085159aa8cd$var$writePackedVarint","writeVarint","$c02a5810599d30b360c99085159aa8cd$var$writePackedSVarint","writeSVarint","$c02a5810599d30b360c99085159aa8cd$var$writePackedFloat","writeFloat","$c02a5810599d30b360c99085159aa8cd$var$writePackedDouble","writeDouble","$c02a5810599d30b360c99085159aa8cd$var$writePackedBoolean","writeBoolean","$c02a5810599d30b360c99085159aa8cd$var$writePackedFixed32","writeFixed32","$c02a5810599d30b360c99085159aa8cd$var$writePackedSFixed32","writeSFixed32","$c02a5810599d30b360c99085159aa8cd$var$writePackedFixed64","writeFixed64","$c02a5810599d30b360c99085159aa8cd$var$writePackedSFixed64","writeSFixed64","$c02a5810599d30b360c99085159aa8cd$var$readUInt32","$c02a5810599d30b360c99085159aa8cd$var$writeInt32","$c02a5810599d30b360c99085159aa8cd$var$readInt32","destroy","readFields","readField","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","readDouble","$c02a5810599d30b360c99085159aa8cd$var$readVarintRemainder","readVarint64","readSVarint","num","readBoolean","readString","subarray","$c02a5810599d30b360c99085159aa8cd$var$readUtf8TextDecoder","str","b3","b0","bytesPerSequence","$c02a5810599d30b360c99085159aa8cd$var$readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","$c02a5810599d30b360c99085159aa8cd$var$writeBigVarintLow","lsb","$c02a5810599d30b360c99085159aa8cd$var$writeBigVarintHigh","$c02a5810599d30b360c99085159aa8cd$var$writeBigVarint","writeString","lead","$c02a5810599d30b360c99085159aa8cd$var$writeUtf8","writeBytes","writeRawMessage","writeMessage","writePackedVarint","writePackedSVarint","writePackedBoolean","writePackedFloat","writePackedDouble","writePackedFixed32","writePackedSFixed32","writePackedFixed64","writePackedSFixed64","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","$496051bde5982fa2f9a1c75244a8a448$var$tmpTransform","$496051bde5982fa2f9a1c75244a8a448$var$RenderFeature","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","midpoint","$496051bde5982fa2f9a1c75244a8a448$export$9099ad97b570f7c","$a84ad559375cad730a73fc06d65a36e1$var$layersPBFReader","$a84ad559375cad730a73fc06d65a36e1$var$layerPBFReader","version","$a84ad559375cad730a73fc06d65a36e1$var$featurePBFReader","$a84ad559375cad730a73fc06d65a36e1$var$readRawFeature","$a84ad559375cad730a73fc06d65a36e1$export$9099ad97b570f7c","MVT","featureClass_","featureClass","geometryName","layerName_","layerName","layers_","idProperty_","idProperty","$a84ad559375cad730a73fc06d65a36e1$var$__extends","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","$a84ad559375cad730a73fc06d65a36e1$var$getGeometryType","geom","prevEndIndex","ctor","pbfLayers","pbfLayer","$634f916bc30b7d6650877f3f4b6a8b3a$var$bundleURL","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBaseURL","$634f916bc30b7d6650877f3f4b6a8b3a$export$da289beea9c5b10d","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBundleURL","$824bc590bf0a3702ac7bd27152cb0639$var$dirname","_filePath","filePath","slashIndex","$824bc590bf0a3702ac7bd27152cb0639$var$relative","to","fromParts","divergeIndex","toParts","module","exports","fromId","toId","$824bc590bf0a3702ac7bd27152cb0639$require$resolve","_dirname","_relative","$a6fae0d1f95d1013d47a2666e4cc73f5$exports","getBundleURL","$8b0a2675c277baedbee1394c1e452c41$exports","$5e53b1d105b5ca139e315a45c8d64a63$var$map","$976448907138da16f7612e32ecc55ac7$exports","$5e53b1d105b5ca139e315a45c8d64a63$var$heatmapLayer","$4e846b5067287bfa27b20cce73a80019$exports","$76e99b295c09c7c5e340e251e89879b1$exports","$23a4f6aded846ad8aacbf1f3eca76e14$exports","$5e53b1d105b5ca139e315a45c8d64a63$var$svgContainer","$5e53b1d105b5ca139e315a45c8d64a63$var$xhr","svg","importNode","$5e53b1d105b5ca139e315a45c8d64a63$var$svgResolution","$5e53b1d105b5ca139e315a45c8d64a63$var$width","$5e53b1d105b5ca139e315a45c8d64a63$var$height","$5e53b1d105b5ca139e315a45c8d64a63$var$svgLayer","cssTransform"],"version":3,"file":"mixed-renderers.04944451.js.map"}