{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-1ad5fa845a57e43987071cdbb46babf8.js","node_modules/ol/src/webgl.js","node_modules/ol/src/webgl/Buffer.js","node_modules/ol/src/webgl/ContextEventType.js","node_modules/ol/src/webgl/PostProcessingPass.js","node_modules/ol/src/vec/mat4.js","node_modules/ol/src/webgl/Helper.js","node_modules/ol/src/renderer/webgl/Layer.js","node_modules/ol/src/webgl/RenderTarget.js","node_modules/ol/src/worker/webgl.js","node_modules/ol/src/renderer/webgl/PointsLayer.js","node_modules/ol/src/layer/Heatmap.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/format/KML.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/style/Text.js","node_modules/@parcel/runtime-js/lib/bundle-url.js","node_modules/@parcel/runtime-js/lib/relative-path.js","node_modules/@parcel/runtime-js/lib/runtime-ca6564fba06c1415ad08fd3e11f518ce.js","node_modules/@parcel/runtime-js/lib/runtime-57da72cb66bfba510e50504e4714a779.js","src/mixed-renderers.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./bundle-manifest').register(JSON.parse(\"{\\\"3Wo4N\\\":\\\"mixed-renderers.04944451.js\\\",\\\"oaxmK\\\":\\\"world.843a5534.svg\\\",\\\"6la4e\\\":\\\"2012_Earthquakes_Mag5.c58e23ec.kml\\\",\\\"0acRd\\\":\\\"mixed-renderers.7620afdc.css\\\",\\\"39l4W\\\":\\\"mixed-renderers.88cf3e0b.js\\\"}\"));","/**\n * @module ol/webgl\n */\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [opt_attributes] Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>}\n */\nlet supportedExtensions;\n\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/webgl/Buffer\n */\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER} from '../webgl.js';\nimport {DYNAMIC_DRAW, STATIC_DRAW, STREAM_DRAW} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n * @api\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [opt_usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, opt_usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array}\n     */\n    this.array = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type = type;\n\n    assert(type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER, 62);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   */\n  ofSize(size) {\n    this.array = new (getArrayClassForType(this.type))(size);\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {Array<number>} array Numerical array\n   */\n  fromArray(array) {\n    this.array = getArrayClassForType(this.type).from(array);\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   */\n  fromArrayBuffer(buffer) {\n    this.array = new (getArrayClassForType(this.type))(buffer);\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array} Array.\n   */\n  getArray() {\n    return this.array;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array ? this.array.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord);\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {number} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord);\n *   }\n *   ```\n *\n * @api\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position'\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize'\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image'\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach(\n        function (name) {\n          this.uniforms_.push({\n            value: options.uniforms[name],\n            location: gl.getUniformLocation(this.renderTargetProgram_, name),\n          });\n        }.bind(this)\n      );\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @api\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @api\n   */\n  apply(frameState, nextPass) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    // render the frame buffer to the canvas\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    this.applyUniforms(frameState);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   * @api\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data)\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n  getSupportedExtensions,\n} from '../webgl.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\nimport {includes} from '../array.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Uniform names used in the default shaders: `PROJECTION_MATRIX`, `OFFSET_SCALE_MATRIX`.\n * and `OFFSET_ROTATION_MATRIX`.\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n  OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Use {@link enableAttributeArray_} and either\n *   the default attribute names in {@link module:ol/webgl/Helper.DefaultAttrib} or custom ones.\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n *\n * @api\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n    const options = opt_options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ = this.handleWebGLContextRestored.bind(\n      this\n    );\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = document.createElement('canvas');\n    this.canvas_.style.position = 'absolute';\n    this.canvas_.style.left = '0';\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getContext(this.canvas_);\n    const gl = this.getGL();\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    assert(includes(getSupportedExtensions(), 'OES_element_index_uint'), 63);\n    gl.getExtension('OES_element_index_uint');\n\n    this.canvas_.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, WebGLUniformLocation>}\n     */\n    this.uniformLocations_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.attribLocations_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      for (const name in options.uniforms) {\n        this.uniforms_.push({\n          name: name,\n          value: options.uniforms[name],\n        });\n      }\n    }\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(function (options) {\n          return new WebGLPostProcessingPass({\n            webGlContext: gl,\n            scaleRatio: options.scaleRatio,\n            vertexShader: options.vertexShader,\n            fragmentShader: options.fragmentShader,\n            uniforms: options.uniforms,\n          });\n        })\n      : [new WebGLPostProcessingPass({webGlContext: gl})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   * @api\n   */\n  bindBuffer(buffer) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   * @api\n   */\n  flushBufferData(buffer) {\n    const gl = this.getGL();\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.canvas_.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @api\n   */\n  prepareDraw(frameState) {\n    const gl = this.getGL();\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n\n    gl.useProgram(this.currentProgram_);\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n    gl.useProgram(this.currentProgram_);\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [opt_disableAlphaBlend] If true, no alpha blending will happen.\n   */\n  prepareDrawToRenderTarget(frameState, renderTarget, opt_disableAlphaBlend) {\n    const gl = this.getGL();\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(\n      gl.ONE,\n      opt_disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA\n    );\n\n    gl.useProgram(this.currentProgram_);\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   * @api\n   */\n  drawElements(start, end) {\n    const gl = this.getGL();\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @api\n   */\n  finalizeDraw(frameState) {\n    // apply post processes using the next one as target\n    for (let i = 0; i < this.postProcessPasses_.length; i++) {\n      this.postProcessPasses_[i].apply(\n        frameState,\n        this.postProcessPasses_[i + 1] || null\n      );\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   * @api\n   */\n  getCanvas() {\n    return this.canvas_;\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n\n    const offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    const offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_SCALE_MATRIX,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix)\n    );\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_ROTATION_MATRIX,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix)\n    );\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution\n    );\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach(\n      function (uniform) {\n        value =\n          typeof uniform.value === 'function'\n            ? uniform.value(frameState)\n            : uniform.value;\n\n        // apply value based on type\n        if (\n          value instanceof HTMLCanvasElement ||\n          value instanceof HTMLImageElement ||\n          value instanceof ImageData\n        ) {\n          // create a texture & put data\n          if (!uniform.texture) {\n            uniform.prevValue = undefined;\n            uniform.texture = gl.createTexture();\n          }\n          gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n          gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n          const imageReady =\n            !(value instanceof HTMLImageElement) ||\n            /** @type {HTMLImageElement} */ (value).complete;\n          if (imageReady && uniform.prevValue !== value) {\n            uniform.prevValue = value;\n            gl.texImage2D(\n              gl.TEXTURE_2D,\n              0,\n              gl.RGBA,\n              gl.RGBA,\n              gl.UNSIGNED_BYTE,\n              value\n            );\n          }\n\n          // fill texture slots by increasing index\n          gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n        } else if (Array.isArray(value) && value.length === 6) {\n          this.setUniformMatrixValue(\n            uniform.name,\n            fromTransform(this.tmpMat4_, value)\n          );\n        } else if (Array.isArray(value) && value.length <= 4) {\n          switch (value.length) {\n            case 2:\n              gl.uniform2f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1]\n              );\n              return;\n            case 3:\n              gl.uniform3f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1],\n                value[2]\n              );\n              return;\n            case 4:\n              gl.uniform4f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1],\n                value[2],\n                value[3]\n              );\n              return;\n            default:\n              return;\n          }\n        } else if (typeof value === 'number') {\n          gl.uniform1f(this.getUniformLocation(uniform.name), value);\n        }\n      }.bind(this)\n    );\n  }\n\n  /**\n   * Use a program.  If the program is already in use, this will return `false`.\n   * @param {WebGLProgram} program Program.\n   * @return {boolean} Changed.\n   * @api\n   */\n  useProgram(program) {\n    if (program == this.currentProgram_) {\n      return false;\n    } else {\n      const gl = this.getGL();\n      gl.useProgram(program);\n      this.currentProgram_ = program;\n      this.uniformLocations_ = {};\n      this.attribLocations_ = {};\n      return true;\n    }\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.getGL();\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   * @api\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.getGL();\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compliation failed: ${gl.getShaderInfoLog(\n        fragmentShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   * @api\n   */\n  getUniformLocation(name) {\n    if (this.uniformLocations_[name] === undefined) {\n      this.uniformLocations_[name] = this.getGL().getUniformLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.uniformLocations_[name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   * @api\n   */\n  getAttributeLocation(name) {\n    if (this.attribLocations_[name] === undefined) {\n      this.attribLocations_[name] = this.getGL().getAttribLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.attribLocations_[name];\n  }\n\n  /**\n   * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   * @api\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n\n    resetTransform(transform);\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1]\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   * @api\n   */\n  setUniformFloatValue(uniform, value) {\n    this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   * @api\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.getGL().uniformMatrix4fv(\n      this.getUniformLocation(uniform),\n      false,\n      value\n    );\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.getGL().enableVertexAttribArray(location);\n    this.getGL().vertexAttribPointer(\n      location,\n      size,\n      type,\n      false,\n      stride,\n      offset\n    );\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   * @api\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @private\n   */\n  handleWebGLContextLost() {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {}\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [opt_data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [opt_texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   * @api\n   */\n  createTexture(size, opt_data, opt_texture) {\n    const gl = this.getGL();\n    const texture = opt_texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (opt_data) {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        format,\n        type,\n        opt_data\n      );\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n * @api\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_BUFFERS: 'GENERATE_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions Render instructions raw binary buffer.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {number} [customAttributesCount] Amount of custom attributes count in the render instructions.\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(layer, opt_options) {\n    super(layer);\n\n    const options = opt_options || {};\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper = new WebGLHelper({\n      postProcesses: options.postProcesses,\n      uniforms: options.uniforms,\n    });\n\n    if (options.className !== undefined) {\n      this.helper.getCanvas().className = options.className;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.helper.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      // RenderEvent does not get a context or an inversePixelTransform, because WebGL allows much less direct editing than Canvas2d does.\n      const event = new RenderEvent(type, null, frameState, null);\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, frameState);\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, frameState);\n  }\n}\n\nconst tmpArray_ = [];\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesCount Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesCount,\n  bufferPositions\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesCount;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesCount;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [opt_array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, opt_array) {\n  const array = opt_array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n * @api\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [opt_size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, opt_size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = opt_size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   * @api\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   * @api\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   * @api\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   * @api\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n","\n        const source = \"var e=\\\"function\\\"==typeof Object.assign?Object.assign:function(e,n){if(null==e)throw new TypeError(\\\"Cannot convert undefined or null to object\\\");for(var t=Object(e),r=1,o=arguments.length;r<o;++r){var i=arguments[r];if(null!=i)for(var f in i)i.hasOwnProperty(f)&&(t[f]=i[f])}return t},n=\\\"GENERATE_BUFFERS\\\",t=[],r={vertexPosition:0,indexPosition:0};function o(e,n,t,r,o){e[n+0]=t,e[n+1]=r,e[n+2]=o}function i(e,n,i,f,s,u){var a=3+s,l=e[n+0],v=e[n+1],c=t;c.length=s;for(var g=0;g<c.length;g++)c[g]=e[n+2+g];var b=u?u.vertexPosition:0,h=u?u.indexPosition:0,d=b/a;return o(i,b,l,v,0),c.length&&i.set(c,b+3),o(i,b+=a,l,v,1),c.length&&i.set(c,b+3),o(i,b+=a,l,v,2),c.length&&i.set(c,b+3),o(i,b+=a,l,v,3),c.length&&i.set(c,b+3),b+=a,f[h++]=d,f[h++]=d+1,f[h++]=d+3,f[h++]=d+1,f[h++]=d+2,f[h++]=d+3,r.vertexPosition=b,r.indexPosition=h,r}var f=self;f.onmessage=function(t){var r=t.data;if(r.type===n){for(var o=r.customAttributesCount,s=2+o,u=new Float32Array(r.renderInstructions),a=u.length/s,l=4*a*(o+3),v=new Uint32Array(6*a),c=new Float32Array(l),g=null,b=0;b<u.length;b+=s)g=i(u,b,c,v,o,g);var h=e({vertexBuffer:c.buffer,indexBuffer:v.buffer,renderInstructions:u.buffer},r);f.postMessage(h,[c.buffer,v.buffer,u.buffer])}};\";\n        const blob = new Blob([source], {type: 'application/javascript'});\n        const url = URL.createObjectURL(blob);\n        export function create() {\n          return new Worker(url);\n        }\n      \n","/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer, {\n  WebGLWorkerMessageType,\n  colorDecodeId,\n  colorEncodeId,\n} from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {AttributeType, DefaultUniform} from '../../webgl/Helper.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n} from '../../transform.js';\nimport {assert} from '../../asserts.js';\nimport {buffer, createEmpty, equals} from '../../extent.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {getUid} from '../../util.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {string} [hitVertexShader] Vertex shader source for hit detection rendering.\n * @property {string} [hitFragmentShader] Fragment shader source for hit detection rendering.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      className: options.className,\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.sourceRevision_ = -1;\n\n    this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.hitVerticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.indicesBuffer_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      DYNAMIC_DRAW\n    );\n\n    this.program_ = this.helper.getProgram(\n      options.fragmentShader,\n      options.vertexShader\n    );\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ =\n      options.hitFragmentShader && options.hitVertexShader ? true : false;\n\n    this.hitProgram_ =\n      this.hitDetectionEnabled_ &&\n      this.helper.getProgram(\n        options.hitFragmentShader,\n        options.hitVertexShader\n      );\n\n    const customAttributes = options.attributes\n      ? options.attributes.map(function (attribute) {\n          return {\n            name: 'a_' + attribute.name,\n            size: 1,\n            type: AttributeType.FLOAT,\n          };\n        })\n      : [];\n\n    /**\n     * A list of attributes used by the renderer. By default only the position and\n     * index of the vertex (0 to 3) are required.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.attributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    /**\n     * A list of attributes used for hit detection.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.hitDetectionAttributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_hitColor',\n        size: 4,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_featureUid',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    this.customAttributes = options.attributes ? options.attributes : [];\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    /**\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.renderTransform_ = createTransform();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.invertRenderTransform_ = createTransform();\n\n    /**\n     * @type {Float32Array}\n     * @private\n     */\n    this.renderInstructions_ = new Float32Array(0);\n\n    /**\n     * These instructions are used for hit detection\n     * @type {Float32Array}\n     * @private\n     */\n    this.hitRenderInstructions_ = new Float32Array(0);\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_ =\n      this.hitDetectionEnabled_ && new WebGLRenderTarget(this.helper);\n\n    this.worker_ = createWebGLWorker();\n    this.worker_.addEventListener(\n      'message',\n      /**\n       * @param {*} event Event.\n       * @this {WebGLPointsLayerRenderer}\n       */\n      function (event) {\n        const received = event.data;\n        if (received.type === WebGLWorkerMessageType.GENERATE_BUFFERS) {\n          const projectionTransform = received.projectionTransform;\n          if (received.hitDetection) {\n            this.hitVerticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.hitVerticesBuffer_);\n          } else {\n            this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.verticesBuffer_);\n          }\n          this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n          this.helper.flushBufferData(this.indicesBuffer_);\n\n          this.renderTransform_ = projectionTransform;\n          makeInverseTransform(\n            this.invertRenderTransform_,\n            this.renderTransform_\n          );\n          if (received.hitDetection) {\n            this.hitRenderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n          } else {\n            this.renderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n          }\n\n          this.getLayer().changed();\n        }\n      }.bind(this)\n    );\n\n    /**\n     * This object will be updated when the source changes. Key is uid.\n     * @type {Object<string, FeatureCacheItem>}\n     * @private\n     */\n    this.featureCache_ = {};\n\n    /**\n     * Amount of features in the cache.\n     * @type {number}\n     * @private\n     */\n    this.featureCount_ = 0;\n\n    const source = this.getLayer().getSource();\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this\n      ),\n    ];\n    source.forEachFeature(\n      function (feature) {\n        this.featureCache_[getUid(feature)] = {\n          feature: feature,\n          properties: feature.getProperties(),\n          geometry: feature.getGeometry(),\n        };\n        this.featureCount_++;\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n    this.featureCount_++;\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    delete this.featureCache_[getUid(feature)];\n    this.featureCount_--;\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.featureCache_ = {};\n    this.featureCount_ = 0;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    this.preRender(frameState);\n\n    const renderCount = this.indicesBuffer_.getSize();\n    this.helper.drawElements(0, renderCount);\n    this.helper.finalizeDraw(frameState);\n    const canvas = this.helper.getCanvas();\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const opacity = layerState.opacity;\n    if (opacity !== parseFloat(canvas.style.opacity)) {\n      canvas.style.opacity = String(opacity);\n    }\n\n    if (this.hitDetectionEnabled_) {\n      this.renderHitDetection(frameState);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(frameState);\n\n    return canvas;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.rebuildBuffers_(frameState);\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    // apply the current projection transform with the invert of the one used to fill buffers\n    this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n    multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n\n    this.helper.useProgram(this.program_);\n    this.helper.prepareDraw(frameState);\n\n    // write new data\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n\n    this.helper.enableAttributes(this.attributes);\n\n    return true;\n  }\n\n  /**\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n   * @param {import(\"../../PluggableMap\").FrameState} frameState Frame state.\n   * @private\n   */\n  rebuildBuffers_(frameState) {\n    // saves the projection transform for the current frame state\n    const projectionTransform = createTransform();\n    this.helper.makeProjectionTransform(frameState, projectionTransform);\n\n    // here we anticipate the amount of render instructions that we well generate\n    // this can be done since we know that for normal render we only have x, y as base instructions,\n    // and x, y, r, g, b, a and featureUid for hit render instructions\n    // and we also know the amount of custom attributes to append to these\n    const totalInstructionsCount =\n      (2 + this.customAttributes.length) * this.featureCount_;\n    if (\n      !this.renderInstructions_ ||\n      this.renderInstructions_.length !== totalInstructionsCount\n    ) {\n      this.renderInstructions_ = new Float32Array(totalInstructionsCount);\n    }\n    if (this.hitDetectionEnabled_) {\n      const totalHitInstructionsCount =\n        (7 + this.customAttributes.length) * this.featureCount_;\n      if (\n        !this.hitRenderInstructions_ ||\n        this.hitRenderInstructions_.length !== totalHitInstructionsCount\n      ) {\n        this.hitRenderInstructions_ = new Float32Array(\n          totalHitInstructionsCount\n        );\n      }\n    }\n\n    // loop on features to fill the buffer\n    let featureCache, geometry;\n    const tmpCoords = [];\n    const tmpColor = [];\n    let renderIndex = 0;\n    let hitIndex = 0;\n    let hitColor;\n    for (const featureUid in this.featureCache_) {\n      featureCache = this.featureCache_[featureUid];\n      geometry = /** @type {import(\"../../geom\").Point} */ (featureCache.geometry);\n      if (!geometry || geometry.getType() !== GeometryType.POINT) {\n        continue;\n      }\n\n      tmpCoords[0] = geometry.getFlatCoordinates()[0];\n      tmpCoords[1] = geometry.getFlatCoordinates()[1];\n      applyTransform(projectionTransform, tmpCoords);\n\n      hitColor = colorEncodeId(hitIndex + 6, tmpColor);\n\n      this.renderInstructions_[renderIndex++] = tmpCoords[0];\n      this.renderInstructions_[renderIndex++] = tmpCoords[1];\n\n      // for hit detection, the feature uid is saved in the opacity value\n      // and the index of the opacity value is encoded in the color values\n      if (this.hitDetectionEnabled_) {\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[0];\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[0];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[2];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[3];\n        this.hitRenderInstructions_[hitIndex++] = Number(featureUid);\n      }\n\n      // pushing custom attributes\n      let value;\n      for (let j = 0; j < this.customAttributes.length; j++) {\n        value = this.customAttributes[j].callback(\n          featureCache.feature,\n          featureCache.properties\n        );\n        this.renderInstructions_[renderIndex++] = value;\n        if (this.hitDetectionEnabled_) {\n          this.hitRenderInstructions_[hitIndex++] = value;\n        }\n      }\n    }\n\n    /** @type {import('./Layer').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      type: WebGLWorkerMessageType.GENERATE_BUFFERS,\n      renderInstructions: this.renderInstructions_.buffer,\n      customAttributesCount: this.customAttributes.length,\n    };\n    // additional properties will be sent back as-is by the worker\n    message['projectionTransform'] = projectionTransform;\n    this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n    this.renderInstructions_ = null;\n\n    /** @type {import('./Layer').WebGLWorkerGenerateBuffersMessage} */\n    if (this.hitDetectionEnabled_) {\n      const hitMessage = {\n        type: WebGLWorkerMessageType.GENERATE_BUFFERS,\n        renderInstructions: this.hitRenderInstructions_.buffer,\n        customAttributesCount: 5 + this.customAttributes.length,\n      };\n      hitMessage['projectionTransform'] = projectionTransform;\n      hitMessage['hitDetection'] = true;\n      this.worker_.postMessage(hitMessage, [\n        this.hitRenderInstructions_.buffer,\n      ]);\n      this.hitRenderInstructions_ = null;\n    }\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    assert(this.hitDetectionEnabled_, 66);\n    if (!this.hitRenderInstructions_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice()\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const index = colorDecodeId(color);\n    const opacity = this.hitRenderInstructions_[index];\n    const uid = Math.floor(opacity).toString();\n\n    const source = this.getLayer().getSource();\n    const feature = source.getFeatureByUid(uid);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Render the hit detection data to the corresponding render target\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState current frame state\n   */\n  renderHitDetection(frameState) {\n    // skip render entirely if vertex buffers not ready/generated yet\n    if (!this.hitVerticesBuffer_.getSize()) {\n      return;\n    }\n\n    this.hitRenderTarget_.setSize([\n      Math.floor(frameState.size[0] / 2),\n      Math.floor(frameState.size[1] / 2),\n    ]);\n\n    this.helper.useProgram(this.hitProgram_);\n    this.helper.prepareDrawToRenderTarget(\n      frameState,\n      this.hitRenderTarget_,\n      true\n    );\n\n    this.helper.bindBuffer(this.hitVerticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n\n    this.helper.enableAttributes(this.hitDetectionAttributes);\n\n    const renderCount = this.indicesBuffer_.getSize();\n    this.helper.drawElements(0, renderCount);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default WebGLPointsLayerRenderer;\n","/**\n * @module ol/layer/Heatmap\n */\nimport VectorLayer from './Vector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getChangeEventType} from '../Object.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Heatmap extends VectorLayer {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addEventListener(\n      getChangeEventType(Property.GRADIENT),\n      this.handleGradientChanged_\n    );\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {WebGLPointsLayerRenderer} A layer renderer.\n   */\n  createRenderer() {\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: function (feature) {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          }.bind(this),\n        },\n      ],\n      vertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_weight = a_weight;\n        }`,\n      fragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\n        }`,\n      hitVertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n        attribute vec4 a_hitColor;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_hitColor = a_hitColor;\n          v_weight = a_weight;\n        }`,\n      hitFragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          if (alpha < 0.05) {\n            discard;\n          }\n\n          gl_FragColor = v_hitColor;\n        }`,\n      uniforms: {\n        u_size: function () {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        }.bind(this),\n        u_blurSlope: function () {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        }.bind(this),\n      },\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: function () {\n              return this.gradient_;\n            }.bind(this),\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {extend, includes} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/IconAnchorUnits\").default} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/IconAnchorUnits\").default} yunits Units of Y.\n * @property {import(\"../style/IconOrigin.js\").default} origin Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/IconAnchorUnits\").default>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {number}\n */\nlet DEFAULT_IMAGE_SCALE_MULTIPLIER;\n\n/**\n * @type {import(\"../style/Image.js\").default}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, opt_options),\n    ]);\n    if (feature) {\n      return feature;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, opt_options),\n      ]);\n      if (features) {\n        return features;\n      } else {\n        return [];\n      }\n    } else if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, opt_options),\n      ]);\n      if (feature) {\n        return [feature];\n      } else {\n        return [];\n      }\n    } else if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, opt_options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readNameFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source))\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n))\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [opt_options],\n      orderedKeys,\n      this\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    let imageSize = imageStyle.getImageSize();\n    if (imageSize === null) {\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = (imageScale[0] * imageSize[0]) / 2;\n      textOffset[1] = (-imageScale[1] * imageSize[1]) / 2;\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return (\n                  type === GeometryType.POINT ||\n                  type === GeometryType.MULTI_POINT\n                );\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            drawName =\n              type === GeometryType.POINT || type === GeometryType.MULTI_POINT;\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && name.search(/&[^&]+;/) > -1) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n      if (scale === undefined) {\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      flatCoordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(flatCoordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n    lineString.setProperties(properties, true);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, GeometryLayout.XYZ);\n    point.setProperties(properties, true);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    ('fillStyle' in styleObject\n      ? styleObject['fillStyle']\n      : DEFAULT_FILL_STYLE);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = styleObject['imageStyle'];\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    ('textStyle' in styleObject\n      ? styleObject['textStyle']\n      : DEFAULT_TEXT_STYLE);\n  const strokeStyle =\n    /** @type {Stroke} */\n    ('strokeStyle' in styleObject\n      ? styleObject['strokeStyle']\n      : DEFAULT_STROKE_STYLE);\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            return new GeometryCollection(\n              geometry\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type !== GeometryType.POLYGON &&\n                    type !== GeometryType.MULTI_POLYGON\n                  );\n                })\n            );\n          } else if (\n            type !== GeometryType.POLYGON &&\n            type !== GeometryType.MULTI_POLYGON\n          ) {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            return new GeometryCollection(\n              geometry\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type === GeometryType.POLYGON ||\n                    type === GeometryType.MULTI_POLYGON\n                  );\n                })\n            );\n          } else if (\n            type === GeometryType.POLYGON ||\n            type === GeometryType.MULTI_POLYGON\n          ) {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY || layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName']\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value']\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value']\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h'])\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  })\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: IconAnchorUnits.PIXELS,\n          y: size[1] - anchor[1],\n          yunits: IconAnchorUnits.PIXELS,\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ]\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === GeometryType.GEOMETRY_COLLECTION) {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === GeometryType.MULTI_POINT) {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints()\n          );\n        } else if (type === GeometryType.MULTI_LINE_STRING) {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings()\n          );\n        } else if (type === GeometryType.MULTI_POLYGON) {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons()\n          );\n        } else if (\n          type === GeometryType.POINT ||\n          type === GeometryType.LINE_STRING ||\n          type === GeometryType.POLYGON\n        ) {\n          geometries.push(geometry);\n        } else {\n          assert(false, 39); // Unknown geometry type\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_POINT) {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_LINE_STRING) {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_POLYGON) {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === GeometryType.GEOMETRY_COLLECTION) {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type === GeometryType.POINT ||\n                    type === GeometryType.MULTI_POINT\n                  );\n                }).length;\n            }\n            return (\n              type === GeometryType.POINT || type === GeometryType.MULTI_POINT\n            );\n          }\n        });\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === GeometryType.GEOMETRY_COLLECTION) {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return (\n                      type === GeometryType.LINE_STRING ||\n                      type === GeometryType.MULTI_LINE_STRING\n                    );\n                  }).length;\n              }\n              return (\n                type === GeometryType.LINE_STRING ||\n                type === GeometryType.MULTI_LINE_STRING\n              );\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === GeometryType.GEOMETRY_COLLECTION) {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return (\n                      type === GeometryType.POLYGON ||\n                      type === GeometryType.MULTI_POLYGON\n                    );\n                  }).length;\n              }\n              return (\n                type === GeometryType.POLYGON ||\n                type === GeometryType.MULTI_POLYGON\n              );\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport {toSize} from '../size.js';\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {import(\"./TextPlacement.js\").default|string}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {string|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {string|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {string|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {string|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {!Array<number>} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar resolve = require('./bundle-manifest').resolve;\n\nmodule.exports = function (fromId, toId) {\n  return relative(dirname(resolve(fromId)), resolve(toId));\n};\n\nfunction dirname(_filePath) {\n  if (_filePath === '') {\n    return '.';\n  }\n\n  var filePath = _filePath[_filePath.length - 1] === '/' ? _filePath.slice(0, _filePath.length - 1) : _filePath;\n  var slashIndex = filePath.lastIndexOf('/');\n  return slashIndex === -1 ? '.' : filePath.slice(0, slashIndex);\n}\n\nfunction relative(from, to) {\n  if (from === to) {\n    return '';\n  }\n\n  var fromParts = from.split('/');\n\n  if (fromParts[0] === '.') {\n    fromParts.shift();\n  }\n\n  var toParts = to.split('/');\n\n  if (toParts[0] === '.') {\n    toParts.shift();\n  } // Find where path segments diverge.\n\n\n  var i;\n  var divergeIndex;\n\n  for (i = 0; (i < toParts.length || i < fromParts.length) && divergeIndex == null; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      divergeIndex = i;\n    }\n  } // If there are segments from \"from\" beyond the point of divergence,\n  // return back up the path to that point using \"..\".\n\n\n  var parts = [];\n\n  for (i = 0; i < fromParts.length - divergeIndex; i++) {\n    parts.push('..');\n  } // If there are segments from \"to\" beyond the point of divergence,\n  // continue using the remaining segments.\n\n\n  if (toParts.length > divergeIndex) {\n    parts.push.apply(parts, toParts.slice(divergeIndex));\n  }\n\n  return parts.join('/');\n}\n\nmodule.exports._dirname = dirname;\nmodule.exports._relative = relative;","module.exports = require('./bundle-url').getBundleURL() + require('./relative-path')(\"3Wo4N\", \"oaxmK\")","module.exports = require('./bundle-url').getBundleURL() + require('./relative-path')(\"3Wo4N\", \"6la4e\")","import 'ol/ol.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport {Layer, Heatmap} from 'ol/layer';\nimport {composeCssTransform} from 'ol/transform';\nimport VectorSource from 'ol/source/Vector';\nimport {KML} from 'ol/format';\n\n// @ts-ignore\nimport svg from 'url:./data/world.svg';\n// @ts-ignore\nimport earthquakes from 'url:./data/2012_Earthquakes_Mag5.kml';\n\nvar map = new Map({\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    extent: [-180, -90, 180, 90],\n    projection: 'EPSG:4326',\n    zoom: 2\n  })\n});\n\nconst heatmapLayer = new Heatmap({\n  source: new VectorSource({\n    url: earthquakes,\n    format: new KML({\n      extractStyles: false\n    })\n  })\n});\n\nmap.addLayer(heatmapLayer);\n\nvar svgContainer = document.createElement('div');\nvar xhr = new XMLHttpRequest();\nconsole.log(svg)\nxhr.open('GET', svg);\nxhr.addEventListener('load', function() {\n  var svg = xhr.responseXML.documentElement;\n  svgContainer.ownerDocument.importNode(svg, false);\n  svgContainer.appendChild(svg);\n});\nxhr.send();\n\nvar width = 2560;\nvar height = 1280;\nvar svgResolution = 360 / width;\nsvgContainer.style.width = width + 'px';\nsvgContainer.style.height = height + 'px';\nsvgContainer.style.transformOrigin = 'top left';\nsvgContainer.style.position = 'absolute';\nsvgContainer.className = 'svg-layer';\n\nconst svgLayer = new Layer({\n  /**\n   * @param {import(\"ol/PluggableMap\").FrameState} frameState \n   */\n  render: function(frameState) {\n    var scale = svgResolution / frameState.viewState.resolution;\n    var center = frameState.viewState.center;\n    var size = frameState.size;\n    var cssTransform = composeCssTransform(\n      size[0] / 2, size[1] / 2,\n      scale, scale,\n      frameState.viewState.rotation,\n      -center[0] / svgResolution - width / 2, center[1] / svgResolution - height / 2);\n    svgContainer.style.transform = cssTransform;\n    svgContainer.style.opacity = String(svgLayer.getOpacity());\n    return svgContainer;\n  }\n});\n\nmap.addLayer(svgLayer);"],"names":["$7d806a7a603c235ec027b73d847f4d95$var$mapping","$7d806a7a603c235ec027b73d847f4d95$export$357eb1b4f03c1402","pairs","keys","Object","i","length","$7d806a7a603c235ec027b73d847f4d95$export$40339995e8a21591","id","resolved","Error","parcelRequire","register","JSON","parse","$62b4010d0c10d05a6eb5fbcd9e877cb9$var$supportedExtensions","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$4fae3d8ec3d62e0a","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$1115845160c9bee9","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$909515d02f210383","$62b4010d0c10d05a6eb5fbcd9e877cb9$var$CONTEXT_IDS","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$1c9dfb92a34f1fcf","canvas","opt_attributes","ii","context","getContext","e","$02cc97bf01bb3e29729e4a43136299b6$export$ad4b78097bf94d85","$02cc97bf01bb3e29729e4a43136299b6$export$2ced8f41c55fa306","type","Float32Array","Uint32Array","$02cc97bf01bb3e29729e4a43136299b6$export$9099ad97b570f7c","WebGLArrayBuffer","opt_usage","this","array","$1mHUI","assert","usage","undefined","prototype","ofSize","size","fromArray","from","fromArrayBuffer","buffer","getType","getArray","getUsage","getSize","$501d706d50d79bf1747fa2e06c13b468$export$9099ad97b570f7c","$082906594eab2940979815ab9b245f21$export$9099ad97b570f7c","WebGLPostProcessingPass","options","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetTextureLocation_","uniforms_","uniforms","forEach","name","push","value","location","bind","getGL","init","frameState","textureSize","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","viewport","internalFormat","RGBA","format","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","apply","nextPass","activeTexture","TEXTURE0","clearColor","clear","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","HTMLCanvasElement","ImageData","texture","width","height","Uint8Array","data","Array","isArray","uniform3f","uniform4f","uniform1f","$b8f56a2658bfbbbe58c154ca943f14e7$export$e2085a48d9d846ba","mat4","transform","$a213a3ce88096e82b8501ef33f381740$export$9fb8f3e6fc336132","$a213a3ce88096e82b8501ef33f381740$export$9aeec108beb7c801","PROJECTION_MATRIX","OFFSET_SCALE_MATRIX","OFFSET_ROTATION_MATRIX","TIME","ZOOM","RESOLUTION","$a213a3ce88096e82b8501ef33f381740$export$a267a1a615d1668f","UNSIGNED_SHORT","UNSIGNED_INT","$a213a3ce88096e82b8501ef33f381740$export$9f69b31ae6f7009b","attributes","stride","attr","$a213a3ce88096e82b8501ef33f381740$var$getByteSizeFromType","BYTES_PER_ELEMENT","Uint16Array","$a213a3ce88096e82b8501ef33f381740$export$9099ad97b570f7c","_super","WebGLHelper","opt_options","_this","call","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","canvas_","document","createElement","style","position","left","bufferCache_","currentProgram_","$3MevS","includes","getSupportedExtensions","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$8185dc2b04913cae","getExtension","addEventListener","offsetRotateMatrix_","$5ljS4","create","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","name_1","postProcessPasses_","postProcesses","map","options1","shaderCompileErrors_","startTime_","Date","now","$a213a3ce88096e82b8501ef33f381740$var$__extends","bufferKey","$6fegY","getUid","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","buf","bufferCacheEntry","isContextLost","disposeInternal","removeEventListener","prepareDraw","getCanvas","pixelRatio","applyFrameState","prepareDrawToRenderTarget","renderTarget","opt_disableAlphaBlend","getFramebuffer","getTexture","ZERO","drawElements","start","end","elementType","numItems","offsetInBytes","finalizeDraw","rotation","viewState","offsetScaleMatrix","reset","scale","offsetRotateMatrix","rotate","setUniformMatrixValue","setUniformFloatValue","zoom","resolution","HTMLImageElement","prevValue","complete","program","source","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","message","getShaderInfoLog","deleteShader","getProgramParameter","LINK_STATUS","getAttributeLocation","makeProjectionTransform","center","compose","uniformMatrix4fv","enableAttributeArray_","attribName","offset","enableAttributes","$6RQ94","opt_data","opt_texture","$7xsVg","default","$52492a5d5a5cf9f2155f89c2c989fa4d$export$f35e0f0520ed8c07","GENERATE_BUFFERS","$52492a5d5a5cf9f2155f89c2c989fa4d$var$WebGLLayerRenderer","WebGLLayerRenderer","layer","helper","$a213a3ce88096e82b8501ef33f381740$exports","className","$52492a5d5a5cf9f2155f89c2c989fa4d$var$__extends","dispose","dispatchRenderEvent_","getLayer","hasListener","event_1","$OadRJ","dispatchEvent","preRender","$4uxJu","PRERENDER","postRender","POSTRENDER","$5iuGx","$52492a5d5a5cf9f2155f89c2c989fa4d$var$tmpArray_","$52492a5d5a5cf9f2155f89c2c989fa4d$var$bufferPositions_","vertexPosition","indexPosition","$52492a5d5a5cf9f2155f89c2c989fa4d$var$writePointVertex","pos","x","y","index","$52492a5d5a5cf9f2155f89c2c989fa4d$export$402a9517d8d9fb90","instructions","elementIndex","vertexBuffer","indexBuffer","customAttributesCount","bufferPositions","customAttrs","vPos","iPos","baseIndex","set","$52492a5d5a5cf9f2155f89c2c989fa4d$export$d2530fde2918c51d","image","createImageData","$52492a5d5a5cf9f2155f89c2c989fa4d$export$89728eb3e9a820de","opt_array","radix","divide","Math","floor","$52492a5d5a5cf9f2155f89c2c989fa4d$export$4a313f27a0e30974","color","mult","round","$52492a5d5a5cf9f2155f89c2c989fa4d$export$9099ad97b570f7c","$f64fa72ac4564efa0d58e5ad5fee1414$var$tmpArray4","$f64fa72ac4564efa0d58e5ad5fee1414$export$9099ad97b570f7c","WebGLRenderTarget","opt_size","helper_","texture_","framebuffer_","size_","data_","dataCacheDirty_","updateSize_","setSize","equals","clearCachedData","readAll","readPixels","readPixel","$9d3e887f16ae055cd8da2de24c5566f6$var$blob","Blob","$9d3e887f16ae055cd8da2de24c5566f6$var$url","URL","createObjectURL","$971f56de0b1cde93924292a879dc7bb9$export$9099ad97b570f7c","WebGLPointsLayerRenderer","projectionMatrixTransform","DefaultUniform","sourceRevision_","verticesBuffer_","hitVerticesBuffer_","indicesBuffer_","program_","hitDetectionEnabled_","hitFragmentShader","hitVertexShader","hitProgram_","customAttributes","attribute","AttributeType","concat","hitDetectionAttributes","previousExtent_","$4lmw7","createEmpty","currentTransform_","renderTransform_","invertRenderTransform_","renderInstructions_","hitRenderInstructions_","hitRenderTarget_","worker_","Worker","event","received","$52492a5d5a5cf9f2155f89c2c989fa4d$exports","WebGLWorkerMessageType","projectionTransform","hitDetection","makeInverse","renderInstructions","changed","featureCache_","featureCount_","getSource","sourceListenKeys_","$3H2uZ","listen","$2irPz","ADDFEATURE","handleSourceFeatureAdded_","CHANGEFEATURE","handleSourceFeatureChanged_","REMOVEFEATURE","handleSourceFeatureDelete_","CLEAR","handleSourceFeatureClear_","forEachFeature","feature","properties","getProperties","geometry","getGeometry","$971f56de0b1cde93924292a879dc7bb9$var$__extends","renderFrame","renderCount","opacity","layerStatesArray","layerIndex","parseFloat","String","renderHitDetection","prepareFrame","vectorSource","viewNotMoving","viewHints","$3dwRD","ANIMATING","INTERACTING","extentChanged","extent","sourceChanged","getRevision","projection","renderBuffer","$6isWD","getRenderBuffer","loadFeatures","rebuildBuffers_","slice","multiply","featureCache","totalInstructionsCount","totalHitInstructionsCount","hitColor","tmpCoords","tmpColor","renderIndex","hitIndex","featureUid","$1gVIf","POINT","getFlatCoordinates","colorEncodeId","Number","j","callback","postMessage","hitMessage","forEachFeatureAtCoordinate","coordinate","hitTolerance","matches","pixel","coordinateToPixelTransform","colorDecodeId","uid","toString","getFeatureByUid","terminate","layer_","key","unlistenByKey","$4e846b5067287bfa27b20cce73a80019$var$Property","$4e846b5067287bfa27b20cce73a80019$var$DEFAULT_GRADIENT","$4e846b5067287bfa27b20cce73a80019$export$9099ad97b570f7c","Heatmap","baseOptions","assign","gradient","radius","blur","weight","gradient_","$4ZHam","getChangeEventType","handleGradientChanged_","setGradient","setBlur","setRadius","weightFunction_","get","setRenderOrder","$4e846b5067287bfa27b20cce73a80019$var$__extends","getBlur","getGradient","getRadius","colors","$4eVqD","createCanvasContext2D","createLinearGradient","step","addColorStop","fillStyle","fillRect","$4e846b5067287bfa27b20cce73a80019$var$createGradient","createRenderer","$971f56de0b1cde93924292a879dc7bb9$exports","getClassName","$4qq0p","clamp","u_size","u_blurSlope","max","u_gradientTexture","renderDeclutter","$1rnY9","$0c87ec0f12a2b62262bf5859757b8a2b$export$9099ad97b570f7c","MultiPoint","coordinates","opt_layout","setFlatCoordinates","setCoordinates","$0c87ec0f12a2b62262bf5859757b8a2b$var$__extends","appendPoint","point","flatCoordinates","extend","clone","multiPoint","layout","applyProperties","closestPointXY","closestPoint","minSquaredDistance","closestSquaredDistanceXY","getExtent","squaredDistance","getCoordinates","$5X4hW","inflateCoordinates","getPoint","n","$5g6wp","getPoints","points","MULTI_POINT","intersectsExtent","containsXY","setLayout","$6X6IT","deflateCoordinates","$2FGG8","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_COLOR","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_ANCHOR","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_SIZE","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_SRC","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_SCALE_MULTIPLIER","$3f89ce735a32ce0bc16220a89ae67b2f$export$9099ad97b570f7c","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","maxDelta_","maxDeltaRevision_","orientedRevision_","orientedFlatCoordinates_","getLayout","polygons","endss","polygon","ends","getEnds","jj","$3f89ce735a32ce0bc16220a89ae67b2f$var$__extends","appendPolygon","len","newEndss","multiPolygon","sqrt","$3QyYH","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","getOrientedFlatCoordinates","$3v8bp","linearRingssContainsXY","getArea","$3B90O","linearRingss","opt_right","$2wxLi","orientLinearRingsArray","inflateMultiCoordinatesArray","getEndss","getFlatInteriorPoints","flatCenters","createOrUpdateFromFlatCoordinates","$8080d3a1460a7f67662c4a8e92d86a37$export$3ed76a8ff8a671c","$39fh1","getInteriorPointsOfMultiArray","getInteriorPoints","$0c87ec0f12a2b62262bf5859757b8a2b$exports","$3dG11","XYM","linearRingssAreOriented","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEndss","$4YdW9","quantizeMultiArray","XY","getPolygon","prevEnds","$5QgBH","getPolygons","MULTI_POLYGON","$1xC0k","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","$a62309e79bc84bd3b6b5fbbfdb8ce983$export$9099ad97b570f7c","Text1","font_","font","rotation_","rotateWithView_","rotateWithView","scale_","scaleArray_","$43BI1","toSize","text_","text","textAlign_","textAlign","textBaseline_","textBaseline","fill_","fill","$6Spvy","maxAngle_","maxAngle","PI","placement_","placement","$7iFu4","overflow_","overflow","stroke_","stroke","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getScale","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getText","getTextAlign","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","getScaleArray","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRotateWithView","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_NAMESPACE_URIS","$23a4f6aded846ad8aacbf1f3eca76e14$var$NAMESPACE_URIS","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_ANCHOR_UNITS_MAP","$17PKZ","FRACTION","PIXELS","$23a4f6aded846ad8aacbf1f3eca76e14$var$PLACEMARK_PARSERS","$6u7wO","makeStructureNS","$23a4f6aded846ad8aacbf1f3eca76e14$var$extendedDataParser","$23a4f6aded846ad8aacbf1f3eca76e14$var$regionParser","makeObjectPropertySetter","$23a4f6aded846ad8aacbf1f3eca76e14$var$readMultiGeometry","$23a4f6aded846ad8aacbf1f3eca76e14$var$readLineString","$23a4f6aded846ad8aacbf1f3eca76e14$var$readLinearRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$readPoint","$23a4f6aded846ad8aacbf1f3eca76e14$var$readPolygon","$23a4f6aded846ad8aacbf1f3eca76e14$var$readStyle","node","objectStack","styleMapValue","$23a4f6aded846ad8aacbf1f3eca76e14$var$readStyleMapValue","placemarkObject","$4pjCM","readString","readBoolean","$23a4f6aded846ad8aacbf1f3eca76e14$var$readStyleURL","lineStrings","pushParseAndPop","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_MULTITRACK_GEOMETRY_PARSERS","$4LOxL","$23a4f6aded846ad8aacbf1f3eca76e14$var$readGxTrack","$23a4f6aded846ad8aacbf1f3eca76e14$var$NETWORK_LINK_PARSERS","parseNode","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINK_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$readURI","$23a4f6aded846ad8aacbf1f3eca76e14$var$REGION_PARSERS","object","$23a4f6aded846ad8aacbf1f3eca76e14$var$LAT_LON_ALT_BOX_PARSERS","regionObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$LOD_PARSERS","lodObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$KML_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$KML_SERIALIZERS","makeChildAppender","features","pushSerializeAndPop","$23a4f6aded846ad8aacbf1f3eca76e14$var$DOCUMENT_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$DOCUMENT_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$writePlacemark","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_FILL_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$e46f11a75191a508","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_NO_IMAGE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$5e32ef4fe86c9590","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_TEXT_STROKE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_STROKE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$886aac8f642d518","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_TEXT_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$4f723e646af0caaf","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$2aa7b16944fbd366","$23a4f6aded846ad8aacbf1f3eca76e14$var$TEXTAREA","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_STYLE_ARRAY","$23a4f6aded846ad8aacbf1f3eca76e14$export$e0735583683f1e35","$23a4f6aded846ad8aacbf1f3eca76e14$var$defaultIconUrlFunction","href","$23a4f6aded846ad8aacbf1f3eca76e14$var$KML","KML","$2mZBT","anchor","anchorOrigin","$67wV0","BOTTOM_LEFT","anchorXUnits","anchorYUnits","crossOrigin","src","$2k3WA","$5w8pN","zIndex","dataProjection","$2vjin","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","crossOrigin_","iconUrlFunction_","iconUrlFunction","$23a4f6aded846ad8aacbf1f3eca76e14$var$__extends","readDocumentOrFolder_","parsersNS","makeArrayExtender","makeArrayPusher","readPlacemark_","readSharedStyle_","readSharedStyleMap_","$7JkHi","getAttribute","setId","$2rUWQ","transformGeometryWithOptions","setGeometry","styleFunction","styleUrl","sharedStyles","drawName","multiGeometryPoints","GEOMETRY_COLLECTION","getGeometriesArrayRecursive","filter","geometry1","type1","search","innerHTML","featureStyle","$23a4f6aded846ad8aacbf1f3eca76e14$var$findStyle","nameStyle","foundStyle","textOffset","imageStyle","getImage","imageSize","getImageSize","imageScale","textStyle","$23a4f6aded846ad8aacbf1f3eca76e14$var$createNameStyleFunction","$4eboh","$23a4f6aded846ad8aacbf1f3eca76e14$var$createFeatureStyleFunction","setStyle","setProperties","styleUri","baseURI","window","readFeatureFromNode","namespaceURI","getReadOptions","readFeaturesFromNode","localName","firstElementChild","nextElementSibling","fs","readName","doc","readNameFromDocument","isDocument","readNameFromNode","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","name_2","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","obj","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeFeaturesNode","adaptOptions","kml","createElementNS","xmlnsUri","setAttributeNS","XML_SCHEMA_INSTANCE_URI","orderedKeys","values","makeSequence","OBJECT_PROPERTY_NODE_FACTORY","$6MnPI","styleValue","$23a4f6aded846ad8aacbf1f3eca76e14$var$readColor","s","getAllTextContent","m","exec","hexColor","parseInt","substr","$23a4f6aded846ad8aacbf1f3eca76e14$export$1744e74078e3fa10","replace","re","z","trim","$23a4f6aded846ad8aacbf1f3eca76e14$var$readScale","readDecimal","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_MAP_PARSERS","pairObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$PAIR_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_STYLE_PARSERS","iconObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_PARSERS","origin","xunits","yunits","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","$23a4f6aded846ad8aacbf1f3eca76e14$var$LABEL_STYLE_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STYLE_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLY_STYLE_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$FLAT_LINEAR_RING_PARSERS","makeReplacer","$23a4f6aded846ad8aacbf1f3eca76e14$var$readFlatLinearRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_TRACK_PARSERS","whens","when","isNaN","gxTrackObject","min","$7oM0w","XYZM","$23a4f6aded846ad8aacbf1f3eca76e14$var$GEOMETRY_FLAT_COORDINATES_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$readFlatCoordinatesFromNode","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTRUDE_AND_ALTITUDE_MODE_PARSERS","lineString","XYZ","$23a4f6aded846ad8aacbf1f3eca76e14$var$MULTI_GEOMETRY_PARSERS","multiGeometry","geometries","homogeneous","$23a4f6aded846ad8aacbf1f3eca76e14$var$setCommonGeometryProperties","LINE_STRING","POLYGON","$3f89ce735a32ce0bc16220a89ae67b2f$exports","$23a4f6aded846ad8aacbf1f3eca76e14$var$FLAT_LINEAR_RINGS_PARSERS","flatLinearRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$INNER_BOUNDARY_IS_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$OUTER_BOUNDARY_IS_PARSERS","flatLinearRings","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_PARSERS","styleObject","IconObject","drawIcon","hotSpot","test","w","h","heading","toRadians","offsetOrigin","strokeStyle","outline","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","$23a4f6aded846ad8aacbf1f3eca76e14$var$DATA_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTENDED_DATA_PARSERS","featureObject","displayName","$23a4f6aded846ad8aacbf1f3eca76e14$var$SCHEMA_DATA_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeColorTextNode","rgba","$6KuGy","asArray","abgr","hex","writeStringTextNode","join","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTENDEDDATA_NODE_SERIALIZERS","pair","setAttribute","writeCDATASection","opt_nodeName","parentNode","$23a4f6aded846ad8aacbf1f3eca76e14$var$DATA_NODE_FACTORY","makeSimpleNodeFactory","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_SERIALIZERS","writeDecimalTextNode","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_STYLE_SERIALIZERS","icon","vec2","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeScaleTextNode","$23a4f6aded846ad8aacbf1f3eca76e14$var$LABEL_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$LABEL_STYLE_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STYLE_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$GEOMETRY_TYPE_TO_NODENAME","$23a4f6aded846ad8aacbf1f3eca76e14$var$GEOMETRY_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$POINT_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STRING_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINEAR_RING_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLYGON_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$MULTI_GEOMETRY_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$writePrimitiveGeometry","$23a4f6aded846ad8aacbf1f3eca76e14$var$writePolygon","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeMultiGeometry","factory","MULTI_LINE_STRING","getLineStrings","$23a4f6aded846ad8aacbf1f3eca76e14$var$BOUNDARY_IS_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeBoundaryIs","linearRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$PLACEMARK_SERIALIZERS","namesAndValues","names","styles","pointStyles","getSrc","lineStyles","polyStyles","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_SERIALIZERS","writeBooleanTextNode","$23a4f6aded846ad8aacbf1f3eca76e14$var$PLACEMARK_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTENDEDDATA_NODE_FACTORY","getId","getGeometryName","sort","v","getStyleFunction","styleArray","getGeometryFunction","$23a4f6aded846ad8aacbf1f3eca76e14$var$PRIMITIVE_GEOMETRY_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$PRIMITIVE_GEOMETRY_SERIALIZERS","dimension","d","getStride","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLY_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLYGON_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$INNER_BOUNDARY_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$OUTER_BOUNDARY_NODE_FACTORY","linearRings","getLinearRings","outerRing","shift","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLY_STYLE_SERIALIZERS","iconImageSize","iconProperties","getAnchor","origin_1","getOrigin","getColor","getWidth","$23a4f6aded846ad8aacbf1f3eca76e14$export$9099ad97b570f7c","$634f916bc30b7d6650877f3f4b6a8b3a$var$bundleURL","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBaseURL","url","$634f916bc30b7d6650877f3f4b6a8b3a$export$da289beea9c5b10d","err","stack","match","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBundleURL","resolve","$824bc590bf0a3702ac7bd27152cb0639$var$dirname","_filePath","filePath","slashIndex","lastIndexOf","$824bc590bf0a3702ac7bd27152cb0639$var$relative","to","fromParts","split","divergeIndex","toParts","parts","module","exports","fromId","toId","$824bc590bf0a3702ac7bd27152cb0639$require$resolve","_dirname","_relative","$a6fae0d1f95d1013d47a2666e4cc73f5$exports","getBundleURL","$8b0a2675c277baedbee1394c1e452c41$exports","$5e53b1d105b5ca139e315a45c8d64a63$var$map","$4BFFB","target","view","$N1rY5","$5e53b1d105b5ca139e315a45c8d64a63$var$heatmapLayer","$4e846b5067287bfa27b20cce73a80019$exports","$3CnQS","$parcel$interopDefault","$23a4f6aded846ad8aacbf1f3eca76e14$exports","addLayer","$5e53b1d105b5ca139e315a45c8d64a63$var$svgContainer","$5e53b1d105b5ca139e315a45c8d64a63$var$xhr","XMLHttpRequest","console","log","open","svg","responseXML","documentElement","ownerDocument","importNode","appendChild","send","$5e53b1d105b5ca139e315a45c8d64a63$var$svgResolution","$5e53b1d105b5ca139e315a45c8d64a63$var$width","$5e53b1d105b5ca139e315a45c8d64a63$var$height","transformOrigin","$5e53b1d105b5ca139e315a45c8d64a63$var$svgLayer","$Lzmdv","render","cssTransform","composeCssTransform","getOpacity"],"version":3,"file":"mixed-renderers.04944451.js.map"}